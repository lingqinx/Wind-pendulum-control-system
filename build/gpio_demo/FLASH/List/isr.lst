###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      15/Aug/2015  20:51:58 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\MPU60508.12\src\projects\ #
#                    gpio_demo\isr.c                                          #
#    Command line =  C:\Users\Administrator\Desktop\MPU60508.12\src\projects\ #
#                    gpio_demo\isr.c -lCN C:\Users\Administrator\Desktop\MPU6 #
#                    0508.12\build\gpio_demo\FLASH\List\ -lB                  #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\List\ -o C:\Users\Administrator\Desktop\MPU6050 #
#                    8.12\build\gpio_demo\FLASH\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\IAR Systems\Embedded     #
#                    Workbench 6.5\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\ -I C:\Users\Administrator\Desktop\MPU60508.12\bui #
#                    ld\gpio_demo\..\..\src\common\ -I                        #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\cpu\ -I C:\Users\Administrator\Desktop\MPU6 #
#                    0508.12\build\gpio_demo\..\..\src\drivers\ -I            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\gpio\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\flash\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\olcd\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\diskio\ -I                          #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\iospi\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\wdog\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\mcg\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\flash\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\uart\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\lptmr\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\LED\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\fun\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\FTM\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\pit\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\DIPswitch\ -I                       #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\steer\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\motor\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\laser\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\i2c\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\ADdevice\ -I                        #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\adc\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\serial_digtal_scope\ -I             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\MMA845x\ -I                         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\exti\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\dma\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\platforms\ -I C:\Users\Administrator\Deskto #
#                    p\MPU60508.12\build\gpio_demo\..\..\src\projects\ -I     #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\projects\gpio_demo\ -I                      #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\MPU6050\ -I                         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\steer\ -Ol                          #
#    List file    =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\List\isr.lst                                    #
#    Object file  =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\Obj\isr.o                                       #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\MPU60508.12\src\projects\gpio_demo\isr.c
      1          #include "common.h"
      2          #include "include.h"
      3          #include "math.h"
      4           
      5          /**********************************************************************************
      6          *  函数名称：void UART0_IRQHandler()
      7          *  功能说明：串口中断处理函数
      8          *  参数说明：无
      9          *  函数返回：无
     10          *  修改时间：2014-6-16  wuwenqi
     11          *  备    注：
     12          **********************************************************************************/	
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void UART0_IRQHandler(void)
     15          {
   \                     UART0_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     16            uint8 ch;
     17          
     18            //接收一个字节数据并回发
     19             ch=uartRecvChar (UART0);      
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x.... 0x....      BL       uartRecvChar
     20             uart0Printf("Input = %c\n",ch);
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x0001             MOVS     R1,R0
   \   0000000C   0x....             LDR.N    R0,??DataTable0
   \   0000000E   0x.... 0x....      BL       uart0Printf
     21          /*
     22            switch(ch){
     23              //这里写发送给单片机的指令
     24            case '0':
     25              show_photo_data_flag = 1;
     26               
     27            break;
     28            case 'p':
     29              show_data_flag = 1;    
     30            break;
     31            case '9':
     32              show_photo_data_flag = 2;
     33              if( show_photo_data_flag == 2)
     34               {
     35                  show_photo();
     36                  show_photo_data_flag = 0;
     37               }    
     38            break;
     39            case '3':
     40              show_photo_data_flag = 3;
     41               if( show_photo_data_flag == 3)
     42               {
     43                  uartPrintf("***************true_speed_L*******************\n ");
     44                 for(int i=0;i<=ab;i++)
     45                    uartPrintf("%d ",shuzu[i]);
     46                 uartPrintf("***************true_speed_R*******************\n ");
     47                 for(int i=0;i<=ab;i++)
     48                    uartPrintf("%d ",shuzuL[i]);
     49                 uartPrintf("***************bongbong*******************\n ");
     50                 for(int i=0;i<=ab;i++)
     51                    uartPrintf("%d ",shuzuR[i]);
     52                  show_photo_data_flag = 0;
     53               }    
     54            break;
     55            case '4':
     56              show_photo_data_flag = 4;    
     57            break;
     58            case '5':
     59              show_photo_data_flag = 5;    
     60              break;
     61            case'6':
     62              show_photo_flagg = 1;   
     63            case 'r':
     64              show_photo_data_flag = 6;    
     65              break;
     66            case 's':
     67              show_photo_data_flag = 7;  
     68              PIT_IRQ_DIS(PIT0);
     69              
     70              PWMSetMotor2(0,0);
     71              
     72              break;
     73             case '8':
     74              show_photo_data_flag = 8;    
     75              break;
     76           
     77            default:
     78              break;
     79            }
     80            show_parameter_flag = 1; // 显示输出信息*/
     81          }
   \   00000012   0xBD01             POP      {R0,PC}          ;; return
     82          
     83              
     84          
     85          

   \                                 In section .data, align 4
     86          int l_60_xzm = 11;
   \                     l_60_xzm:
   \   00000000   0x0000000B         DC32 11

   \                                 In section .data, align 4
     87          int h_60_xzm = 349;
   \                     h_60_xzm:
   \   00000000   0x0000015D         DC32 349

   \                                 In section .data, align 4
     88          int b_60_xzm = 9500;
   \                     b_60_xzm:
   \   00000000   0x0000251C         DC32 9500
     89          

   \                                 In section .data, align 4
     90          int l_4_xzm = 5;
   \                     l_4_xzm:
   \   00000000   0x00000005         DC32 5

   \                                 In section .data, align 4
     91          int h_4_xzm = 355;
   \                     h_4_xzm:
   \   00000000   0x00000163         DC32 355

   \                                 In section .data, align 4
     92          int b_4_xzm = 10000;
   \                     b_4_xzm:
   \   00000000   0x00002710         DC32 10000
     93          

   \                                 In section .text, align 4, keep-with-next
     94          void UART3_IRQHandler(void)
     95          {
   \                     UART3_IRQHandler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     96            uint8 ch;
     97            
     98            //接收一个字节数据并回发
     99            if(number_xzm == 2 || number_xzm == 1)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \   00000002   0xF8DF 0x0B8C      LDR.W    R0,??UART3_IRQHandler_0
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x2802             CMP      R0,#+2
   \   0000000A   0xD005             BEQ.N    ??UART3_IRQHandler_1
   \   0000000C   0xF8DF 0x0B80      LDR.W    R0,??UART3_IRQHandler_0
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2801             CMP      R0,#+1
   \   00000014   0xF040 0x839D      BNE.W    ??UART3_IRQHandler_2
    100            {
    101              
    102              int x=distance_xzm;
   \                     ??UART3_IRQHandler_1: (+1)
   \   00000018   0xF8DF 0x0B78      LDR.W    R0,??UART3_IRQHandler_0+0x4
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
    103              if(x>=50)
   \   0000001E   0x2832             CMP      R0,#+50
   \   00000020   0xDB00             BLT.N    ??UART3_IRQHandler_3
    104                x=x+3;
   \   00000022   0x1CC0             ADDS     R0,R0,#+3
    105             if(number_xzm == 2) 
   \                     ??UART3_IRQHandler_3: (+1)
   \   00000024   0xF8DF 0x1B68      LDR.W    R1,??UART3_IRQHandler_0
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x2902             CMP      R1,#+2
   \   0000002C   0xD10F             BNE.N    ??UART3_IRQHandler_4
    106             {
    107             l_60_xzm = x/5-1; 
   \   0000002E   0x2105             MOVS     R1,#+5
   \   00000030   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000034   0x1E40             SUBS     R0,R0,#+1
   \   00000036   0xF8DF 0x1B60      LDR.W    R1,??UART3_IRQHandler_0+0x8
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    108             h_60_xzm = 360 - l_60_xzm;
   \   0000003C   0xF8DF 0x0B58      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF5D0 0x70B4      RSBS     R0,R0,#+360
   \   00000046   0xF8DF 0x1B54      LDR.W    R1,??UART3_IRQHandler_0+0xC
   \   0000004A   0x6008             STR      R0,[R1, #+0]
   \   0000004C   0xE008             B.N      ??UART3_IRQHandler_5
    109             }
    110             else
    111             {
    112               l_60_xzm = 11;
   \                     ??UART3_IRQHandler_4: (+1)
   \   0000004E   0xF8DF 0x0B48      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   00000052   0x210B             MOVS     R1,#+11
   \   00000054   0x6001             STR      R1,[R0, #+0]
    113               h_60_xzm = 349;
   \   00000056   0xF8DF 0x0B44      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   0000005A   0xF240 0x115D      MOVW     R1,#+349
   \   0000005E   0x6001             STR      R1,[R0, #+0]
    114             }
    115             
    116             ch=uartRecvChar (UART3);
   \                     ??UART3_IRQHandler_5: (+1)
   \   00000060   0x2003             MOVS     R0,#+3
   \   00000062   0x.... 0x....      BL       uartRecvChar
   \   00000066   0x0004             MOVS     R4,R0
    117             
    118             FTM_PWM_Duty(FTM0,CH2,100);
   \   00000068   0x2264             MOVS     R2,#+100
   \   0000006A   0x2102             MOVS     R1,#+2
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       FTM_PWM_Duty
    119             FTM_PWM_Duty(FTM0,CH3,100);
   \   00000072   0x2264             MOVS     R2,#+100
   \   00000074   0x2103             MOVS     R1,#+3
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       FTM_PWM_Duty
    120             
    121             if(ch == 0x55)
   \   0000007C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007E   0x2C55             CMP      R4,#+85
   \   00000080   0xD11A             BNE.N    ??UART3_IRQHandler_6
    122             {
    123                 edge_xzm = 1;
   \   00000082   0xF8DF 0x0DF8      LDR.W    R0,??UART3_IRQHandler_7
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0x6001             STR      R1,[R0, #+0]
    124                 w_xzm = 0;
   \   0000008A   0xF8DF 0x0B14      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x6001             STR      R1,[R0, #+0]
    125                 a_xzm = 0;
   \   00000092   0xF8DF 0x0B10      LDR.W    R0,??UART3_IRQHandler_0+0x14
   \   00000096   0x2100             MOVS     R1,#+0
   \   00000098   0x6001             STR      R1,[R0, #+0]
    126                 count_xzm = 1;
   \   0000009A   0xF8DF 0x0B0C      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x6001             STR      R1,[R0, #+0]
    127                 code_xzm[0] = 0x42;
   \   000000A2   0xF8DF 0x0B08      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   000000A6   0x2142             MOVS     R1,#+66
   \   000000A8   0x7001             STRB     R1,[R0, #+0]
    128                 code_xzm[count_xzm] = ch;
   \   000000AA   0xF8DF 0x0AFC      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000000AE   0x6800             LDR      R0,[R0, #+0]
   \   000000B0   0xF8DF 0x1AF8      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000000B4   0x5444             STRB     R4,[R0, R1]
   \   000000B6   0xE34C             B.N      ??UART3_IRQHandler_2
    129             }
    130             else if(edge_xzm == 1 && ch == 0x53)
   \                     ??UART3_IRQHandler_6: (+1)
   \   000000B8   0xF8DF 0x0DC0      LDR.W    R0,??UART3_IRQHandler_7
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0x2801             CMP      R0,#+1
   \   000000C0   0xD114             BNE.N    ??UART3_IRQHandler_8
   \   000000C2   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000C4   0x2C53             CMP      R4,#+83
   \   000000C6   0xD111             BNE.N    ??UART3_IRQHandler_8
    131             {
    132                 count_xzm = count_xzm + 1;
   \   000000C8   0xF8DF 0x0ADC      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x1C40             ADDS     R0,R0,#+1
   \   000000D0   0xF8DF 0x1AD4      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   000000D4   0x6008             STR      R0,[R1, #+0]
    133                 code_xzm[count_xzm] = ch;
   \   000000D6   0xF8DF 0x0AD0      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0xF8DF 0x1ACC      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000000E0   0x5444             STRB     R4,[R0, R1]
    134                 a_xzm = 1;
   \   000000E2   0xF8DF 0x0AC0      LDR.W    R0,??UART3_IRQHandler_0+0x14
   \   000000E6   0x2101             MOVS     R1,#+1
   \   000000E8   0x6001             STR      R1,[R0, #+0]
   \   000000EA   0xE332             B.N      ??UART3_IRQHandler_2
    135             }
    136             else if(edge_xzm == 1 && ch == 0x52)
   \                     ??UART3_IRQHandler_8: (+1)
   \   000000EC   0xF8DF 0x0D8C      LDR.W    R0,??UART3_IRQHandler_7
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x2801             CMP      R0,#+1
   \   000000F4   0xD114             BNE.N    ??UART3_IRQHandler_9
   \   000000F6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000F8   0x2C52             CMP      R4,#+82
   \   000000FA   0xD111             BNE.N    ??UART3_IRQHandler_9
    137             {
    138                 count_xzm = count_xzm + 1;
   \   000000FC   0xF8DF 0x0AA8      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x1C40             ADDS     R0,R0,#+1
   \   00000104   0xF8DF 0x1AA0      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   00000108   0x6008             STR      R0,[R1, #+0]
    139                 code_xzm[count_xzm] = ch;
   \   0000010A   0xF8DF 0x0A9C      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF8DF 0x1A98      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   00000114   0x5444             STRB     R4,[R0, R1]
    140                 w_xzm = 1;
   \   00000116   0xF8DF 0x0A88      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   0000011A   0x2101             MOVS     R1,#+1
   \   0000011C   0x6001             STR      R1,[R0, #+0]
   \   0000011E   0xE318             B.N      ??UART3_IRQHandler_2
    141             }
    142             
    143             else
    144             {
    145               edge_xzm = 0;
   \                     ??UART3_IRQHandler_9: (+1)
   \   00000120   0xF8DF 0x0D58      LDR.W    R0,??UART3_IRQHandler_7
   \   00000124   0x2100             MOVS     R1,#+0
   \   00000126   0x6001             STR      R1,[R0, #+0]
    146               if(w_xzm == 1)//角速度
   \   00000128   0xF8DF 0x0A74      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x2801             CMP      R0,#+1
   \   00000130   0xF040 0x81B9      BNE.W    ??UART3_IRQHandler_10
    147               {
    148                 if(count_xzm < 11)
   \   00000134   0xF8DF 0x0A70      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x280B             CMP      R0,#+11
   \   0000013C   0xDA0C             BGE.N    ??UART3_IRQHandler_11
    149                 {
    150                    count_xzm = count_xzm + 1;
   \   0000013E   0xF8DF 0x0A68      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0x1C40             ADDS     R0,R0,#+1
   \   00000146   0xF8DF 0x1A60      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   0000014A   0x6008             STR      R0,[R1, #+0]
    151                    code_xzm[count_xzm] = ch;  
   \   0000014C   0xF8DF 0x0A58      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0xF8DF 0x1A58      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   00000156   0x5444             STRB     R4,[R0, R1]
    152                 }
    153                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_11: (+1)
   \   00000158   0xF8DF 0x0A4C      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x280B             CMP      R0,#+11
   \   00000160   0xF040 0x81A1      BNE.W    ??UART3_IRQHandler_10
    154                 {
    155                   wx_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*2000.0;
   \   00000164   0xF8DF 0x0A44      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   00000168   0x7900             LDRB     R0,[R0, #+4]
   \   0000016A   0xF8DF 0x1A40      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   0000016E   0x78C9             LDRB     R1,[R1, #+3]
   \   00000170   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000174   0x.... 0x....      BL       __aeabi_i2d
   \   00000178   0x2200             MOVS     R2,#+0
   \   0000017A   0xF8DF 0x3D44      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   0000017E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000182   0x2200             MOVS     R2,#+0
   \   00000184   0xF8DF 0x3D3C      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000188   0x.... 0x....      BL       __aeabi_dmul
   \   0000018C   0xF8DF 0x2D38      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   00000190   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    156                   wy_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*2000.0;
   \   00000194   0xF8DF 0x0A14      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   00000198   0x7980             LDRB     R0,[R0, #+6]
   \   0000019A   0xF8DF 0x1A10      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   0000019E   0x7949             LDRB     R1,[R1, #+5]
   \   000001A0   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000001A4   0x.... 0x....      BL       __aeabi_i2d
   \   000001A8   0x2200             MOVS     R2,#+0
   \   000001AA   0xF8DF 0x3D14      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000001AE   0x.... 0x....      BL       __aeabi_ddiv
   \   000001B2   0x2200             MOVS     R2,#+0
   \   000001B4   0xF8DF 0x3D0C      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   000001B8   0x.... 0x....      BL       __aeabi_dmul
   \   000001BC   0xF8DF 0x2D0C      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   000001C0   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    157                   wz_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*2000.0;
   \   000001C4   0xF8DF 0x09E4      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   000001C8   0x7A00             LDRB     R0,[R0, #+8]
   \   000001CA   0xF8DF 0x19E0      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000001CE   0x79C9             LDRB     R1,[R1, #+7]
   \   000001D0   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000001D4   0x.... 0x....      BL       __aeabi_i2d
   \   000001D8   0x2200             MOVS     R2,#+0
   \   000001DA   0xF8DF 0x3CE4      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000001DE   0x.... 0x....      BL       __aeabi_ddiv
   \   000001E2   0x2200             MOVS     R2,#+0
   \   000001E4   0xF8DF 0x3CDC      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   000001E8   0x.... 0x....      BL       __aeabi_dmul
   \   000001EC   0x.... 0x....      LDR.W    R2,??DataTable1
   \   000001F0   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    158                   
    159                   //算角速度
    160                   if(wx_xzm>2000)
   \   000001F4   0xF8DF 0x2CD0      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   000001F8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000001FC   0x2201             MOVS     R2,#+1
   \   000001FE   0xF8DF 0x3CC4      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000202   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000206   0xD80C             BHI.N    ??UART3_IRQHandler_13
    161                     wx_xzm = wx_xzm - 4000;
   \   00000208   0xF8DF 0x0CBC      LDR.W    R0,??UART3_IRQHandler_12+0x8
   \   0000020C   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000210   0x2000             MOVS     R0,#+0
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000216   0x.... 0x....      BL       __aeabi_dadd
   \   0000021A   0xF8DF 0x2CAC      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   0000021E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    162                   if(wy_xzm>2000)
   \                     ??UART3_IRQHandler_13: (+1)
   \   00000222   0xF8DF 0x2CA8      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   00000226   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000022A   0x2201             MOVS     R2,#+1
   \   0000022C   0xF8DF 0x3C94      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000230   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000234   0xD80C             BHI.N    ??UART3_IRQHandler_14
    163                     wy_xzm = wy_xzm - 4000;
   \   00000236   0xF8DF 0x0C94      LDR.W    R0,??UART3_IRQHandler_12+0xC
   \   0000023A   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   0000023E   0x2000             MOVS     R0,#+0
   \   00000240   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000244   0x.... 0x....      BL       __aeabi_dadd
   \   00000248   0xF8DF 0x2C80      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   0000024C   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    164                   if(wz_xzm>2000)
   \                     ??UART3_IRQHandler_14: (+1)
   \   00000250   0x.... 0x....      LDR.W    R2,??DataTable1
   \   00000254   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000258   0x2201             MOVS     R2,#+1
   \   0000025A   0xF8DF 0x3C68      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   0000025E   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000262   0xD80C             BHI.N    ??UART3_IRQHandler_15
    165                     wz_xzm = wz_xzm - 4000;
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000268   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   0000026C   0x2000             MOVS     R0,#+0
   \   0000026E   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000272   0x.... 0x....      BL       __aeabi_dadd
   \   00000276   0x.... 0x....      LDR.W    R2,??DataTable1
   \   0000027A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    166                   
    167                   if(wy_xzm<0&&wy_last_xzm>0)
   \                     ??UART3_IRQHandler_15: (+1)
   \   0000027E   0xF8DF 0x2C4C      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   00000282   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000286   0x2200             MOVS     R2,#+0
   \   00000288   0x2300             MOVS     R3,#+0
   \   0000028A   0x.... 0x....      BL       __aeabi_cdcmple
   \   0000028E   0xD27C             BCS.N    ??UART3_IRQHandler_16
   \   00000290   0x.... 0x....      LDR.W    R2,??DataTable1_2
   \   00000294   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000298   0x2200             MOVS     R2,#+0
   \   0000029A   0x2300             MOVS     R3,#+0
   \   0000029C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000002A0   0xD273             BCS.N    ??UART3_IRQHandler_16
    168                   {
    169                     if(ay_xzm>=l_60_xzm&&ay_xzm<180)
   \   000002A2   0xF8DF 0x08F4      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   000002A6   0x6800             LDR      R0,[R0, #+0]
   \   000002A8   0x.... 0x....      BL       __aeabi_i2d
   \   000002AC   0x0002             MOVS     R2,R0
   \   000002AE   0x000B             MOVS     R3,R1
   \   000002B0   0x.... 0x....      LDR.W    R5,??DataTable1_3
   \   000002B4   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   000002B8   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000002BC   0xD820             BHI.N    ??UART3_IRQHandler_17
   \   000002BE   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   000002C2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000002C6   0x2200             MOVS     R2,#+0
   \   000002C8   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   000002CC   0x.... 0x....      BL       __aeabi_cdcmple
   \   000002D0   0xD216             BCS.N    ??UART3_IRQHandler_17
    170                     {
    171                     duty1 = 100;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000002D6   0x2164             MOVS     R1,#+100
   \   000002D8   0x6001             STR      R1,[R0, #+0]
    172                     duty2 = 100;
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000002DE   0x2164             MOVS     R1,#+100
   \   000002E0   0x6001             STR      R1,[R0, #+0]
    173                     //is_over_2_xzm = 1;
    174                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000002E6   0x6802             LDR      R2,[R0, #+0]
   \   000002E8   0x2100             MOVS     R1,#+0
   \   000002EA   0x2000             MOVS     R0,#+0
   \   000002EC   0x.... 0x....      BL       FTM_PWM_Duty
    175                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   000002F0   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000002F4   0x6802             LDR      R2,[R0, #+0]
   \   000002F6   0x2101             MOVS     R1,#+1
   \   000002F8   0x2000             MOVS     R0,#+0
   \   000002FA   0x.... 0x....      BL       FTM_PWM_Duty
   \   000002FE   0xE044             B.N      ??UART3_IRQHandler_16
    176                     }
    177                     else if(ay_xzm<=h_60_xzm&&ay_xzm>180)
   \                     ??UART3_IRQHandler_17: (+1)
   \   00000300   0xF8DF 0x0898      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x.... 0x....      BL       __aeabi_i2d
   \   0000030A   0x.... 0x....      LDR.W    R5,??DataTable1_3
   \   0000030E   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   00000312   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000316   0xD820             BHI.N    ??UART3_IRQHandler_18
   \   00000318   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   0000031C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000320   0x2201             MOVS     R2,#+1
   \   00000322   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000326   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000032A   0xD816             BHI.N    ??UART3_IRQHandler_18
    178                     {
    179                     duty1=100;
   \   0000032C   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000330   0x2164             MOVS     R1,#+100
   \   00000332   0x6001             STR      R1,[R0, #+0]
    180                     duty2=100;
   \   00000334   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000338   0x2164             MOVS     R1,#+100
   \   0000033A   0x6001             STR      R1,[R0, #+0]
    181                     //is_over_2_xzm = 1;
    182                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   0000033C   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000340   0x6802             LDR      R2,[R0, #+0]
   \   00000342   0x2100             MOVS     R1,#+0
   \   00000344   0x2000             MOVS     R0,#+0
   \   00000346   0x.... 0x....      BL       FTM_PWM_Duty
    183                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   0000034A   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000034E   0x6802             LDR      R2,[R0, #+0]
   \   00000350   0x2101             MOVS     R1,#+1
   \   00000352   0x2000             MOVS     R0,#+0
   \   00000354   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000358   0xE017             B.N      ??UART3_IRQHandler_16
    184                     }
    185                     else
    186                     {
    187                     duty1 = b_60_xzm;
   \                     ??UART3_IRQHandler_18: (+1)
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   0000035E   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   00000362   0x6809             LDR      R1,[R1, #+0]
   \   00000364   0x6001             STR      R1,[R0, #+0]
    188                     duty2 = 100;
   \   00000366   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000036A   0x2164             MOVS     R1,#+100
   \   0000036C   0x6001             STR      R1,[R0, #+0]
    189                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000372   0x6802             LDR      R2,[R0, #+0]
   \   00000374   0x2100             MOVS     R1,#+0
   \   00000376   0x2000             MOVS     R0,#+0
   \   00000378   0x.... 0x....      BL       FTM_PWM_Duty
    190                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000380   0x6802             LDR      R2,[R0, #+0]
   \   00000382   0x2101             MOVS     R1,#+1
   \   00000384   0x2000             MOVS     R0,#+0
   \   00000386   0x.... 0x....      BL       FTM_PWM_Duty
    191                     }
    192                   }
    193                   if(wy_xzm>0&&wy_last_xzm<0)
   \                     ??UART3_IRQHandler_16: (+1)
   \   0000038A   0xF8DF 0x2B40      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   0000038E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000392   0x2200             MOVS     R2,#+0
   \   00000394   0x2300             MOVS     R3,#+0
   \   00000396   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000039A   0xD27C             BCS.N    ??UART3_IRQHandler_19
   \   0000039C   0x.... 0x....      LDR.W    R2,??DataTable1_2
   \   000003A0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000003A4   0x2200             MOVS     R2,#+0
   \   000003A6   0x2300             MOVS     R3,#+0
   \   000003A8   0x.... 0x....      BL       __aeabi_cdcmple
   \   000003AC   0xD273             BCS.N    ??UART3_IRQHandler_19
    194                   {
    195                     if(ay_xzm>=l_60_xzm&&ay_xzm<180)
   \   000003AE   0xF8DF 0x07E8      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   000003B2   0x6800             LDR      R0,[R0, #+0]
   \   000003B4   0x.... 0x....      BL       __aeabi_i2d
   \   000003B8   0x0002             MOVS     R2,R0
   \   000003BA   0x000B             MOVS     R3,R1
   \   000003BC   0x.... 0x....      LDR.W    R5,??DataTable1_3
   \   000003C0   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   000003C4   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000003C8   0xD820             BHI.N    ??UART3_IRQHandler_20
   \   000003CA   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   000003CE   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000003D2   0x2200             MOVS     R2,#+0
   \   000003D4   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   000003D8   0x.... 0x....      BL       __aeabi_cdcmple
   \   000003DC   0xD216             BCS.N    ??UART3_IRQHandler_20
    196                     {
    197                     duty2 = 100;
   \   000003DE   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000003E2   0x2164             MOVS     R1,#+100
   \   000003E4   0x6001             STR      R1,[R0, #+0]
    198                     duty1 = 100;
   \   000003E6   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000003EA   0x2164             MOVS     R1,#+100
   \   000003EC   0x6001             STR      R1,[R0, #+0]
    199                     //is_over_2_xzm = 1;
    200                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   000003EE   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000003F2   0x6802             LDR      R2,[R0, #+0]
   \   000003F4   0x2100             MOVS     R1,#+0
   \   000003F6   0x2000             MOVS     R0,#+0
   \   000003F8   0x.... 0x....      BL       FTM_PWM_Duty
    201                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000400   0x6802             LDR      R2,[R0, #+0]
   \   00000402   0x2101             MOVS     R1,#+1
   \   00000404   0x2000             MOVS     R0,#+0
   \   00000406   0x.... 0x....      BL       FTM_PWM_Duty
   \   0000040A   0xE044             B.N      ??UART3_IRQHandler_19
    202                     }
    203                     else if(ay_xzm<=h_60_xzm&&ay_xzm>180)
   \                     ??UART3_IRQHandler_20: (+1)
   \   0000040C   0xF8DF 0x078C      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   00000410   0x6800             LDR      R0,[R0, #+0]
   \   00000412   0x.... 0x....      BL       __aeabi_i2d
   \   00000416   0x.... 0x....      LDR.W    R5,??DataTable1_3
   \   0000041A   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   0000041E   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000422   0xD820             BHI.N    ??UART3_IRQHandler_21
   \   00000424   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000428   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000042C   0x2201             MOVS     R2,#+1
   \   0000042E   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000432   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000436   0xD816             BHI.N    ??UART3_IRQHandler_21
    204                     {
    205                     duty2=100;
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000043C   0x2164             MOVS     R1,#+100
   \   0000043E   0x6001             STR      R1,[R0, #+0]
    206                     duty1=100;
   \   00000440   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000444   0x2164             MOVS     R1,#+100
   \   00000446   0x6001             STR      R1,[R0, #+0]
    207                     //is_over_2_xzm = 1;
    208                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000448   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   0000044C   0x6802             LDR      R2,[R0, #+0]
   \   0000044E   0x2100             MOVS     R1,#+0
   \   00000450   0x2000             MOVS     R0,#+0
   \   00000452   0x.... 0x....      BL       FTM_PWM_Duty
    209                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000456   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000045A   0x6802             LDR      R2,[R0, #+0]
   \   0000045C   0x2101             MOVS     R1,#+1
   \   0000045E   0x2000             MOVS     R0,#+0
   \   00000460   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000464   0xE017             B.N      ??UART3_IRQHandler_19
    210                     }
    211                     else
    212                     {
    213                     duty2 = b_60_xzm;
   \                     ??UART3_IRQHandler_21: (+1)
   \   00000466   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000046A   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   0000046E   0x6809             LDR      R1,[R1, #+0]
   \   00000470   0x6001             STR      R1,[R0, #+0]
    214                     duty1 = 100;
   \   00000472   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000476   0x2164             MOVS     R1,#+100
   \   00000478   0x6001             STR      R1,[R0, #+0]
    215                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   0000047A   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   0000047E   0x6802             LDR      R2,[R0, #+0]
   \   00000480   0x2100             MOVS     R1,#+0
   \   00000482   0x2000             MOVS     R0,#+0
   \   00000484   0x.... 0x....      BL       FTM_PWM_Duty
    216                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000488   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000048C   0x6802             LDR      R2,[R0, #+0]
   \   0000048E   0x2101             MOVS     R1,#+1
   \   00000490   0x2000             MOVS     R0,#+0
   \   00000492   0x.... 0x....      BL       FTM_PWM_Duty
    217                     }
    218                   }
    219                   wy_last_xzm = wy_xzm;
   \                     ??UART3_IRQHandler_19: (+1)
   \   00000496   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000049A   0xF8DF 0x1A30      LDR.W    R1,??UART3_IRQHandler_12+0xC
   \   0000049E   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   000004A2   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
    220                   //uart0Printf("\nwx:%lf\nwy:%lf\nwz:%lf\n",wx_xzm,wy_xzm,wz_xzm);   
    221                 }
    222               }
    223               if(a_xzm == 1)//角度
   \                     ??UART3_IRQHandler_10: (+1)
   \   000004A6   0xF8DF 0x06FC      LDR.W    R0,??UART3_IRQHandler_0+0x14
   \   000004AA   0x6800             LDR      R0,[R0, #+0]
   \   000004AC   0x2801             CMP      R0,#+1
   \   000004AE   0xF040 0x8150      BNE.W    ??UART3_IRQHandler_2
    224               {
    225                 if(count_xzm < 11)
   \   000004B2   0xF8DF 0x06F4      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000004B6   0x6800             LDR      R0,[R0, #+0]
   \   000004B8   0x280B             CMP      R0,#+11
   \   000004BA   0xDA0C             BGE.N    ??UART3_IRQHandler_22
    226                 {
    227                    count_xzm = count_xzm + 1;
   \   000004BC   0xF8DF 0x06E8      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000004C0   0x6800             LDR      R0,[R0, #+0]
   \   000004C2   0x1C40             ADDS     R0,R0,#+1
   \   000004C4   0xF8DF 0x16E0      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   000004C8   0x6008             STR      R0,[R1, #+0]
    228                    code_xzm[count_xzm] = ch;  
   \   000004CA   0xF8DF 0x06DC      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000004CE   0x6800             LDR      R0,[R0, #+0]
   \   000004D0   0xF8DF 0x16D8      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000004D4   0x5444             STRB     R4,[R0, R1]
    229                 }
    230                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_22: (+1)
   \   000004D6   0xF8DF 0x06D0      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000004DA   0x6800             LDR      R0,[R0, #+0]
   \   000004DC   0x280B             CMP      R0,#+11
   \   000004DE   0xF040 0x8138      BNE.W    ??UART3_IRQHandler_2
    231                 {
    232                   ax_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*180.0;
   \   000004E2   0xF8DF 0x06C8      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   000004E6   0x7900             LDRB     R0,[R0, #+4]
   \   000004E8   0xF8DF 0x16C0      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000004EC   0x78C9             LDRB     R1,[R1, #+3]
   \   000004EE   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000004F2   0x.... 0x....      BL       __aeabi_i2d
   \   000004F6   0x2200             MOVS     R2,#+0
   \   000004F8   0xF8DF 0x39C4      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000004FC   0x.... 0x....      BL       __aeabi_ddiv
   \   00000500   0x2200             MOVS     R2,#+0
   \   00000502   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000506   0x.... 0x....      BL       __aeabi_dmul
   \   0000050A   0x.... 0x....      LDR.W    R2,??DataTable2
   \   0000050E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    233                   ay_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*180.0;
   \   00000512   0xF8DF 0x0698      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   00000516   0x7980             LDRB     R0,[R0, #+6]
   \   00000518   0xF8DF 0x1690      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   0000051C   0x7949             LDRB     R1,[R1, #+5]
   \   0000051E   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000522   0x.... 0x....      BL       __aeabi_i2d
   \   00000526   0x2200             MOVS     R2,#+0
   \   00000528   0xF8DF 0x3994      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   0000052C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000530   0x2200             MOVS     R2,#+0
   \   00000532   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000536   0x.... 0x....      BL       __aeabi_dmul
   \   0000053A   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   0000053E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    234                   az_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*180.0;
   \   00000542   0xF8DF 0x0668      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   00000546   0x7A00             LDRB     R0,[R0, #+8]
   \   00000548   0xF8DF 0x1660      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   0000054C   0x79C9             LDRB     R1,[R1, #+7]
   \   0000054E   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000552   0x.... 0x....      BL       __aeabi_i2d
   \   00000556   0x2200             MOVS     R2,#+0
   \   00000558   0xF8DF 0x3964      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   0000055C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000560   0x2200             MOVS     R2,#+0
   \   00000562   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000566   0x.... 0x....      BL       __aeabi_dmul
   \   0000056A   0x.... 0x....      LDR.W    R2,??DataTable2_1
   \   0000056E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    235                   
    236                   //算角度
    237                   if(ay_xzm>=l_60_xzm+8&&ay_xzm<180)
   \   00000572   0xF8DF 0x0624      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   00000576   0x6800             LDR      R0,[R0, #+0]
   \   00000578   0x3008             ADDS     R0,R0,#+8
   \   0000057A   0x.... 0x....      BL       __aeabi_i2d
   \   0000057E   0x0002             MOVS     R2,R0
   \   00000580   0x000B             MOVS     R3,R1
   \   00000582   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   00000586   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   0000058A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000058E   0xD817             BHI.N    ??UART3_IRQHandler_23
   \   00000590   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000594   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000598   0x2200             MOVS     R2,#+0
   \   0000059A   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   0000059E   0x.... 0x....      BL       __aeabi_cdcmple
   \   000005A2   0xD20D             BCS.N    ??UART3_IRQHandler_23
    238                   {
    239                     if(number_xzm == 2)
   \   000005A4   0xF8DF 0x05E8      LDR.W    R0,??UART3_IRQHandler_0
   \   000005A8   0x6800             LDR      R0,[R0, #+0]
   \   000005AA   0x2802             CMP      R0,#+2
   \   000005AC   0xD104             BNE.N    ??UART3_IRQHandler_24
    240                       is_over_2_xzm = 1;
   \   000005AE   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   000005B2   0x2101             MOVS     R1,#+1
   \   000005B4   0x6001             STR      R1,[R0, #+0]
   \   000005B6   0xE003             B.N      ??UART3_IRQHandler_23
    241                     else
    242                       is_over_1_xzm = 1;
   \                     ??UART3_IRQHandler_24: (+1)
   \   000005B8   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   000005BC   0x2101             MOVS     R1,#+1
   \   000005BE   0x6001             STR      R1,[R0, #+0]
    243                   }
    244                   if(ay_xzm>=l_60_xzm&&ay_xzm<180)
   \                     ??UART3_IRQHandler_23: (+1)
   \   000005C0   0xF8DF 0x05D4      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   000005C4   0x6800             LDR      R0,[R0, #+0]
   \   000005C6   0x.... 0x....      BL       __aeabi_i2d
   \   000005CA   0x0002             MOVS     R2,R0
   \   000005CC   0x000B             MOVS     R3,R1
   \   000005CE   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   000005D2   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   000005D6   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000005DA   0xD81F             BHI.N    ??UART3_IRQHandler_25
   \   000005DC   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   000005E0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000005E4   0x2200             MOVS     R2,#+0
   \   000005E6   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   000005EA   0x.... 0x....      BL       __aeabi_cdcmple
   \   000005EE   0xD215             BCS.N    ??UART3_IRQHandler_25
    245                   {
    246                     duty1=100;
   \   000005F0   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000005F4   0x2164             MOVS     R1,#+100
   \   000005F6   0x6001             STR      R1,[R0, #+0]
    247                     duty2=100;
   \   000005F8   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000005FC   0x2164             MOVS     R1,#+100
   \   000005FE   0x6001             STR      R1,[R0, #+0]
    248                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000600   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000604   0x6802             LDR      R2,[R0, #+0]
   \   00000606   0x2100             MOVS     R1,#+0
   \   00000608   0x2000             MOVS     R0,#+0
   \   0000060A   0x.... 0x....      BL       FTM_PWM_Duty
    249                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   0000060E   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000612   0x6802             LDR      R2,[R0, #+0]
   \   00000614   0x2101             MOVS     R1,#+1
   \   00000616   0x2000             MOVS     R0,#+0
   \   00000618   0x.... 0x....      BL       FTM_PWM_Duty
    250                   }
    251                   if(ay_xzm<=h_60_xzm-8&&ay_xzm>180)
   \                     ??UART3_IRQHandler_25: (+1)
   \   0000061C   0xF8DF 0x057C      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   00000620   0x6800             LDR      R0,[R0, #+0]
   \   00000622   0x3808             SUBS     R0,R0,#+8
   \   00000624   0x.... 0x....      BL       __aeabi_i2d
   \   00000628   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   0000062C   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   00000630   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000634   0xD817             BHI.N    ??UART3_IRQHandler_26
   \   00000636   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   0000063A   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000063E   0x2201             MOVS     R2,#+1
   \   00000640   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000644   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000648   0xD80D             BHI.N    ??UART3_IRQHandler_26
    252                   {
    253                     if(number_xzm == 2)
   \   0000064A   0xF8DF 0x0544      LDR.W    R0,??UART3_IRQHandler_0
   \   0000064E   0x6800             LDR      R0,[R0, #+0]
   \   00000650   0x2802             CMP      R0,#+2
   \   00000652   0xD104             BNE.N    ??UART3_IRQHandler_27
    254                       is_over_2_xzm = 1;
   \   00000654   0x.... 0x....      LDR.W    R0,??DataTable2_2
   \   00000658   0x2101             MOVS     R1,#+1
   \   0000065A   0x6001             STR      R1,[R0, #+0]
   \   0000065C   0xE003             B.N      ??UART3_IRQHandler_26
    255                     else
    256                       is_over_1_xzm = 1;
   \                     ??UART3_IRQHandler_27: (+1)
   \   0000065E   0x.... 0x....      LDR.W    R0,??DataTable2_3
   \   00000662   0x2101             MOVS     R1,#+1
   \   00000664   0x6001             STR      R1,[R0, #+0]
    257                   }
    258                   if(ay_xzm<=h_60_xzm&&ay_xzm>180)
   \                     ??UART3_IRQHandler_26: (+1)
   \   00000666   0xF8DF 0x0534      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   0000066A   0x6800             LDR      R0,[R0, #+0]
   \   0000066C   0x.... 0x....      BL       __aeabi_i2d
   \   00000670   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   00000674   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   00000678   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000067C   0xD81F             BHI.N    ??UART3_IRQHandler_28
   \   0000067E   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000682   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000686   0x2201             MOVS     R2,#+1
   \   00000688   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   0000068C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000690   0xD815             BHI.N    ??UART3_IRQHandler_28
    259                   {
    260                     duty1=100;
   \   00000692   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000696   0x2164             MOVS     R1,#+100
   \   00000698   0x6001             STR      R1,[R0, #+0]
    261                     duty2=100; 
   \   0000069A   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000069E   0x2164             MOVS     R1,#+100
   \   000006A0   0x6001             STR      R1,[R0, #+0]
    262                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   000006A2   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000006A6   0x6802             LDR      R2,[R0, #+0]
   \   000006A8   0x2100             MOVS     R1,#+0
   \   000006AA   0x2000             MOVS     R0,#+0
   \   000006AC   0x.... 0x....      BL       FTM_PWM_Duty
    263                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   000006B0   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000006B4   0x6802             LDR      R2,[R0, #+0]
   \   000006B6   0x2101             MOVS     R1,#+1
   \   000006B8   0x2000             MOVS     R0,#+0
   \   000006BA   0x.... 0x....      BL       FTM_PWM_Duty
    264                   }
    265                   if(ay_xzm<l_60_xzm)
   \                     ??UART3_IRQHandler_28: (+1)
   \   000006BE   0xF8DF 0x04D8      LDR.W    R0,??UART3_IRQHandler_0+0x8
   \   000006C2   0x6800             LDR      R0,[R0, #+0]
   \   000006C4   0x.... 0x....      BL       __aeabi_i2d
   \   000006C8   0x0002             MOVS     R2,R0
   \   000006CA   0x000B             MOVS     R3,R1
   \   000006CC   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   000006D0   0xE9D4 0x0100      LDRD     R0,R1,[R4, #+0]
   \   000006D4   0x.... 0x....      BL       __aeabi_cdcmple
   \   000006D8   0xD217             BCS.N    ??UART3_IRQHandler_29
    266                   {
    267                     duty1=b_60_xzm;
   \   000006DA   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000006DE   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   000006E2   0x6809             LDR      R1,[R1, #+0]
   \   000006E4   0x6001             STR      R1,[R0, #+0]
    268                     duty2=100;
   \   000006E6   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000006EA   0x2164             MOVS     R1,#+100
   \   000006EC   0x6001             STR      R1,[R0, #+0]
    269                     
    270                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   000006EE   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   000006F2   0x6802             LDR      R2,[R0, #+0]
   \   000006F4   0x2100             MOVS     R1,#+0
   \   000006F6   0x2000             MOVS     R0,#+0
   \   000006F8   0x.... 0x....      BL       FTM_PWM_Duty
    271                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   000006FC   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000700   0x6802             LDR      R2,[R0, #+0]
   \   00000702   0x2101             MOVS     R1,#+1
   \   00000704   0x2000             MOVS     R0,#+0
   \   00000706   0x.... 0x....      BL       FTM_PWM_Duty
    272                   }
    273                   if(ay_xzm>h_60_xzm)
   \                     ??UART3_IRQHandler_29: (+1)
   \   0000070A   0xF8DF 0x0490      LDR.W    R0,??UART3_IRQHandler_0+0xC
   \   0000070E   0x6800             LDR      R0,[R0, #+0]
   \   00000710   0x.... 0x....      BL       __aeabi_i2d
   \   00000714   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   00000718   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   0000071C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000720   0xD217             BCS.N    ??UART3_IRQHandler_2
    274                   {
    275                     duty1=100;
   \   00000722   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   00000726   0x2164             MOVS     R1,#+100
   \   00000728   0x6001             STR      R1,[R0, #+0]
    276                     duty2=b_60_xzm;
   \   0000072A   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000072E   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   00000732   0x6809             LDR      R1,[R1, #+0]
   \   00000734   0x6001             STR      R1,[R0, #+0]
    277                     
    278                     FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000736   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   0000073A   0x6802             LDR      R2,[R0, #+0]
   \   0000073C   0x2100             MOVS     R1,#+0
   \   0000073E   0x2000             MOVS     R0,#+0
   \   00000740   0x.... 0x....      BL       FTM_PWM_Duty
    279                     FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000744   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000748   0x6802             LDR      R2,[R0, #+0]
   \   0000074A   0x2101             MOVS     R1,#+1
   \   0000074C   0x2000             MOVS     R0,#+0
   \   0000074E   0x.... 0x....      BL       FTM_PWM_Duty
    280                   }
    281                   //uart0Printf("\nax:%lf\nay:%lf\naz:%lf\n",ax_xzm,ay_xzm,az_xzm);   
    282                 }
    283                }  
    284                 //xzm=0x42;
    285             }
    286            }
    287            if(number_xzm == 3)/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \                     ??UART3_IRQHandler_2: (+1)
   \   00000752   0xF8DF 0x043C      LDR.W    R0,??UART3_IRQHandler_0
   \   00000756   0x6800             LDR      R0,[R0, #+0]
   \   00000758   0x2803             CMP      R0,#+3
   \   0000075A   0xF040 0x81CF      BNE.W    ??UART3_IRQHandler_30
    288            {
    289              ch=uartRecvChar (UART3);
   \   0000075E   0x2003             MOVS     R0,#+3
   \   00000760   0x.... 0x....      BL       uartRecvChar
   \   00000764   0x0004             MOVS     R4,R0
    290             if(ch == 0x55)
   \   00000766   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000768   0x2C55             CMP      R4,#+85
   \   0000076A   0xD11A             BNE.N    ??UART3_IRQHandler_31
    291             {
    292                 edge_xzm = 1;
   \   0000076C   0xF8DF 0x070C      LDR.W    R0,??UART3_IRQHandler_7
   \   00000770   0x2101             MOVS     R1,#+1
   \   00000772   0x6001             STR      R1,[R0, #+0]
    293                 w_xzm = 0;
   \   00000774   0xF8DF 0x0428      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   00000778   0x2100             MOVS     R1,#+0
   \   0000077A   0x6001             STR      R1,[R0, #+0]
    294                 a_xzm = 0;
   \   0000077C   0xF8DF 0x0424      LDR.W    R0,??UART3_IRQHandler_0+0x14
   \   00000780   0x2100             MOVS     R1,#+0
   \   00000782   0x6001             STR      R1,[R0, #+0]
    295                 count_xzm = 1;
   \   00000784   0xF8DF 0x0420      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000788   0x2101             MOVS     R1,#+1
   \   0000078A   0x6001             STR      R1,[R0, #+0]
    296                 code_xzm[0] = 0x42;
   \   0000078C   0xF8DF 0x041C      LDR.W    R0,??UART3_IRQHandler_0+0x1C
   \   00000790   0x2142             MOVS     R1,#+66
   \   00000792   0x7001             STRB     R1,[R0, #+0]
    297                 code_xzm[count_xzm] = ch;
   \   00000794   0xF8DF 0x0410      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000798   0x6800             LDR      R0,[R0, #+0]
   \   0000079A   0xF8DF 0x1410      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   0000079E   0x5444             STRB     R4,[R0, R1]
   \   000007A0   0xE1AC             B.N      ??UART3_IRQHandler_30
    298             }
    299             else if(edge_xzm == 1 && ch == 0x53)
   \                     ??UART3_IRQHandler_31: (+1)
   \   000007A2   0xF8DF 0x06D8      LDR.W    R0,??UART3_IRQHandler_7
   \   000007A6   0x6800             LDR      R0,[R0, #+0]
   \   000007A8   0x2801             CMP      R0,#+1
   \   000007AA   0xD114             BNE.N    ??UART3_IRQHandler_32
   \   000007AC   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007AE   0x2C53             CMP      R4,#+83
   \   000007B0   0xD111             BNE.N    ??UART3_IRQHandler_32
    300             {
    301                 count_xzm = count_xzm + 1;
   \   000007B2   0xF8DF 0x03F4      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000007B6   0x6800             LDR      R0,[R0, #+0]
   \   000007B8   0x1C40             ADDS     R0,R0,#+1
   \   000007BA   0xF8DF 0x13EC      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   000007BE   0x6008             STR      R0,[R1, #+0]
    302                 code_xzm[count_xzm] = ch;
   \   000007C0   0xF8DF 0x03E4      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000007C4   0x6800             LDR      R0,[R0, #+0]
   \   000007C6   0xF8DF 0x13E4      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000007CA   0x5444             STRB     R4,[R0, R1]
    303                 a_xzm = 1;
   \   000007CC   0xF8DF 0x03D4      LDR.W    R0,??UART3_IRQHandler_0+0x14
   \   000007D0   0x2101             MOVS     R1,#+1
   \   000007D2   0x6001             STR      R1,[R0, #+0]
   \   000007D4   0xE192             B.N      ??UART3_IRQHandler_30
    304             }
    305             else if(edge_xzm == 1 && ch == 0x52)
   \                     ??UART3_IRQHandler_32: (+1)
   \   000007D6   0xF8DF 0x06A4      LDR.W    R0,??UART3_IRQHandler_7
   \   000007DA   0x6800             LDR      R0,[R0, #+0]
   \   000007DC   0x2801             CMP      R0,#+1
   \   000007DE   0xD114             BNE.N    ??UART3_IRQHandler_33
   \   000007E0   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000007E2   0x2C52             CMP      R4,#+82
   \   000007E4   0xD111             BNE.N    ??UART3_IRQHandler_33
    306             {
    307                 count_xzm = count_xzm + 1;
   \   000007E6   0xF8DF 0x03C0      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000007EA   0x6800             LDR      R0,[R0, #+0]
   \   000007EC   0x1C40             ADDS     R0,R0,#+1
   \   000007EE   0xF8DF 0x13B8      LDR.W    R1,??UART3_IRQHandler_0+0x18
   \   000007F2   0x6008             STR      R0,[R1, #+0]
    308                 code_xzm[count_xzm] = ch;
   \   000007F4   0xF8DF 0x03B0      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   000007F8   0x6800             LDR      R0,[R0, #+0]
   \   000007FA   0xF8DF 0x13B0      LDR.W    R1,??UART3_IRQHandler_0+0x1C
   \   000007FE   0x5444             STRB     R4,[R0, R1]
    309                 w_xzm = 1;
   \   00000800   0xF8DF 0x039C      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   00000804   0x2101             MOVS     R1,#+1
   \   00000806   0x6001             STR      R1,[R0, #+0]
   \   00000808   0xE178             B.N      ??UART3_IRQHandler_30
    310             }
    311             
    312             else
    313             {
    314               edge_xzm = 0;
   \                     ??UART3_IRQHandler_33: (+1)
   \   0000080A   0xF8DF 0x0670      LDR.W    R0,??UART3_IRQHandler_7
   \   0000080E   0x2100             MOVS     R1,#+0
   \   00000810   0x6001             STR      R1,[R0, #+0]
    315               if(w_xzm == 1)//角速度
   \   00000812   0xF8DF 0x038C      LDR.W    R0,??UART3_IRQHandler_0+0x10
   \   00000816   0x6800             LDR      R0,[R0, #+0]
   \   00000818   0x2801             CMP      R0,#+1
   \   0000081A   0xF040 0x80A3      BNE.W    ??UART3_IRQHandler_34
    316               {
    317                 if(count_xzm < 11)
   \   0000081E   0xF8DF 0x0388      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   00000822   0x6800             LDR      R0,[R0, #+0]
   \   00000824   0x280B             CMP      R0,#+11
   \   00000826   0xDA09             BGE.N    ??UART3_IRQHandler_35
    318                 {
    319                    count_xzm = count_xzm + 1;
   \   00000828   0xF8DF 0x037C      LDR.W    R0,??UART3_IRQHandler_0+0x18
   \   0000082C   0x6800             LDR      R0,[R0, #+0]
   \   0000082E   0x1C40             ADDS     R0,R0,#+1
   \   00000830   0x49DD             LDR.N    R1,??UART3_IRQHandler_0+0x18
   \   00000832   0x6008             STR      R0,[R1, #+0]
    320                    code_xzm[count_xzm] = ch;  
   \   00000834   0x48DC             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000836   0x6800             LDR      R0,[R0, #+0]
   \   00000838   0x49DC             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   0000083A   0x5444             STRB     R4,[R0, R1]
    321                 }
    322                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_35: (+1)
   \   0000083C   0x48DA             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   0000083E   0x6800             LDR      R0,[R0, #+0]
   \   00000840   0x280B             CMP      R0,#+11
   \   00000842   0xF040 0x808F      BNE.W    ??UART3_IRQHandler_34
    323                 {
    324                   wx_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*2000.0;
   \   00000846   0x48D9             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   00000848   0x7900             LDRB     R0,[R0, #+4]
   \   0000084A   0x49D8             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   0000084C   0x78C9             LDRB     R1,[R1, #+3]
   \   0000084E   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000852   0x.... 0x....      BL       __aeabi_i2d
   \   00000856   0x2200             MOVS     R2,#+0
   \   00000858   0xF8DF 0x3664      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   0000085C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000860   0x2200             MOVS     R2,#+0
   \   00000862   0xF8DF 0x3660      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000866   0x.... 0x....      BL       __aeabi_dmul
   \   0000086A   0xF8DF 0x265C      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   0000086E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    325                   wy_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*2000.0;
   \   00000872   0x48CE             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   00000874   0x7980             LDRB     R0,[R0, #+6]
   \   00000876   0x49CD             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000878   0x7949             LDRB     R1,[R1, #+5]
   \   0000087A   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   0000087E   0x.... 0x....      BL       __aeabi_i2d
   \   00000882   0x2200             MOVS     R2,#+0
   \   00000884   0xF8DF 0x3638      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   00000888   0x.... 0x....      BL       __aeabi_ddiv
   \   0000088C   0x2200             MOVS     R2,#+0
   \   0000088E   0xF8DF 0x3634      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000892   0x.... 0x....      BL       __aeabi_dmul
   \   00000896   0xF8DF 0x2634      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   0000089A   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    326                   wz_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*2000.0;
   \   0000089E   0x48C3             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   000008A0   0x7A00             LDRB     R0,[R0, #+8]
   \   000008A2   0x49C2             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   000008A4   0x79C9             LDRB     R1,[R1, #+7]
   \   000008A6   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000008AA   0x.... 0x....      BL       __aeabi_i2d
   \   000008AE   0x2200             MOVS     R2,#+0
   \   000008B0   0xF8DF 0x360C      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000008B4   0x.... 0x....      BL       __aeabi_ddiv
   \   000008B8   0x2200             MOVS     R2,#+0
   \   000008BA   0xF8DF 0x3608      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   000008BE   0x.... 0x....      BL       __aeabi_dmul
   \   000008C2   0x.... 0x....      LDR.W    R2,??DataTable1
   \   000008C6   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    327                   
    328                   //算角速度
    329                   if(wx_xzm>2000)
   \   000008CA   0xF8DF 0x25FC      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   000008CE   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000008D2   0x2201             MOVS     R2,#+1
   \   000008D4   0xF8DF 0x35EC      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   000008D8   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000008DC   0xD80C             BHI.N    ??UART3_IRQHandler_36
    330                     wx_xzm = wx_xzm - 4000;
   \   000008DE   0xF8DF 0x05E8      LDR.W    R0,??UART3_IRQHandler_12+0x8
   \   000008E2   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   000008E6   0x2000             MOVS     R0,#+0
   \   000008E8   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   000008EC   0x.... 0x....      BL       __aeabi_dadd
   \   000008F0   0xF8DF 0x25D4      LDR.W    R2,??UART3_IRQHandler_12+0x8
   \   000008F4   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    331                   if(wy_xzm>2000)
   \                     ??UART3_IRQHandler_36: (+1)
   \   000008F8   0xF8DF 0x25D0      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   000008FC   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000900   0x2201             MOVS     R2,#+1
   \   00000902   0xF8DF 0x35C0      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000906   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000090A   0xD80C             BHI.N    ??UART3_IRQHandler_37
    332                     wy_xzm = wy_xzm - 4000;
   \   0000090C   0xF8DF 0x05BC      LDR.W    R0,??UART3_IRQHandler_12+0xC
   \   00000910   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000914   0x2000             MOVS     R0,#+0
   \   00000916   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   0000091A   0x.... 0x....      BL       __aeabi_dadd
   \   0000091E   0xF8DF 0x25AC      LDR.W    R2,??UART3_IRQHandler_12+0xC
   \   00000922   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    333                   if(wz_xzm>2000)
   \                     ??UART3_IRQHandler_37: (+1)
   \   00000926   0x.... 0x....      LDR.W    R2,??DataTable1
   \   0000092A   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000092E   0x2201             MOVS     R2,#+1
   \   00000930   0xF8DF 0x3590      LDR.W    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000934   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000938   0xD80C             BHI.N    ??UART3_IRQHandler_38
    334                     wz_xzm = wz_xzm - 4000;
   \   0000093A   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000093E   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000942   0x2000             MOVS     R0,#+0
   \   00000944   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000948   0x.... 0x....      BL       __aeabi_dadd
   \   0000094C   0x.... 0x....      LDR.W    R2,??DataTable1
   \   00000950   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    335                   
    336                   
    337                   wy_last_xzm = wy_xzm;
   \                     ??UART3_IRQHandler_38: (+1)
   \   00000954   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   00000958   0xF8DF 0x1570      LDR.W    R1,??UART3_IRQHandler_12+0xC
   \   0000095C   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   00000960   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
    338                   //uart0Printf("\nwx:%lf\nwy:%lf\nwz:%lf\n",wx_xzm,wy_xzm,wz_xzm);   
    339                 }
    340               }
    341               if(a_xzm == 1)//角度
   \                     ??UART3_IRQHandler_34: (+1)
   \   00000964   0x488F             LDR.N    R0,??UART3_IRQHandler_0+0x14
   \   00000966   0x6800             LDR      R0,[R0, #+0]
   \   00000968   0x2801             CMP      R0,#+1
   \   0000096A   0xF040 0x80C7      BNE.W    ??UART3_IRQHandler_30
    342               {
    343                 if(count_xzm < 11)
   \   0000096E   0x488E             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000970   0x6800             LDR      R0,[R0, #+0]
   \   00000972   0x280B             CMP      R0,#+11
   \   00000974   0xDA08             BGE.N    ??UART3_IRQHandler_39
    344                 {
    345                    count_xzm = count_xzm + 1;
   \   00000976   0x488C             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000978   0x6800             LDR      R0,[R0, #+0]
   \   0000097A   0x1C40             ADDS     R0,R0,#+1
   \   0000097C   0x498A             LDR.N    R1,??UART3_IRQHandler_0+0x18
   \   0000097E   0x6008             STR      R0,[R1, #+0]
    346                    code_xzm[count_xzm] = ch;  
   \   00000980   0x4889             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000982   0x6800             LDR      R0,[R0, #+0]
   \   00000984   0x4989             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000986   0x5444             STRB     R4,[R0, R1]
    347                 }
    348                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_39: (+1)
   \   00000988   0x4887             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   0000098A   0x6800             LDR      R0,[R0, #+0]
   \   0000098C   0x280B             CMP      R0,#+11
   \   0000098E   0xF040 0x80B5      BNE.W    ??UART3_IRQHandler_30
    349                 {
    350                   ax_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*180.0;
   \   00000992   0x4886             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   00000994   0x7900             LDRB     R0,[R0, #+4]
   \   00000996   0x4985             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000998   0x78C9             LDRB     R1,[R1, #+3]
   \   0000099A   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   0000099E   0x.... 0x....      BL       __aeabi_i2d
   \   000009A2   0x2200             MOVS     R2,#+0
   \   000009A4   0xF8DF 0x3518      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000009A8   0x.... 0x....      BL       __aeabi_ddiv
   \   000009AC   0x2200             MOVS     R2,#+0
   \   000009AE   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   000009B2   0x.... 0x....      BL       __aeabi_dmul
   \   000009B6   0x.... 0x....      LDR.W    R2,??DataTable2
   \   000009BA   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    351                   ay_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*180.0;
   \   000009BE   0x487B             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   000009C0   0x7980             LDRB     R0,[R0, #+6]
   \   000009C2   0x497A             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   000009C4   0x7949             LDRB     R1,[R1, #+5]
   \   000009C6   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000009CA   0x.... 0x....      BL       __aeabi_i2d
   \   000009CE   0x2200             MOVS     R2,#+0
   \   000009D0   0xF8DF 0x34EC      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   000009D4   0x.... 0x....      BL       __aeabi_ddiv
   \   000009D8   0x2200             MOVS     R2,#+0
   \   000009DA   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   000009DE   0x.... 0x....      BL       __aeabi_dmul
   \   000009E2   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   000009E6   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    352                   az_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*180.0;
   \   000009EA   0x4870             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   000009EC   0x7A00             LDRB     R0,[R0, #+8]
   \   000009EE   0x496F             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   000009F0   0x79C9             LDRB     R1,[R1, #+7]
   \   000009F2   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   000009F6   0x.... 0x....      BL       __aeabi_i2d
   \   000009FA   0x2200             MOVS     R2,#+0
   \   000009FC   0xF8DF 0x34C0      LDR.W    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   00000A00   0x.... 0x....      BL       __aeabi_ddiv
   \   00000A04   0x2200             MOVS     R2,#+0
   \   00000A06   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000A0A   0x.... 0x....      BL       __aeabi_dmul
   \   00000A0E   0x.... 0x....      LDR.W    R2,??DataTable2_1
   \   00000A12   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    353                   
    354                   if(ax_xzm>180)
   \   00000A16   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000A1A   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000A1E   0x2201             MOVS     R2,#+1
   \   00000A20   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000A24   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000A28   0xD80C             BHI.N    ??UART3_IRQHandler_40
    355                     ax_xzm=ax_xzm-360;
   \   00000A2A   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000A2E   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000A32   0x2000             MOVS     R0,#+0
   \   00000A34   0x.... 0x....      LDR.W    R1,??DataTable5  ;; 0xc0768000
   \   00000A38   0x.... 0x....      BL       __aeabi_dadd
   \   00000A3C   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000A40   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    356                   if(ay_xzm>180)
   \                     ??UART3_IRQHandler_40: (+1)
   \   00000A44   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000A48   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000A4C   0x2201             MOVS     R2,#+1
   \   00000A4E   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000A52   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000A56   0xD80C             BHI.N    ??UART3_IRQHandler_41
    357                     ay_xzm=ay_xzm-360;
   \   00000A58   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   00000A5C   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000A60   0x2000             MOVS     R0,#+0
   \   00000A62   0x.... 0x....      LDR.W    R1,??DataTable5  ;; 0xc0768000
   \   00000A66   0x.... 0x....      BL       __aeabi_dadd
   \   00000A6A   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000A6E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    358                   if(az_xzm>180)
   \                     ??UART3_IRQHandler_41: (+1)
   \   00000A72   0x.... 0x....      LDR.W    R2,??DataTable2_1
   \   00000A76   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000A7A   0x2201             MOVS     R2,#+1
   \   00000A7C   0x.... 0x....      LDR.W    R3,??DataTable1_4  ;; 0x40668000
   \   00000A80   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000A84   0xD80C             BHI.N    ??UART3_IRQHandler_42
    359                     az_xzm=az_xzm-360;
   \   00000A86   0x.... 0x....      LDR.W    R0,??DataTable2_1
   \   00000A8A   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000A8E   0x2000             MOVS     R0,#+0
   \   00000A90   0x.... 0x....      LDR.W    R1,??DataTable5  ;; 0xc0768000
   \   00000A94   0x.... 0x....      BL       __aeabi_dadd
   \   00000A98   0x.... 0x....      LDR.W    R2,??DataTable2_1
   \   00000A9C   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    360                   
    361                   ax_xzm = ax_xzm + 2.19;
   \                     ??UART3_IRQHandler_42: (+1)
   \   00000AA0   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000AA4   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000AA8   0x.... 0x....      LDR.W    R0,??DataTable5_1  ;; 0xb851eb85
   \   00000AAC   0x.... 0x....      LDR.W    R1,??DataTable5_2  ;; 0x4001851e
   \   00000AB0   0x.... 0x....      BL       __aeabi_dadd
   \   00000AB4   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000AB8   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    362                   ay_xzm = ay_xzm - 1.88;
   \   00000ABC   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   00000AC0   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000AC4   0x.... 0x....      LDR.W    R0,??DataTable5_3  ;; 0xe147ae14
   \   00000AC8   0x.... 0x....      LDR.W    R1,??DataTable5_4  ;; 0xbffe147a
   \   00000ACC   0x.... 0x....      BL       __aeabi_dadd
   \   00000AD0   0x.... 0x....      LDR.W    R2,??DataTable1_3
   \   00000AD4   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    363                   
    364                   double result_xzm;
    365                   result_xzm=atan(ax_xzm/ay_xzm)*(180/3.141592);
   \   00000AD8   0x.... 0x....      LDR.W    R2,??DataTable2
   \   00000ADC   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000AE0   0x.... 0x....      LDR.W    R4,??DataTable1_3
   \   00000AE4   0xE9D4 0x2300      LDRD     R2,R3,[R4, #+0]
   \   00000AE8   0x.... 0x....      BL       __aeabi_ddiv
   \   00000AEC   0x.... 0x....      BL       atan
   \   00000AF0   0x.... 0x....      LDR.W    R2,??DataTable5_5  ;; 0x7e61df46
   \   00000AF4   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x404ca5dc
   \   00000AF8   0x.... 0x....      BL       __aeabi_dmul
    366                   
    367                   
    368                   
    369                   //算角速度
    370                   //uart0Printf("ax:%lf\nay:%lf\naz:%lf\n-----%lf\n",ax_xzm,ay_xzm,az_xzm,result_xzm);   
    371                 }
    372                }  
    373                 //xzm=0x42;
    374             }    
    375            }
    376             if(number_xzm == 4)//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
   \                     ??UART3_IRQHandler_30: (+1)
   \   00000AFC   0x4824             LDR.N    R0,??UART3_IRQHandler_0
   \   00000AFE   0x6800             LDR      R0,[R0, #+0]
   \   00000B00   0x2804             CMP      R0,#+4
   \   00000B02   0xF040 0x8265      BNE.W    ??UART3_IRQHandler_43
    377            {
    378             
    379              
    380             ch=uartRecvChar (UART3);
   \   00000B06   0x2003             MOVS     R0,#+3
   \   00000B08   0x.... 0x....      BL       uartRecvChar
   \   00000B0C   0x0004             MOVS     R4,R0
    381             
    382             if(ch == 0x55)
   \   00000B0E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B10   0x2C55             CMP      R4,#+85
   \   00000B12   0xD114             BNE.N    ??UART3_IRQHandler_44
    383             {
    384                 edge_xzm = 1;
   \   00000B14   0xF8DF 0x0364      LDR.W    R0,??UART3_IRQHandler_7
   \   00000B18   0x2101             MOVS     R1,#+1
   \   00000B1A   0x6001             STR      R1,[R0, #+0]
    385                 w_xzm = 0;
   \   00000B1C   0x4820             LDR.N    R0,??UART3_IRQHandler_0+0x10
   \   00000B1E   0x2100             MOVS     R1,#+0
   \   00000B20   0x6001             STR      R1,[R0, #+0]
    386                 a_xzm = 0;
   \   00000B22   0x4820             LDR.N    R0,??UART3_IRQHandler_0+0x14
   \   00000B24   0x2100             MOVS     R1,#+0
   \   00000B26   0x6001             STR      R1,[R0, #+0]
    387                 count_xzm = 1;
   \   00000B28   0x481F             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B2A   0x2101             MOVS     R1,#+1
   \   00000B2C   0x6001             STR      R1,[R0, #+0]
    388                 code_xzm[0] = 0x42;
   \   00000B2E   0x481F             LDR.N    R0,??UART3_IRQHandler_0+0x1C
   \   00000B30   0x2142             MOVS     R1,#+66
   \   00000B32   0x7001             STRB     R1,[R0, #+0]
    389                 code_xzm[count_xzm] = ch;
   \   00000B34   0x481C             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B36   0x6800             LDR      R0,[R0, #+0]
   \   00000B38   0x491C             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000B3A   0x5444             STRB     R4,[R0, R1]
   \   00000B3C   0xE248             B.N      ??UART3_IRQHandler_43
    390             }
    391             else if(edge_xzm == 1 && ch == 0x53)
   \                     ??UART3_IRQHandler_44: (+1)
   \   00000B3E   0xF8DF 0x033C      LDR.W    R0,??UART3_IRQHandler_7
   \   00000B42   0x6800             LDR      R0,[R0, #+0]
   \   00000B44   0x2801             CMP      R0,#+1
   \   00000B46   0xD10F             BNE.N    ??UART3_IRQHandler_45
   \   00000B48   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B4A   0x2C53             CMP      R4,#+83
   \   00000B4C   0xD10C             BNE.N    ??UART3_IRQHandler_45
    392             {
    393                 count_xzm = count_xzm + 1;
   \   00000B4E   0x4816             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B50   0x6800             LDR      R0,[R0, #+0]
   \   00000B52   0x1C40             ADDS     R0,R0,#+1
   \   00000B54   0x4914             LDR.N    R1,??UART3_IRQHandler_0+0x18
   \   00000B56   0x6008             STR      R0,[R1, #+0]
    394                 code_xzm[count_xzm] = ch;
   \   00000B58   0x4813             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B5A   0x6800             LDR      R0,[R0, #+0]
   \   00000B5C   0x4913             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000B5E   0x5444             STRB     R4,[R0, R1]
    395                 a_xzm = 1;
   \   00000B60   0x4810             LDR.N    R0,??UART3_IRQHandler_0+0x14
   \   00000B62   0x2101             MOVS     R1,#+1
   \   00000B64   0x6001             STR      R1,[R0, #+0]
   \   00000B66   0xE233             B.N      ??UART3_IRQHandler_43
    396             }
    397             else if(edge_xzm == 1 && ch == 0x52)
   \                     ??UART3_IRQHandler_45: (+1)
   \   00000B68   0x48C4             LDR.N    R0,??UART3_IRQHandler_7
   \   00000B6A   0x6800             LDR      R0,[R0, #+0]
   \   00000B6C   0x2801             CMP      R0,#+1
   \   00000B6E   0xD11F             BNE.N    ??UART3_IRQHandler_46
   \   00000B70   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000B72   0x2C52             CMP      R4,#+82
   \   00000B74   0xD11C             BNE.N    ??UART3_IRQHandler_46
    398             {
    399                 count_xzm = count_xzm + 1;
   \   00000B76   0x480C             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B78   0x6800             LDR      R0,[R0, #+0]
   \   00000B7A   0x1C40             ADDS     R0,R0,#+1
   \   00000B7C   0x490A             LDR.N    R1,??UART3_IRQHandler_0+0x18
   \   00000B7E   0x6008             STR      R0,[R1, #+0]
    400                 code_xzm[count_xzm] = ch;
   \   00000B80   0x4809             LDR.N    R0,??UART3_IRQHandler_0+0x18
   \   00000B82   0x6800             LDR      R0,[R0, #+0]
   \   00000B84   0x4909             LDR.N    R1,??UART3_IRQHandler_0+0x1C
   \   00000B86   0x5444             STRB     R4,[R0, R1]
    401                 w_xzm = 1;
   \   00000B88   0x4805             LDR.N    R0,??UART3_IRQHandler_0+0x10
   \   00000B8A   0x2101             MOVS     R1,#+1
   \   00000B8C   0x6001             STR      R1,[R0, #+0]
   \   00000B8E   0xE21F             B.N      ??UART3_IRQHandler_43
   \                     ??UART3_IRQHandler_0:
   \   00000B90   0x........         DC32     number_xzm
   \   00000B94   0x........         DC32     distance_xzm
   \   00000B98   0x........         DC32     l_60_xzm
   \   00000B9C   0x........         DC32     h_60_xzm
   \   00000BA0   0x........         DC32     w_xzm
   \   00000BA4   0x........         DC32     a_xzm
   \   00000BA8   0x........         DC32     count_xzm
   \   00000BAC   0x........         DC32     code_xzm
    402             }
    403             
    404             else
    405             {
    406               edge_xzm = 0;
   \                     ??UART3_IRQHandler_46: (+1)
   \   00000BB0   0x48B2             LDR.N    R0,??UART3_IRQHandler_7
   \   00000BB2   0x2100             MOVS     R1,#+0
   \   00000BB4   0x6001             STR      R1,[R0, #+0]
    407               if(w_xzm == 1)//角速度
   \   00000BB6   0x.... 0x....      LDR.W    R0,??DataTable5_7
   \   00000BBA   0x6800             LDR      R0,[R0, #+0]
   \   00000BBC   0x2801             CMP      R0,#+1
   \   00000BBE   0xF040 0x81A9      BNE.W    ??UART3_IRQHandler_47
    408               {
    409                 if(count_xzm < 11)
   \   00000BC2   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000BC6   0x6800             LDR      R0,[R0, #+0]
   \   00000BC8   0x280B             CMP      R0,#+11
   \   00000BCA   0xDA0C             BGE.N    ??UART3_IRQHandler_48
    410                 {
    411                    count_xzm = count_xzm + 1;
   \   00000BCC   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000BD0   0x6800             LDR      R0,[R0, #+0]
   \   00000BD2   0x1C40             ADDS     R0,R0,#+1
   \   00000BD4   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000BD8   0x6008             STR      R0,[R1, #+0]
    412                    code_xzm[count_xzm] = ch;  
   \   00000BDA   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000BDE   0x6800             LDR      R0,[R0, #+0]
   \   00000BE0   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000BE4   0x5444             STRB     R4,[R0, R1]
    413                 }
    414                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_48: (+1)
   \   00000BE6   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000BEA   0x6800             LDR      R0,[R0, #+0]
   \   00000BEC   0x280B             CMP      R0,#+11
   \   00000BEE   0xF040 0x8191      BNE.W    ??UART3_IRQHandler_47
    415                 {
    416                   wx_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*2000.0;
   \   00000BF2   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000BF6   0x7900             LDRB     R0,[R0, #+4]
   \   00000BF8   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000BFC   0x78C9             LDRB     R1,[R1, #+3]
   \   00000BFE   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000C02   0x.... 0x....      BL       __aeabi_i2d
   \   00000C06   0x2200             MOVS     R2,#+0
   \   00000C08   0x4BAD             LDR.N    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   00000C0A   0x.... 0x....      BL       __aeabi_ddiv
   \   00000C0E   0x2200             MOVS     R2,#+0
   \   00000C10   0x4BAC             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000C12   0x.... 0x....      BL       __aeabi_dmul
   \   00000C16   0x4AAC             LDR.N    R2,??UART3_IRQHandler_12+0x8
   \   00000C18   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    417                   wy_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*2000.0;
   \   00000C1C   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000C20   0x7980             LDRB     R0,[R0, #+6]
   \   00000C22   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000C26   0x7949             LDRB     R1,[R1, #+5]
   \   00000C28   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000C2C   0x.... 0x....      BL       __aeabi_i2d
   \   00000C30   0x2200             MOVS     R2,#+0
   \   00000C32   0x4BA3             LDR.N    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   00000C34   0x.... 0x....      BL       __aeabi_ddiv
   \   00000C38   0x2200             MOVS     R2,#+0
   \   00000C3A   0x4BA2             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000C3C   0x.... 0x....      BL       __aeabi_dmul
   \   00000C40   0x4AA2             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000C42   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    418                   wz_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*2000.0;
   \   00000C46   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000C4A   0x7A00             LDRB     R0,[R0, #+8]
   \   00000C4C   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000C50   0x79C9             LDRB     R1,[R1, #+7]
   \   00000C52   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000C56   0x.... 0x....      BL       __aeabi_i2d
   \   00000C5A   0x2200             MOVS     R2,#+0
   \   00000C5C   0x4B98             LDR.N    R3,??UART3_IRQHandler_12  ;; 0x40e00000
   \   00000C5E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000C62   0x2200             MOVS     R2,#+0
   \   00000C64   0x4B97             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000C66   0x.... 0x....      BL       __aeabi_dmul
   \   00000C6A   0x.... 0x....      LDR.W    R2,??DataTable1
   \   00000C6E   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    419                   
    420                   //算角速度
    421                   if(wx_xzm>2000)
   \   00000C72   0x4A95             LDR.N    R2,??UART3_IRQHandler_12+0x8
   \   00000C74   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000C78   0x2201             MOVS     R2,#+1
   \   00000C7A   0x4B92             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000C7C   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000C80   0xD80A             BHI.N    ??UART3_IRQHandler_49
    422                     wx_xzm = wx_xzm - 4000;
   \   00000C82   0x4891             LDR.N    R0,??UART3_IRQHandler_12+0x8
   \   00000C84   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000C88   0x2000             MOVS     R0,#+0
   \   00000C8A   0x.... 0x....      LDR.W    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000C8E   0x.... 0x....      BL       __aeabi_dadd
   \   00000C92   0x4A8D             LDR.N    R2,??UART3_IRQHandler_12+0x8
   \   00000C94   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    423                   if(wy_xzm>2000)
   \                     ??UART3_IRQHandler_49: (+1)
   \   00000C98   0x4A8C             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000C9A   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000C9E   0x2201             MOVS     R2,#+1
   \   00000CA0   0x4B88             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000CA2   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000CA6   0xD809             BHI.N    ??UART3_IRQHandler_50
    424                     wy_xzm = wy_xzm - 4000;
   \   00000CA8   0x4888             LDR.N    R0,??UART3_IRQHandler_12+0xC
   \   00000CAA   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000CAE   0x2000             MOVS     R0,#+0
   \   00000CB0   0x....             LDR.N    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000CB2   0x.... 0x....      BL       __aeabi_dadd
   \   00000CB6   0x4A85             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000CB8   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    425                   if(wz_xzm>2000)
   \                     ??UART3_IRQHandler_50: (+1)
   \   00000CBC   0x....             LDR.N    R2,??DataTable1
   \   00000CBE   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000CC2   0x2201             MOVS     R2,#+1
   \   00000CC4   0x4B7F             LDR.N    R3,??UART3_IRQHandler_12+0x4  ;; 0x409f4000
   \   00000CC6   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000CCA   0xD809             BHI.N    ??UART3_IRQHandler_51
    426                     wz_xzm = wz_xzm - 4000;
   \   00000CCC   0x....             LDR.N    R0,??DataTable1
   \   00000CCE   0xE9D0 0x2300      LDRD     R2,R3,[R0, #+0]
   \   00000CD2   0x2000             MOVS     R0,#+0
   \   00000CD4   0x....             LDR.N    R1,??DataTable1_1  ;; 0xc0af4000
   \   00000CD6   0x.... 0x....      BL       __aeabi_dadd
   \   00000CDA   0x....             LDR.N    R2,??DataTable1
   \   00000CDC   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    427                    
    428                   if(wy_xzm<0)
   \                     ??UART3_IRQHandler_51: (+1)
   \   00000CE0   0x4A7A             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000CE2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000CE6   0x2200             MOVS     R2,#+0
   \   00000CE8   0x2300             MOVS     R3,#+0
   \   00000CEA   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000CEE   0xD277             BCS.N    ??UART3_IRQHandler_52
    429                    {
    430                       if((ay_xzm < l_4_xzm || ay_xzm > h_4_xzm)&&(wy_xzm>-7))
   \   00000CF0   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000CF4   0x6800             LDR      R0,[R0, #+0]
   \   00000CF6   0x.... 0x....      BL       __aeabi_i2d
   \   00000CFA   0x0002             MOVS     R2,R0
   \   00000CFC   0x000B             MOVS     R3,R1
   \   00000CFE   0x....             LDR.N    R5,??DataTable1_3
   \   00000D00   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   00000D04   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000D08   0xD30A             BCC.N    ??UART3_IRQHandler_53
   \   00000D0A   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000D0E   0x6800             LDR      R0,[R0, #+0]
   \   00000D10   0x.... 0x....      BL       __aeabi_i2d
   \   00000D14   0x....             LDR.N    R5,??DataTable1_3
   \   00000D16   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   00000D1A   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000D1E   0xD221             BCS.N    ??UART3_IRQHandler_54
   \                     ??UART3_IRQHandler_53: (+1)
   \   00000D20   0x4A6A             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000D22   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000D26   0xF05F 0x32FF      MOVS     R2,#-1
   \   00000D2A   0x.... 0x....      LDR.W    R3,??DataTable6_2  ;; 0xc01bffff
   \   00000D2E   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000D32   0xD817             BHI.N    ??UART3_IRQHandler_54
    431                       {
    432                        duty1=100; 
   \   00000D34   0x....             LDR.N    R0,??DataTable1_5
   \   00000D36   0x2164             MOVS     R1,#+100
   \   00000D38   0x6001             STR      R1,[R0, #+0]
    433                   //     duty2=10000;
    434                        duty2=8000;
   \   00000D3A   0x....             LDR.N    R0,??DataTable1_6
   \   00000D3C   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000D40   0x6001             STR      R1,[R0, #+0]
    435                        is_over_4_xzm=1;
   \   00000D42   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000D46   0x2101             MOVS     R1,#+1
   \   00000D48   0x6001             STR      R1,[R0, #+0]
    436                        FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000D4A   0x....             LDR.N    R0,??DataTable1_5
   \   00000D4C   0x6802             LDR      R2,[R0, #+0]
   \   00000D4E   0x2100             MOVS     R1,#+0
   \   00000D50   0x2000             MOVS     R0,#+0
   \   00000D52   0x.... 0x....      BL       FTM_PWM_Duty
    437                        FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000D56   0x....             LDR.N    R0,??DataTable1_6
   \   00000D58   0x6802             LDR      R2,[R0, #+0]
   \   00000D5A   0x2101             MOVS     R1,#+1
   \   00000D5C   0x2000             MOVS     R0,#+0
   \   00000D5E   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000D62   0xE03D             B.N      ??UART3_IRQHandler_52
    438                       }
    439                       else
    440                       {
    441                         is_over_4_xzm=0;
   \                     ??UART3_IRQHandler_54: (+1)
   \   00000D64   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000D68   0x2100             MOVS     R1,#+0
   \   00000D6A   0x6001             STR      R1,[R0, #+0]
    442                         if(wy_xzm > -7 && wy_xzm > wy_last_xzm)
   \   00000D6C   0x4A57             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000D6E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000D72   0xF05F 0x32FF      MOVS     R2,#-1
   \   00000D76   0x.... 0x....      LDR.W    R3,??DataTable6_2  ;; 0xc01bffff
   \   00000D7A   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000D7E   0xD81C             BHI.N    ??UART3_IRQHandler_55
   \   00000D80   0x....             LDR.N    R2,??DataTable1_2
   \   00000D82   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000D86   0x4D51             LDR.N    R5,??UART3_IRQHandler_12+0xC
   \   00000D88   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   00000D8C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000D90   0xD213             BCS.N    ??UART3_IRQHandler_55
    443                         {
    444                           duty1 = 8000;
   \   00000D92   0x....             LDR.N    R0,??DataTable1_5
   \   00000D94   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000D98   0x6001             STR      R1,[R0, #+0]
    445                           duty2 = 100;
   \   00000D9A   0x....             LDR.N    R0,??DataTable1_6
   \   00000D9C   0x2164             MOVS     R1,#+100
   \   00000D9E   0x6001             STR      R1,[R0, #+0]
    446                           FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000DA0   0x....             LDR.N    R0,??DataTable1_5
   \   00000DA2   0x6802             LDR      R2,[R0, #+0]
   \   00000DA4   0x2100             MOVS     R1,#+0
   \   00000DA6   0x2000             MOVS     R0,#+0
   \   00000DA8   0x.... 0x....      BL       FTM_PWM_Duty
    447                           FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000DAC   0x....             LDR.N    R0,??DataTable1_6
   \   00000DAE   0x6802             LDR      R2,[R0, #+0]
   \   00000DB0   0x2101             MOVS     R1,#+1
   \   00000DB2   0x2000             MOVS     R0,#+0
   \   00000DB4   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000DB8   0xE012             B.N      ??UART3_IRQHandler_52
    448                         }
    449                         else
    450                         {
    451                         duty1 = 100;
   \                     ??UART3_IRQHandler_55: (+1)
   \   00000DBA   0x....             LDR.N    R0,??DataTable1_5
   \   00000DBC   0x2164             MOVS     R1,#+100
   \   00000DBE   0x6001             STR      R1,[R0, #+0]
    452                       //  duty2 = 10000;
    453                         duty2=8000;
   \   00000DC0   0x....             LDR.N    R0,??DataTable1_6
   \   00000DC2   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000DC6   0x6001             STR      R1,[R0, #+0]
    454                         FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000DC8   0x....             LDR.N    R0,??DataTable1_5
   \   00000DCA   0x6802             LDR      R2,[R0, #+0]
   \   00000DCC   0x2100             MOVS     R1,#+0
   \   00000DCE   0x2000             MOVS     R0,#+0
   \   00000DD0   0x.... 0x....      BL       FTM_PWM_Duty
    455                         FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000DD4   0x....             LDR.N    R0,??DataTable1_6
   \   00000DD6   0x6802             LDR      R2,[R0, #+0]
   \   00000DD8   0x2101             MOVS     R1,#+1
   \   00000DDA   0x2000             MOVS     R0,#+0
   \   00000DDC   0x.... 0x....      BL       FTM_PWM_Duty
    456                         }
    457                       }
    458                        
    459                    }
    460                    if(wy_xzm>0)
   \                     ??UART3_IRQHandler_52: (+1)
   \   00000DE0   0x4A3A             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000DE2   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000DE6   0x2200             MOVS     R2,#+0
   \   00000DE8   0x2300             MOVS     R3,#+0
   \   00000DEA   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000DEE   0xF080 0x8082      BCS.W    ??UART3_IRQHandler_56
    461                    {  
    462                      if((ay_xzm < l_4_xzm || ay_xzm > h_4_xzm)&&(wy_xzm<7))
   \   00000DF2   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000DF6   0x6800             LDR      R0,[R0, #+0]
   \   00000DF8   0x.... 0x....      BL       __aeabi_i2d
   \   00000DFC   0x0002             MOVS     R2,R0
   \   00000DFE   0x000B             MOVS     R3,R1
   \   00000E00   0x....             LDR.N    R5,??DataTable1_3
   \   00000E02   0xE9D5 0x0100      LDRD     R0,R1,[R5, #+0]
   \   00000E06   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000E0A   0xD30A             BCC.N    ??UART3_IRQHandler_57
   \   00000E0C   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000E10   0x6800             LDR      R0,[R0, #+0]
   \   00000E12   0x.... 0x....      BL       __aeabi_i2d
   \   00000E16   0x....             LDR.N    R5,??DataTable1_3
   \   00000E18   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   00000E1C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000E20   0xD220             BCS.N    ??UART3_IRQHandler_58
   \                     ??UART3_IRQHandler_57: (+1)
   \   00000E22   0x4A2A             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000E24   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000E28   0x2200             MOVS     R2,#+0
   \   00000E2A   0x.... 0x....      LDR.W    R3,??DataTable8  ;; 0x401c0000
   \   00000E2E   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000E32   0xD217             BCS.N    ??UART3_IRQHandler_58
    463                       {
    464                      //  duty1=10000;
    465                         is_over_4_xzm=1;
   \   00000E34   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000E38   0x2101             MOVS     R1,#+1
   \   00000E3A   0x6001             STR      R1,[R0, #+0]
    466                        duty1=8000;
   \   00000E3C   0x....             LDR.N    R0,??DataTable1_5
   \   00000E3E   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000E42   0x6001             STR      R1,[R0, #+0]
    467                        duty2=100;
   \   00000E44   0x....             LDR.N    R0,??DataTable1_6
   \   00000E46   0x2164             MOVS     R1,#+100
   \   00000E48   0x6001             STR      R1,[R0, #+0]
    468                        FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000E4A   0x....             LDR.N    R0,??DataTable1_5
   \   00000E4C   0x6802             LDR      R2,[R0, #+0]
   \   00000E4E   0x2100             MOVS     R1,#+0
   \   00000E50   0x2000             MOVS     R0,#+0
   \   00000E52   0x.... 0x....      BL       FTM_PWM_Duty
    469                        FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000E56   0x....             LDR.N    R0,??DataTable1_6
   \   00000E58   0x6802             LDR      R2,[R0, #+0]
   \   00000E5A   0x2101             MOVS     R1,#+1
   \   00000E5C   0x2000             MOVS     R0,#+0
   \   00000E5E   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000E62   0xE048             B.N      ??UART3_IRQHandler_56
    470                       }
    471                       else
    472                       {
    473                         is_over_4_xzm=0;
   \                     ??UART3_IRQHandler_58: (+1)
   \   00000E64   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000E68   0x2100             MOVS     R1,#+0
   \   00000E6A   0x6001             STR      R1,[R0, #+0]
    474                         if(wy_xzm < 7 && wy_xzm < wy_last_xzm)
   \   00000E6C   0x4A17             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000E6E   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000E72   0x2200             MOVS     R2,#+0
   \   00000E74   0x.... 0x....      LDR.W    R3,??DataTable8  ;; 0x401c0000
   \   00000E78   0xE002             B.N      ??UART3_IRQHandler_59
   \   00000E7A   0xBF00             Nop      
   \                     ??UART3_IRQHandler_7:
   \   00000E7C   0x........         DC32     edge_xzm
   \                     ??UART3_IRQHandler_59: (+1)
   \   00000E80   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000E84   0xD224             BCS.N    ??UART3_IRQHandler_60
   \   00000E86   0x4A11             LDR.N    R2,??UART3_IRQHandler_12+0xC
   \   00000E88   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   00000E8C   0x....             LDR.N    R5,??DataTable1_2
   \   00000E8E   0xE9D5 0x2300      LDRD     R2,R3,[R5, #+0]
   \   00000E92   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000E96   0xD21B             BCS.N    ??UART3_IRQHandler_60
    475                         {
    476                           duty1 = 100;
   \   00000E98   0x....             LDR.N    R0,??DataTable1_5
   \   00000E9A   0x2164             MOVS     R1,#+100
   \   00000E9C   0x6001             STR      R1,[R0, #+0]
    477                           duty2 = 8000;
   \   00000E9E   0x....             LDR.N    R0,??DataTable1_6
   \   00000EA0   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000EA4   0x6001             STR      R1,[R0, #+0]
    478                           FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000EA6   0x....             LDR.N    R0,??DataTable1_5
   \   00000EA8   0x6802             LDR      R2,[R0, #+0]
   \   00000EAA   0x2100             MOVS     R1,#+0
   \   00000EAC   0x2000             MOVS     R0,#+0
   \   00000EAE   0x.... 0x....      BL       FTM_PWM_Duty
    479                           FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000EB2   0x....             LDR.N    R0,??DataTable1_6
   \   00000EB4   0x6802             LDR      R2,[R0, #+0]
   \   00000EB6   0x2101             MOVS     R1,#+1
   \   00000EB8   0x2000             MOVS     R0,#+0
   \   00000EBA   0x.... 0x....      BL       FTM_PWM_Duty
   \   00000EBE   0xE01A             B.N      ??UART3_IRQHandler_56
   \                     ??UART3_IRQHandler_12:
   \   00000EC0   0x40E00000         DC32     0x40e00000
   \   00000EC4   0x409F4000         DC32     0x409f4000
   \   00000EC8   0x........         DC32     wx_xzm
   \   00000ECC   0x........         DC32     wy_xzm
    480                         }
    481                         else
    482                         {
    483                      //   duty1 = 10000;
    484                           duty1=8000;
   \                     ??UART3_IRQHandler_60: (+1)
   \   00000ED0   0x....             LDR.N    R0,??DataTable1_5
   \   00000ED2   0xF44F 0x51FA      MOV      R1,#+8000
   \   00000ED6   0x6001             STR      R1,[R0, #+0]
    485                         duty2 = 100;
   \   00000ED8   0x....             LDR.N    R0,??DataTable1_6
   \   00000EDA   0x2164             MOVS     R1,#+100
   \   00000EDC   0x6001             STR      R1,[R0, #+0]
    486                         FTM_PWM_Duty(FTM0,CH0,duty1);
   \   00000EDE   0x....             LDR.N    R0,??DataTable1_5
   \   00000EE0   0x6802             LDR      R2,[R0, #+0]
   \   00000EE2   0x2100             MOVS     R1,#+0
   \   00000EE4   0x2000             MOVS     R0,#+0
   \   00000EE6   0x.... 0x....      BL       FTM_PWM_Duty
    487                         FTM_PWM_Duty(FTM0,CH1,duty2);
   \   00000EEA   0x....             LDR.N    R0,??DataTable1_6
   \   00000EEC   0x6802             LDR      R2,[R0, #+0]
   \   00000EEE   0x2101             MOVS     R1,#+1
   \   00000EF0   0x2000             MOVS     R0,#+0
   \   00000EF2   0x.... 0x....      BL       FTM_PWM_Duty
    488                         }
    489                       }
    490                    }
    491                   /*  
    492                    if(wx_xzm>0)
    493                    {
    494                      if((ax_xzm < l_4_xzm || ax_xzm > h_4_xzm)&&(wx_xzm<5))
    495                      {
    496                     
    497                        duty3=1000;
    498                        duty4=1000;
    499                        FTM_PWM_Duty(FTM0,CH2,duty3);
    500                        FTM_PWM_Duty(FTM0,CH3,duty4);
    501                      }
    502                      else
    503                      {
    504                      duty3 = 100;
    505                      duty4 = 10000;
    506                      FTM_PWM_Duty(FTM0,CH2,duty3);
    507                      FTM_PWM_Duty(FTM0,CH3,duty4);
    508                      }
    509                    }
    510                   if(wx_xzm<0)
    511                    {  
    512                      if((ax_xzm < l_4_xzm || ax_xzm > h_4_xzm)&&(wx_xzm>-5))
    513                      {
    514                     
    515                        duty3=1000;
    516                        duty4=1000;
    517                        FTM_PWM_Duty(FTM0,CH2,duty3);
    518                        FTM_PWM_Duty(FTM0,CH3,duty4);
    519                      }
    520                      else
    521                      {
    522                      duty3 = 10000;
    523                      duty4 = 100;
    524                      FTM_PWM_Duty(FTM0,CH2,duty3);
    525                      FTM_PWM_Duty(FTM0,CH3,duty4);
    526                      }
    527                    }
    528                   */
    529                   wy_last_xzm = wy_xzm;
   \                     ??UART3_IRQHandler_56: (+1)
   \   00000EF6   0x....             LDR.N    R0,??DataTable1_2
   \   00000EF8   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000EFC   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   00000F00   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
    530                   
    531                   wx_last_xzm = wx_xzm;
   \   00000F04   0x.... 0x....      LDR.W    R0,??DataTable8_2
   \   00000F08   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   00000F0C   0xE9D1 0x2300      LDRD     R2,R3,[R1, #+0]
   \   00000F10   0xE9C0 0x2300      STRD     R2,R3,[R0, #+0]
    532                   
    533                   //uart0Printf("\nwx:%lf\nwy:%lf\nwz:%lf\n",wx_xzm,wy_xzm,wz_xzm);   
    534                 }
    535               }
    536               if(a_xzm == 1)//角度
   \                     ??UART3_IRQHandler_47: (+1)
   \   00000F14   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000F18   0x6800             LDR      R0,[R0, #+0]
   \   00000F1A   0x2801             CMP      R0,#+1
   \   00000F1C   0xD158             BNE.N    ??UART3_IRQHandler_43
    537               {
    538                 if(count_xzm < 11)
   \   00000F1E   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000F22   0x6800             LDR      R0,[R0, #+0]
   \   00000F24   0x280B             CMP      R0,#+11
   \   00000F26   0xDA0C             BGE.N    ??UART3_IRQHandler_61
    539                 {
    540                    count_xzm = count_xzm + 1;
   \   00000F28   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000F2C   0x6800             LDR      R0,[R0, #+0]
   \   00000F2E   0x1C40             ADDS     R0,R0,#+1
   \   00000F30   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000F34   0x6008             STR      R0,[R1, #+0]
    541                    code_xzm[count_xzm] = ch;  
   \   00000F36   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000F3A   0x6800             LDR      R0,[R0, #+0]
   \   00000F3C   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000F40   0x5444             STRB     R4,[R0, R1]
    542                 }
    543                 if(count_xzm == 11)
   \                     ??UART3_IRQHandler_61: (+1)
   \   00000F42   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000F46   0x6800             LDR      R0,[R0, #+0]
   \   00000F48   0x280B             CMP      R0,#+11
   \   00000F4A   0xD141             BNE.N    ??UART3_IRQHandler_43
    544                 {
    545                   ax_xzm = (((code_xzm[4]<<8)|code_xzm[3]))/32768.0*180.0;
   \   00000F4C   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000F50   0x7900             LDRB     R0,[R0, #+4]
   \   00000F52   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000F56   0x78C9             LDRB     R1,[R1, #+3]
   \   00000F58   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000F5C   0x.... 0x....      BL       __aeabi_i2d
   \   00000F60   0x2200             MOVS     R2,#+0
   \   00000F62   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x40e00000
   \   00000F66   0x.... 0x....      BL       __aeabi_ddiv
   \   00000F6A   0x2200             MOVS     R2,#+0
   \   00000F6C   0x....             LDR.N    R3,??DataTable1_4  ;; 0x40668000
   \   00000F6E   0x.... 0x....      BL       __aeabi_dmul
   \   00000F72   0x....             LDR.N    R2,??DataTable2
   \   00000F74   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    546                   ay_xzm = (((code_xzm[6]<<8)|code_xzm[5]))/32768.0*180.0;
   \   00000F78   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000F7C   0x7980             LDRB     R0,[R0, #+6]
   \   00000F7E   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000F82   0x7949             LDRB     R1,[R1, #+5]
   \   00000F84   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000F88   0x.... 0x....      BL       __aeabi_i2d
   \   00000F8C   0x2200             MOVS     R2,#+0
   \   00000F8E   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x40e00000
   \   00000F92   0x.... 0x....      BL       __aeabi_ddiv
   \   00000F96   0x2200             MOVS     R2,#+0
   \   00000F98   0x....             LDR.N    R3,??DataTable1_4  ;; 0x40668000
   \   00000F9A   0x.... 0x....      BL       __aeabi_dmul
   \   00000F9E   0x....             LDR.N    R2,??DataTable1_3
   \   00000FA0   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    547                   az_xzm = (((code_xzm[8]<<8)|code_xzm[7]))/32768.0*180.0;
   \   00000FA4   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   00000FA8   0x7A00             LDRB     R0,[R0, #+8]
   \   00000FAA   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   00000FAE   0x79C9             LDRB     R1,[R1, #+7]
   \   00000FB0   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
   \   00000FB4   0x.... 0x....      BL       __aeabi_i2d
   \   00000FB8   0x2200             MOVS     R2,#+0
   \   00000FBA   0x.... 0x....      LDR.W    R3,??DataTable8_5  ;; 0x40e00000
   \   00000FBE   0x.... 0x....      BL       __aeabi_ddiv
   \   00000FC2   0x2200             MOVS     R2,#+0
   \   00000FC4   0x....             LDR.N    R3,??DataTable1_4  ;; 0x40668000
   \   00000FC6   0x.... 0x....      BL       __aeabi_dmul
   \   00000FCA   0x....             LDR.N    R2,??DataTable2_1
   \   00000FCC   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
    548                   
    549                   //算角速度
    550                   
    551                   
    552                  
    553                   //uart0Printf("\nax:%lf\nay:%lf\naz:%lf\n",ax_xzm,ay_xzm,az_xzm);   
    554                 }
    555                }  
    556                 //xzm=0x42;
    557             }
    558            } 
    559          }
   \                     ??UART3_IRQHandler_43: (+1)
   \   00000FD0   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    560              
    561          
    562          

   \                                 In section .bss, align 1
    563          u8 PITcounter = 0;
   \                     PITcounter:
   \   00000000                      DS8 1
    564          /*************************************************************************
    565          *  函数名称：PIT0_IRQHandler
    566          *  功能说明：PIT0 定时中断服务函数，每1ms速度和方向平滑输出一次
    567          *  参数说明：无
    568          *  函数返回：无
    569          *  修改时间：2014-6-17 wuwenqi
    570          *  备    注：
    571          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    572          void PIT1_IRQHandler(void)
    573          {
   \                     PIT1_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    574            //EnableInterrupts;
    575             PIT_Flag_Clear(PIT1);                 //清中断标志位
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x4003711c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable8_6  ;; 0x4003711c
   \   00000010   0x6008             STR      R0,[R1, #+0]
    576             if(number_xzm==5)
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x2805             CMP      R0,#+5
   \   0000001A   0xF040 0x8084      BNE.W    ??PIT1_IRQHandler_0
    577             {
    578             if(cccc==0)
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD110             BNE.N    ??PIT1_IRQHandler_1
    579             {
    580               duty1=10000;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   0000002C   0xF242 0x7110      MOVW     R1,#+10000
   \   00000030   0x6001             STR      R1,[R0, #+0]
    581               duty2=100;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000036   0x2164             MOVS     R1,#+100
   \   00000038   0x6001             STR      R1,[R0, #+0]
    582               duty3=100;
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000003E   0x2164             MOVS     R1,#+100
   \   00000040   0x6001             STR      R1,[R0, #+0]
    583               duty4=100;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000046   0x2164             MOVS     R1,#+100
   \   00000048   0x6001             STR      R1,[R0, #+0]
    584             }
    585             if(cccc==2)
   \                     ??PIT1_IRQHandler_1: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x2802             CMP      R0,#+2
   \   00000052   0xD110             BNE.N    ??PIT1_IRQHandler_2
    586             {
    587               duty1=100;
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000058   0x2164             MOVS     R1,#+100
   \   0000005A   0x6001             STR      R1,[R0, #+0]
    588               duty2=10000;
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000060   0xF242 0x7110      MOVW     R1,#+10000
   \   00000064   0x6001             STR      R1,[R0, #+0]
    589               duty3=100;
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000006A   0x2164             MOVS     R1,#+100
   \   0000006C   0x6001             STR      R1,[R0, #+0]
    590               duty4=100;
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000072   0x2164             MOVS     R1,#+100
   \   00000074   0x6001             STR      R1,[R0, #+0]
    591             }
    592             if(cccc==1)
   \                     ??PIT1_IRQHandler_2: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD110             BNE.N    ??PIT1_IRQHandler_3
    593             {
    594               duty1=100;
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000084   0x2164             MOVS     R1,#+100
   \   00000086   0x6001             STR      R1,[R0, #+0]
    595               duty2=100;
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   0000008C   0x2164             MOVS     R1,#+100
   \   0000008E   0x6001             STR      R1,[R0, #+0]
    596               duty3=10000;
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000094   0xF242 0x7110      MOVW     R1,#+10000
   \   00000098   0x6001             STR      R1,[R0, #+0]
    597               duty4=100;
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   0000009E   0x2164             MOVS     R1,#+100
   \   000000A0   0x6001             STR      R1,[R0, #+0]
    598             }
    599             if(cccc==3)
   \                     ??PIT1_IRQHandler_3: (+1)
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x2803             CMP      R0,#+3
   \   000000AA   0xD110             BNE.N    ??PIT1_IRQHandler_4
    600             {
    601               duty1=100;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000B0   0x2164             MOVS     R1,#+100
   \   000000B2   0x6001             STR      R1,[R0, #+0]
    602               duty2=100;
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000B8   0x2164             MOVS     R1,#+100
   \   000000BA   0x6001             STR      R1,[R0, #+0]
    603               duty3=100;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000000C0   0x2164             MOVS     R1,#+100
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    604               duty4=10000;
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000000C8   0xF242 0x7110      MOVW     R1,#+10000
   \   000000CC   0x6001             STR      R1,[R0, #+0]
    605             }
    606             FTM_PWM_Duty(FTM0,CH0,duty1);
   \                     ??PIT1_IRQHandler_4: (+1)
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000D2   0x6802             LDR      R2,[R0, #+0]
   \   000000D4   0x2100             MOVS     R1,#+0
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0x.... 0x....      BL       FTM_PWM_Duty
    607             FTM_PWM_Duty(FTM0,CH1,duty2);
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000E0   0x6802             LDR      R2,[R0, #+0]
   \   000000E2   0x2101             MOVS     R1,#+1
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x.... 0x....      BL       FTM_PWM_Duty
    608             FTM_PWM_Duty(FTM0,CH2,duty3);
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000000EE   0x6802             LDR      R2,[R0, #+0]
   \   000000F0   0x2102             MOVS     R1,#+2
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x.... 0x....      BL       FTM_PWM_Duty
    609             FTM_PWM_Duty(FTM0,CH3,duty4);
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000000FC   0x6802             LDR      R2,[R0, #+0]
   \   000000FE   0x2103             MOVS     R1,#+3
   \   00000100   0x2000             MOVS     R0,#+0
   \   00000102   0x.... 0x....      BL       FTM_PWM_Duty
    610             cccc++;
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0x1C40             ADDS     R0,R0,#+1
   \   0000010E   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   00000112   0x6008             STR      R0,[R1, #+0]
    611             if(cccc==4)
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000118   0x6800             LDR      R0,[R0, #+0]
   \   0000011A   0x2804             CMP      R0,#+4
   \   0000011C   0xD103             BNE.N    ??PIT1_IRQHandler_0
    612               cccc=0;
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   00000122   0x2100             MOVS     R1,#+0
   \   00000124   0x6001             STR      R1,[R0, #+0]
    613             
    614          } 
    615            
    616            
    617           
    618          }
   \                     ??PIT1_IRQHandler_0: (+1)
   \   00000126   0xBD01             POP      {R0,PC}          ;; return
    619          

   \                                 In section .text, align 2, keep-with-next
    620          void PIT0_IRQHandler(void)
    621          { 
   \                     PIT0_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    622             PIT_Flag_Clear(PIT0);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8_13  ;; 0x4003710c
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable8_13  ;; 0x4003710c
   \   00000010   0x6008             STR      R0,[R1, #+0]
    623             if(number_xzm==3)
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0x2803             CMP      R0,#+3
   \   0000001A   0xF040 0x811D      BNE.W    ??PIT0_IRQHandler_0
    624             {
    625             cc++;
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000022   0x6800             LDR      R0,[R0, #+0]
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable8_14
   \   0000002A   0x6008             STR      R0,[R1, #+0]
    626             if(cc==930)
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0xF240 0x31A2      MOVW     R1,#+930
   \   00000036   0x4288             CMP      R0,R1
   \   00000038   0xF040 0x810E      BNE.W    ??PIT0_IRQHandler_0
    627             {
    628               cc=0;
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000040   0x2100             MOVS     R1,#+0
   \   00000042   0x6001             STR      R1,[R0, #+0]
    629               ccc++;
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x1C40             ADDS     R0,R0,#+1
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000050   0x6008             STR      R0,[R1, #+0]
    630               if(ccc>=13)
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x280D             CMP      R0,#+13
   \   0000005A   0xDB04             BLT.N    ??PIT0_IRQHandler_1
    631               {
    632                 is_over_3_xzm=1;
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   00000060   0x2101             MOVS     R1,#+1
   \   00000062   0x6001             STR      R1,[R0, #+0]
   \   00000064   0xE003             B.N      ??PIT0_IRQHandler_2
    633               }
    634               else
    635               {
    636                 is_over_3_xzm=0;
   \                     ??PIT0_IRQHandler_1: (+1)
   \   00000066   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x6001             STR      R1,[R0, #+0]
    637               }
    638             //delayms(900);
    639             FTM_PWM_Duty(FTM0,CH0,duty1);
   \                     ??PIT0_IRQHandler_2: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000072   0x6802             LDR      R2,[R0, #+0]
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x.... 0x....      BL       FTM_PWM_Duty
    640             FTM_PWM_Duty(FTM0,CH1,duty2);
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000080   0x6802             LDR      R2,[R0, #+0]
   \   00000082   0x2101             MOVS     R1,#+1
   \   00000084   0x2000             MOVS     R0,#+0
   \   00000086   0x.... 0x....      BL       FTM_PWM_Duty
    641             FTM_PWM_Duty(FTM0,CH2,duty3);
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000008E   0x6802             LDR      R2,[R0, #+0]
   \   00000090   0x2102             MOVS     R1,#+2
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       FTM_PWM_Duty
    642             FTM_PWM_Duty(FTM0,CH3,duty4);
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   0000009C   0x6802             LDR      R2,[R0, #+0]
   \   0000009E   0x2103             MOVS     R1,#+3
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0x.... 0x....      BL       FTM_PWM_Duty
    643             
    644             if(angle_xzm>=15&&angle_xzm<=35)//15~35
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x380F             SUBS     R0,R0,#+15
   \   000000AE   0x2815             CMP      R0,#+21
   \   000000B0   0xD23C             BCS.N    ??PIT0_IRQHandler_3
    645            {
    646              if(duty1==100)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x2864             CMP      R0,#+100
   \   000000BA   0xD105             BNE.N    ??PIT0_IRQHandler_4
    647                duty1=9000;
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000C0   0xF242 0x3128      MOVW     R1,#+9000
   \   000000C4   0x6001             STR      R1,[R0, #+0]
   \   000000C6   0xE003             B.N      ??PIT0_IRQHandler_5
    648              else
    649                duty1=100;
   \                     ??PIT0_IRQHandler_4: (+1)
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000000CC   0x2164             MOVS     R1,#+100
   \   000000CE   0x6001             STR      R1,[R0, #+0]
    650              if(duty2==100)
   \                     ??PIT0_IRQHandler_5: (+1)
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0x2864             CMP      R0,#+100
   \   000000D8   0xD105             BNE.N    ??PIT0_IRQHandler_6
    651                duty2=9000;
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000DE   0xF242 0x3128      MOVW     R1,#+9000
   \   000000E2   0x6001             STR      R1,[R0, #+0]
   \   000000E4   0xE003             B.N      ??PIT0_IRQHandler_7
    652              else
    653                duty2=100;
   \                     ??PIT0_IRQHandler_6: (+1)
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000000EA   0x2164             MOVS     R1,#+100
   \   000000EC   0x6001             STR      R1,[R0, #+0]
    654              if(duty3==100)
   \                     ??PIT0_IRQHandler_7: (+1)
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x2864             CMP      R0,#+100
   \   000000F6   0xD105             BNE.N    ??PIT0_IRQHandler_8
    655                duty3=7000;
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000000FC   0xF641 0x3158      MOVW     R1,#+7000
   \   00000100   0x6001             STR      R1,[R0, #+0]
   \   00000102   0xE003             B.N      ??PIT0_IRQHandler_9
    656              else
    657                duty3=100;
   \                     ??PIT0_IRQHandler_8: (+1)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000108   0x2164             MOVS     R1,#+100
   \   0000010A   0x6001             STR      R1,[R0, #+0]
    658              if(duty4==100)
   \                     ??PIT0_IRQHandler_9: (+1)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x2864             CMP      R0,#+100
   \   00000114   0xD105             BNE.N    ??PIT0_IRQHandler_10
    659                duty4=7000;
   \   00000116   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   0000011A   0xF641 0x3158      MOVW     R1,#+7000
   \   0000011E   0x6001             STR      R1,[R0, #+0]
   \   00000120   0xE003             B.N      ??PIT0_IRQHandler_11
    660              else
    661                duty4=100;
   \                     ??PIT0_IRQHandler_10: (+1)
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000126   0x2164             MOVS     R1,#+100
   \   00000128   0x6001             STR      R1,[R0, #+0]
    662                   return;
   \                     ??PIT0_IRQHandler_11: (+1)
   \   0000012A   0xE095             B.N      ??PIT0_IRQHandler_12
    663            }
    664             
    665            if(angle_xzm>=0&&angle_xzm<15)
   \                     ??PIT0_IRQHandler_3: (+1)
   \   0000012C   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000130   0x6800             LDR      R0,[R0, #+0]
   \   00000132   0x1E00             SUBS     R0,R0,#+0
   \   00000134   0x280F             CMP      R0,#+15
   \   00000136   0xD226             BCS.N    ??PIT0_IRQHandler_13
    666            {
    667              if(duty1==100)
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x2864             CMP      R0,#+100
   \   00000140   0xD105             BNE.N    ??PIT0_IRQHandler_14
    668             {
    669               duty1=9000;
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000146   0xF242 0x3128      MOVW     R1,#+9000
   \   0000014A   0x6001             STR      R1,[R0, #+0]
   \   0000014C   0xE003             B.N      ??PIT0_IRQHandler_15
    670             }
    671             else
    672               duty1=100;
   \                     ??PIT0_IRQHandler_14: (+1)
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000152   0x2164             MOVS     R1,#+100
   \   00000154   0x6001             STR      R1,[R0, #+0]
    673            
    674             if(duty2==100)
   \                     ??PIT0_IRQHandler_15: (+1)
   \   00000156   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   0000015A   0x6800             LDR      R0,[R0, #+0]
   \   0000015C   0x2864             CMP      R0,#+100
   \   0000015E   0xD105             BNE.N    ??PIT0_IRQHandler_16
    675             {
    676               duty2=9000;
   \   00000160   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000164   0xF242 0x3128      MOVW     R1,#+9000
   \   00000168   0x6001             STR      R1,[R0, #+0]
   \   0000016A   0xE003             B.N      ??PIT0_IRQHandler_17
    677             }
    678             else
    679               duty2=100;
   \                     ??PIT0_IRQHandler_16: (+1)
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000170   0x2164             MOVS     R1,#+100
   \   00000172   0x6001             STR      R1,[R0, #+0]
    680             
    681             duty3=100;
   \                     ??PIT0_IRQHandler_17: (+1)
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000178   0x2164             MOVS     R1,#+100
   \   0000017A   0x6001             STR      R1,[R0, #+0]
    682             duty4=100;
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000180   0x2164             MOVS     R1,#+100
   \   00000182   0x6001             STR      R1,[R0, #+0]
    683             return;
   \   00000184   0xE068             B.N      ??PIT0_IRQHandler_12
    684            }
    685             if(angle_xzm>=80&&angle_xzm<120)
   \                     ??PIT0_IRQHandler_13: (+1)
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0x3850             SUBS     R0,R0,#+80
   \   0000018E   0x2828             CMP      R0,#+40
   \   00000190   0xD226             BCS.N    ??PIT0_IRQHandler_18
    686             {
    687             if(duty3==100)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000196   0x6800             LDR      R0,[R0, #+0]
   \   00000198   0x2864             CMP      R0,#+100
   \   0000019A   0xD105             BNE.N    ??PIT0_IRQHandler_19
    688             {
    689               duty3=9000;
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000001A0   0xF242 0x3128      MOVW     R1,#+9000
   \   000001A4   0x6001             STR      R1,[R0, #+0]
   \   000001A6   0xE003             B.N      ??PIT0_IRQHandler_20
    690             }
    691             else
    692               duty3=100;
   \                     ??PIT0_IRQHandler_19: (+1)
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000001AC   0x2164             MOVS     R1,#+100
   \   000001AE   0x6001             STR      R1,[R0, #+0]
    693             
    694             if(duty4==100)
   \                     ??PIT0_IRQHandler_20: (+1)
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0x2864             CMP      R0,#+100
   \   000001B8   0xD105             BNE.N    ??PIT0_IRQHandler_21
    695             {
    696               duty4=9000;
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001BE   0xF242 0x3128      MOVW     R1,#+9000
   \   000001C2   0x6001             STR      R1,[R0, #+0]
   \   000001C4   0xE003             B.N      ??PIT0_IRQHandler_22
    697             }
    698             else
    699               duty4=100;
   \                     ??PIT0_IRQHandler_21: (+1)
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001CA   0x2164             MOVS     R1,#+100
   \   000001CC   0x6001             STR      R1,[R0, #+0]
    700             duty1=100;
   \                     ??PIT0_IRQHandler_22: (+1)
   \   000001CE   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001D2   0x2164             MOVS     R1,#+100
   \   000001D4   0x6001             STR      R1,[R0, #+0]
    701             duty2=100;
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000001DA   0x2164             MOVS     R1,#+100
   \   000001DC   0x6001             STR      R1,[R0, #+0]
    702             return;
   \   000001DE   0xE03B             B.N      ??PIT0_IRQHandler_12
    703             
    704             }
    705             if(duty1==100)
   \                     ??PIT0_IRQHandler_18: (+1)
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001E4   0x6800             LDR      R0,[R0, #+0]
   \   000001E6   0x2864             CMP      R0,#+100
   \   000001E8   0xD105             BNE.N    ??PIT0_IRQHandler_23
    706             {
    707               duty1=9000;
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001EE   0xF242 0x3128      MOVW     R1,#+9000
   \   000001F2   0x6001             STR      R1,[R0, #+0]
   \   000001F4   0xE003             B.N      ??PIT0_IRQHandler_24
    708             }
    709             else
    710               duty1=100;
   \                     ??PIT0_IRQHandler_23: (+1)
   \   000001F6   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001FA   0x2164             MOVS     R1,#+100
   \   000001FC   0x6001             STR      R1,[R0, #+0]
    711            
    712             if(duty2==100)
   \                     ??PIT0_IRQHandler_24: (+1)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000202   0x6800             LDR      R0,[R0, #+0]
   \   00000204   0x2864             CMP      R0,#+100
   \   00000206   0xD105             BNE.N    ??PIT0_IRQHandler_25
    713             {
    714               duty2=9000;
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   0000020C   0xF242 0x3128      MOVW     R1,#+9000
   \   00000210   0x6001             STR      R1,[R0, #+0]
   \   00000212   0xE003             B.N      ??PIT0_IRQHandler_26
    715             }
    716             else
    717               duty2=100;
   \                     ??PIT0_IRQHandler_25: (+1)
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000218   0x2164             MOVS     R1,#+100
   \   0000021A   0x6001             STR      R1,[R0, #+0]
    718             if(duty3==100)
   \                     ??PIT0_IRQHandler_26: (+1)
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000220   0x6800             LDR      R0,[R0, #+0]
   \   00000222   0x2864             CMP      R0,#+100
   \   00000224   0xD105             BNE.N    ??PIT0_IRQHandler_27
    719             {
    720               duty3=9000;
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000022A   0xF242 0x3128      MOVW     R1,#+9000
   \   0000022E   0x6001             STR      R1,[R0, #+0]
   \   00000230   0xE003             B.N      ??PIT0_IRQHandler_28
    721             }
    722             else
    723               duty3=100;
   \                     ??PIT0_IRQHandler_27: (+1)
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000236   0x2164             MOVS     R1,#+100
   \   00000238   0x6001             STR      R1,[R0, #+0]
    724             
    725             if(duty4==100)
   \                     ??PIT0_IRQHandler_28: (+1)
   \   0000023A   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   0000023E   0x6800             LDR      R0,[R0, #+0]
   \   00000240   0x2864             CMP      R0,#+100
   \   00000242   0xD105             BNE.N    ??PIT0_IRQHandler_29
    726             {
    727               duty4=9000;
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000248   0xF242 0x3128      MOVW     R1,#+9000
   \   0000024C   0x6001             STR      R1,[R0, #+0]
   \   0000024E   0xE003             B.N      ??PIT0_IRQHandler_0
    728             }
    729             else
    730               duty4=100;
   \                     ??PIT0_IRQHandler_29: (+1)
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000254   0x2164             MOVS     R1,#+100
   \   00000256   0x6001             STR      R1,[R0, #+0]
    731             
    732             }
    733             }
    734             //uart0Printf("asda\n");
    735             
    736             
    737          }
   \                     ??PIT0_IRQHandler_0: (+1)
   \                     ??PIT0_IRQHandler_12: (+1)
   \   00000258   0xBD01             POP      {R0,PC}          ;; return
    738          
    739          
    740          /************************************************************************* 
    741          *  函数名称：PORTC_IRQHandler
    742          *  功能说明：液晶屏按键控制外部中断函数
    743          *  参数说明：无   
    744          *  函数返回：无
    745          *  修改时间：2015-3-14 luozimeng
    746          *  备    注：
    747          *************************************************************************/
    748          

   \                                 In section .text, align 2, keep-with-next
    749          void PORTA_IRQHandler()
    750          {  
    751            if(PORTA_ISFR & (1<<5))//判断PORTA 5是否产生中断
   \                     PORTA_IRQHandler: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8_18  ;; 0x400490a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0680             LSLS     R0,R0,#+26
   \   00000008   0xD539             BPL.N    ??PORTA_IRQHandler_0
    752              {
    753                PORTA_ISFR |=(1<<5);//产生中断，清中断
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable8_18  ;; 0x400490a0
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8_18  ;; 0x400490a0
   \   00000018   0x6008             STR      R0,[R1, #+0]
    754                ///////////////////////
    755           
    756                if(number_xzm==2)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x2802             CMP      R0,#+2
   \   00000022   0xD113             BNE.N    ??PORTA_IRQHandler_1
    757                {
    758                  is_over_2_xzm = 0;
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable8_19
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x6001             STR      R1,[R0, #+0]
    759                  distance_xzm --;
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x1E40             SUBS     R0,R0,#+1
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable8_20
   \   00000038   0x6008             STR      R0,[R1, #+0]
    760                  if(distance_xzm < 30)
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x281E             CMP      R0,#+30
   \   00000042   0xDA03             BGE.N    ??PORTA_IRQHandler_1
    761                    distance_xzm = 30;
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   00000048   0x211E             MOVS     R1,#+30
   \   0000004A   0x6001             STR      R1,[R0, #+0]
    762                }
    763                if(number_xzm==3)
   \                     ??PORTA_IRQHandler_1: (+1)
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   00000050   0x6800             LDR      R0,[R0, #+0]
   \   00000052   0x2803             CMP      R0,#+3
   \   00000054   0xD113             BNE.N    ??PORTA_IRQHandler_0
    764                {
    765                  is_over_3_xzm = 0;
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x6001             STR      R1,[R0, #+0]
    766                  angle_xzm --;
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x1E40             SUBS     R0,R0,#+1
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    767                  if(angle_xzm < 0)
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD503             BPL.N    ??PORTA_IRQHandler_0
    768                    angle_xzm = 0;
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0x6001             STR      R1,[R0, #+0]
    769                }
    770                /////////////////////
    771              }
    772            if(PORTA_ISFR & (1<<13))//判断PORTA 13是否产生中断
   \                     ??PORTA_IRQHandler_0: (+1)
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable8_18  ;; 0x400490a0
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x0480             LSLS     R0,R0,#+18
   \   00000086   0xF140 0x80D9      BPL.W    ??PORTA_IRQHandler_2
    773              {
    774                PORTA_ISFR |=(1<<13);//产生中断，清中断
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable8_18  ;; 0x400490a0
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable8_18  ;; 0x400490a0
   \   00000098   0x6008             STR      R0,[R1, #+0]
    775                ///////////////////////
    776                if(number_xzm==2)
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x2802             CMP      R0,#+2
   \   000000A2   0xD113             BNE.N    ??PORTA_IRQHandler_3
    777                {
    778                  is_over_2_xzm = 0;
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable8_19
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x6001             STR      R1,[R0, #+0]
    779                  distance_xzm ++;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x1C40             ADDS     R0,R0,#+1
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable8_20
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    780                  if(distance_xzm > 60)
   \   000000BA   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x283D             CMP      R0,#+61
   \   000000C2   0xDB03             BLT.N    ??PORTA_IRQHandler_3
    781                    distance_xzm = 60;
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable8_20
   \   000000C8   0x213C             MOVS     R1,#+60
   \   000000CA   0x6001             STR      R1,[R0, #+0]
    782                }
    783                if(number_xzm==3)
   \                     ??PORTA_IRQHandler_3: (+1)
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x2803             CMP      R0,#+3
   \   000000D4   0xF040 0x80B2      BNE.W    ??PORTA_IRQHandler_2
    784                {
    785                  is_over_3_xzm = 0;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0x6001             STR      R1,[R0, #+0]
    786                  cc=0;
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000000E4   0x2100             MOVS     R1,#+0
   \   000000E6   0x6001             STR      R1,[R0, #+0]
    787                  angle_xzm ++;
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x1C40             ADDS     R0,R0,#+1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    788                  if(angle_xzm >180)
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x28B5             CMP      R0,#+181
   \   000000FE   0xDB03             BLT.N    ??PORTA_IRQHandler_4
    789                    angle_xzm = 180;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000104   0x21B4             MOVS     R1,#+180
   \   00000106   0x6001             STR      R1,[R0, #+0]
    790                  
    791                 if(angle_xzm==45)
   \                     ??PORTA_IRQHandler_4: (+1)
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0x282D             CMP      R0,#+45
   \   00000110   0xD119             BNE.N    ??PORTA_IRQHandler_5
    792                  {
    793                  duty1=9000;
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000116   0xF242 0x3128      MOVW     R1,#+9000
   \   0000011A   0x6001             STR      R1,[R0, #+0]
    794                  duty4=9000;
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000120   0xF242 0x3128      MOVW     R1,#+9000
   \   00000124   0x6001             STR      R1,[R0, #+0]
    795                  duty2=100;
   \   00000126   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   0000012A   0x2164             MOVS     R1,#+100
   \   0000012C   0x6001             STR      R1,[R0, #+0]
    796                  duty3=100;
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000132   0x2164             MOVS     R1,#+100
   \   00000134   0x6001             STR      R1,[R0, #+0]
    797                  ccc=0;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   0000013A   0x2100             MOVS     R1,#+0
   \   0000013C   0x6001             STR      R1,[R0, #+0]
    798                  cc=0;
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000142   0x2100             MOVS     R1,#+0
   \   00000144   0x6001             STR      R1,[R0, #+0]
    799                  }
    800                  if(angle_xzm==135)
   \                     ??PORTA_IRQHandler_5: (+1)
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0x2887             CMP      R0,#+135
   \   0000014E   0xD119             BNE.N    ??PORTA_IRQHandler_6
    801                  {
    802                    duty1=9000;
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000154   0xF242 0x3128      MOVW     R1,#+9000
   \   00000158   0x6001             STR      R1,[R0, #+0]
    803                  duty3=9000;
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000015E   0xF242 0x3128      MOVW     R1,#+9000
   \   00000162   0x6001             STR      R1,[R0, #+0]
    804                  duty2=100;
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   00000168   0x2164             MOVS     R1,#+100
   \   0000016A   0x6001             STR      R1,[R0, #+0]
    805                  duty4=100;
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000170   0x2164             MOVS     R1,#+100
   \   00000172   0x6001             STR      R1,[R0, #+0]
    806                  ccc=0;
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   00000178   0x2100             MOVS     R1,#+0
   \   0000017A   0x6001             STR      R1,[R0, #+0]
    807                  cc=0;
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000180   0x2100             MOVS     R1,#+0
   \   00000182   0x6001             STR      R1,[R0, #+0]
    808                  }
    809                  if(angle_xzm==90)
   \                     ??PORTA_IRQHandler_6: (+1)
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0x285A             CMP      R0,#+90
   \   0000018C   0xD118             BNE.N    ??PORTA_IRQHandler_7
    810                  {
    811                   duty1=100;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   00000192   0x2164             MOVS     R1,#+100
   \   00000194   0x6001             STR      R1,[R0, #+0]
    812                  duty3=9000;
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   0000019A   0xF242 0x3128      MOVW     R1,#+9000
   \   0000019E   0x6001             STR      R1,[R0, #+0]
    813                  duty2=100;
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000001A4   0x2164             MOVS     R1,#+100
   \   000001A6   0x6001             STR      R1,[R0, #+0]
    814                  duty4=100;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001AC   0x2164             MOVS     R1,#+100
   \   000001AE   0x6001             STR      R1,[R0, #+0]
    815                  ccc=0;
   \   000001B0   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   000001B4   0x2100             MOVS     R1,#+0
   \   000001B6   0x6001             STR      R1,[R0, #+0]
    816                  cc=0;
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000001BC   0x2100             MOVS     R1,#+0
   \   000001BE   0x6001             STR      R1,[R0, #+0]
    817                  }
    818                  if(angle_xzm==0)
   \                     ??PORTA_IRQHandler_7: (+1)
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   000001C4   0x6800             LDR      R0,[R0, #+0]
   \   000001C6   0x2800             CMP      R0,#+0
   \   000001C8   0xD118             BNE.N    ??PORTA_IRQHandler_8
    819                  {
    820                    duty1=9000;
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   000001CE   0xF242 0x3128      MOVW     R1,#+9000
   \   000001D2   0x6001             STR      R1,[R0, #+0]
    821                    duty3=100;
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   000001D8   0x2164             MOVS     R1,#+100
   \   000001DA   0x6001             STR      R1,[R0, #+0]
    822                    duty2=100;
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   000001E0   0x2164             MOVS     R1,#+100
   \   000001E2   0x6001             STR      R1,[R0, #+0]
    823                    duty4=100;
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000001E8   0x2164             MOVS     R1,#+100
   \   000001EA   0x6001             STR      R1,[R0, #+0]
    824                    ccc=0;
   \   000001EC   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   000001F0   0x2100             MOVS     R1,#+0
   \   000001F2   0x6001             STR      R1,[R0, #+0]
    825                    cc=0;
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000001F8   0x2100             MOVS     R1,#+0
   \   000001FA   0x6001             STR      R1,[R0, #+0]
    826                  }
    827                  if(angle_xzm>=15&&angle_xzm<=35)
   \                     ??PORTA_IRQHandler_8: (+1)
   \   000001FC   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   00000200   0x6800             LDR      R0,[R0, #+0]
   \   00000202   0x380F             SUBS     R0,R0,#+15
   \   00000204   0x2815             CMP      R0,#+21
   \   00000206   0xD219             BCS.N    ??PORTA_IRQHandler_2
    828                  {
    829                    duty1=9000;
   \   00000208   0x.... 0x....      LDR.W    R0,??DataTable8_9
   \   0000020C   0xF242 0x3128      MOVW     R1,#+9000
   \   00000210   0x6001             STR      R1,[R0, #+0]
    830                    duty3=100;
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000216   0x2164             MOVS     R1,#+100
   \   00000218   0x6001             STR      R1,[R0, #+0]
    831                    duty2=100;
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable8_10
   \   0000021E   0x2164             MOVS     R1,#+100
   \   00000220   0x6001             STR      R1,[R0, #+0]
    832                    duty4=7000;
   \   00000222   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   00000226   0xF641 0x3158      MOVW     R1,#+7000
   \   0000022A   0x6001             STR      R1,[R0, #+0]
    833                    ccc=0;
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   00000230   0x2100             MOVS     R1,#+0
   \   00000232   0x6001             STR      R1,[R0, #+0]
    834                    cc=0;
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   00000238   0x2100             MOVS     R1,#+0
   \   0000023A   0x6001             STR      R1,[R0, #+0]
    835                  }
    836                 
    837                }
    838                    
    839                  /////////////////////
    840              }
    841            
    842          }
   \                     ??PORTA_IRQHandler_2: (+1)
   \   0000023C   0x4770             BX       LR               ;; return
    843          

   \                                 In section .text, align 2, keep-with-next
    844          void PORTC_IRQHandler()
    845          {  
    846            if(PORTC_ISFR & (1<<0))//判断PORTC 0是否产生中断
   \                     PORTC_IRQHandler: (+1)
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x07C0             LSLS     R0,R0,#+31
   \   00000008   0xD507             BPL.N    ??PORTC_IRQHandler_0
    847            {
    848                PORTC_ISFR |=(1<<0);//产生中断，清中断
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8_21  ;; 0x4004b0a0
   \   00000018   0x6008             STR      R0,[R1, #+0]
    849                  ///////////////////////
    850                  //uartPrintf("\n--------------PC0--------------（EXIT）\n");
    851                  /////////////////////
    852            }
    853            if(PORTC_ISFR & (1<<6))//判断PORTC 6是否产生中断
   \                     ??PORTC_IRQHandler_0: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x0640             LSLS     R0,R0,#+25
   \   00000022   0xD507             BPL.N    ??PORTC_IRQHandler_1
    854                {
    855                  PORTC_ISFR |=(1<<6);//产生中断，清中断
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable8_21  ;; 0x4004b0a0
   \   00000032   0x6008             STR      R0,[R1, #+0]
    856                  ///////////////////////
    857                    //uartPrintf("\n--------------PC6--------------（EXIT）\n");
    858                 /* 
    859                  int x=0;
    860                  while(x<10)
    861                  {
    862                    if(x%2==0)
    863                    {
    864                        FTM_PWM_Duty(FTM0,CH0,9500);
    865                        FTM_PWM_Duty(FTM0,CH1,100);
    866                    }
    867                     else
    868                     {
    869                       FTM_PWM_Duty(FTM0,CH1,9500);
    870                       FTM_PWM_Duty(FTM0,CH0,100);
    871                     }
    872                  
    873                  delayms(850);
    874                  x++;
    875                  }
    876                  
    877                   number_xzm=5;
    878                   cccc=0;*/
    879                  /////////////////////
    880                }
    881             if(PORTC_ISFR & (1<<7))//判断PORTC 7是否产生中断
   \                     ??PORTC_IRQHandler_1: (+1)
   \   00000034   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0x0600             LSLS     R0,R0,#+24
   \   0000003C   0xD507             BPL.N    ??PORTC_IRQHandler_2
    882              {
    883                PORTC_ISFR |=(1<<7);//产生中断，清中断
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable8_21  ;; 0x4004b0a0
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable8_21  ;; 0x4004b0a0
   \   0000004C   0x6008             STR      R0,[R1, #+0]
    884                
    885                ///////////////////////
    886                      //uartPrintf("\n--------------PC7--------------（EXIT）\n");
    887          
    888                /////////////////////
    889              }
    890          }
   \                     ??PORTC_IRQHandler_2: (+1)
   \   0000004E   0x4770             BX       LR               ;; return
    891          

   \                                 In section .text, align 2, keep-with-next
    892          void PORTE_IRQHandler()
    893          {  
   \                     PORTE_IRQHandler: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    894            if(PORTE_ISFR & (1<<24))//判断PORTE 24是否产生中断
   \   00000002   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x01C0             LSLS     R0,R0,#+7
   \   00000008   0xD524             BPL.N    ??PORTE_IRQHandler_0
    895            {
    896               PORTE_ISFR |=(1<<24);//产生中断，清中断
   \   0000000A   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000012   0x....             LDR.N    R1,??DataTable8_22  ;; 0x4004d0a0
   \   00000014   0x6008             STR      R0,[R1, #+0]
    897               ///////////////////////
    898               if(gpio_get(PORTE,25)==HIGH && gpio_get(PORTE,26)==HIGH)
   \   00000016   0x2119             MOVS     R1,#+25
   \   00000018   0x2004             MOVS     R0,#+4
   \   0000001A   0x.... 0x....      BL       gpio_get
   \   0000001E   0x2801             CMP      R0,#+1
   \   00000020   0xD115             BNE.N    ??PORTE_IRQHandler_1
   \   00000022   0x211A             MOVS     R1,#+26
   \   00000024   0x2004             MOVS     R0,#+4
   \   00000026   0x.... 0x....      BL       gpio_get
   \   0000002A   0x2801             CMP      R0,#+1
   \   0000002C   0xD10F             BNE.N    ??PORTE_IRQHandler_1
    899               {
    900                  number_xzm = 4;
   \   0000002E   0x....             LDR.N    R0,??DataTable8_7
   \   00000030   0x2104             MOVS     R1,#+4
   \   00000032   0x6001             STR      R1,[R0, #+0]
    901                  duty1=100;
   \   00000034   0x....             LDR.N    R0,??DataTable8_9
   \   00000036   0x2164             MOVS     R1,#+100
   \   00000038   0x6001             STR      R1,[R0, #+0]
    902                  duty2=100;
   \   0000003A   0x....             LDR.N    R0,??DataTable8_10
   \   0000003C   0x2164             MOVS     R1,#+100
   \   0000003E   0x6001             STR      R1,[R0, #+0]
    903                  duty3=100;
   \   00000040   0x....             LDR.N    R0,??DataTable8_11
   \   00000042   0x2164             MOVS     R1,#+100
   \   00000044   0x6001             STR      R1,[R0, #+0]
    904                  duty4=100;
   \   00000046   0x....             LDR.N    R0,??DataTable8_12
   \   00000048   0x2164             MOVS     R1,#+100
   \   0000004A   0x6001             STR      R1,[R0, #+0]
   \   0000004C   0xE002             B.N      ??PORTE_IRQHandler_0
    905                  //uartPrintf("---------------------4\n");
    906               }
    907               else
    908               {
    909                  number_xzm = 1;
   \                     ??PORTE_IRQHandler_1: (+1)
   \   0000004E   0x....             LDR.N    R0,??DataTable8_7
   \   00000050   0x2101             MOVS     R1,#+1
   \   00000052   0x6001             STR      R1,[R0, #+0]
    910                  //uartPrintf("---------------------1\n");
    911               }
    912                  
    913               /////////////////////
    914            }
    915            if(PORTE_ISFR & (1<<25))//判断PORTE 25是否产生中断
   \                     ??PORTE_IRQHandler_0: (+1)
   \   00000054   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x0180             LSLS     R0,R0,#+6
   \   0000005A   0xD524             BPL.N    ??PORTE_IRQHandler_2
    916            {
    917               PORTE_ISFR |=(1<<6);//产生中断，清中断
   \   0000005C   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000064   0x....             LDR.N    R1,??DataTable8_22  ;; 0x4004d0a0
   \   00000066   0x6008             STR      R0,[R1, #+0]
    918               ///////////////////////
    919               if(gpio_get(PORTE,24)==HIGH && gpio_get(PORTE,26)==HIGH)
   \   00000068   0x2118             MOVS     R1,#+24
   \   0000006A   0x2004             MOVS     R0,#+4
   \   0000006C   0x.... 0x....      BL       gpio_get
   \   00000070   0x2801             CMP      R0,#+1
   \   00000072   0xD115             BNE.N    ??PORTE_IRQHandler_3
   \   00000074   0x211A             MOVS     R1,#+26
   \   00000076   0x2004             MOVS     R0,#+4
   \   00000078   0x.... 0x....      BL       gpio_get
   \   0000007C   0x2801             CMP      R0,#+1
   \   0000007E   0xD10F             BNE.N    ??PORTE_IRQHandler_3
    920               {
    921                  number_xzm = 4;
   \   00000080   0x....             LDR.N    R0,??DataTable8_7
   \   00000082   0x2104             MOVS     R1,#+4
   \   00000084   0x6001             STR      R1,[R0, #+0]
    922                  //uartPrintf("---------------------4\n");
    923                  duty1=100;
   \   00000086   0x....             LDR.N    R0,??DataTable8_9
   \   00000088   0x2164             MOVS     R1,#+100
   \   0000008A   0x6001             STR      R1,[R0, #+0]
    924                  duty2=100;
   \   0000008C   0x....             LDR.N    R0,??DataTable8_10
   \   0000008E   0x2164             MOVS     R1,#+100
   \   00000090   0x6001             STR      R1,[R0, #+0]
    925                  duty3=100;
   \   00000092   0x....             LDR.N    R0,??DataTable8_11
   \   00000094   0x2164             MOVS     R1,#+100
   \   00000096   0x6001             STR      R1,[R0, #+0]
    926                  duty4=100;
   \   00000098   0x....             LDR.N    R0,??DataTable8_12
   \   0000009A   0x2164             MOVS     R1,#+100
   \   0000009C   0x6001             STR      R1,[R0, #+0]
   \   0000009E   0xE002             B.N      ??PORTE_IRQHandler_2
    927               }
    928               else
    929               {
    930                  number_xzm = 2;
   \                     ??PORTE_IRQHandler_3: (+1)
   \   000000A0   0x....             LDR.N    R0,??DataTable8_7
   \   000000A2   0x2102             MOVS     R1,#+2
   \   000000A4   0x6001             STR      R1,[R0, #+0]
    931                  //uartPrintf("---------------------2\n");
    932               }
    933               /////////////////////
    934            }
    935            if(PORTE_ISFR & (1<<26))//判断PORTE 26是否产生中断
   \                     ??PORTE_IRQHandler_2: (+1)
   \   000000A6   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x0140             LSLS     R0,R0,#+5
   \   000000AC   0xF140 0x809B      BPL.W    ??PORTE_IRQHandler_4
    936            {
    937               PORTE_ISFR |=(1<<26);//产生中断，清中断
   \   000000B0   0x....             LDR.N    R0,??DataTable8_22  ;; 0x4004d0a0
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x6080      ORRS     R0,R0,#0x4000000
   \   000000B8   0x....             LDR.N    R1,??DataTable8_22  ;; 0x4004d0a0
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    938                
    939               ///////////////////////
    940               if(gpio_get(PORTE,25)==HIGH && gpio_get(PORTE,26)==HIGH)
   \   000000BC   0x2119             MOVS     R1,#+25
   \   000000BE   0x2004             MOVS     R0,#+4
   \   000000C0   0x.... 0x....      BL       gpio_get
   \   000000C4   0x2801             CMP      R0,#+1
   \   000000C6   0xD115             BNE.N    ??PORTE_IRQHandler_5
   \   000000C8   0x211A             MOVS     R1,#+26
   \   000000CA   0x2004             MOVS     R0,#+4
   \   000000CC   0x.... 0x....      BL       gpio_get
   \   000000D0   0x2801             CMP      R0,#+1
   \   000000D2   0xD10F             BNE.N    ??PORTE_IRQHandler_5
    941               {
    942                  number_xzm = 4;
   \   000000D4   0x....             LDR.N    R0,??DataTable8_7
   \   000000D6   0x2104             MOVS     R1,#+4
   \   000000D8   0x6001             STR      R1,[R0, #+0]
    943                  duty1=100;
   \   000000DA   0x....             LDR.N    R0,??DataTable8_9
   \   000000DC   0x2164             MOVS     R1,#+100
   \   000000DE   0x6001             STR      R1,[R0, #+0]
    944                  duty2=100;
   \   000000E0   0x....             LDR.N    R0,??DataTable8_10
   \   000000E2   0x2164             MOVS     R1,#+100
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    945                  duty3=100;
   \   000000E6   0x....             LDR.N    R0,??DataTable8_11
   \   000000E8   0x2164             MOVS     R1,#+100
   \   000000EA   0x6001             STR      R1,[R0, #+0]
    946                  duty4=100;
   \   000000EC   0x....             LDR.N    R0,??DataTable8_12
   \   000000EE   0x2164             MOVS     R1,#+100
   \   000000F0   0x6001             STR      R1,[R0, #+0]
   \   000000F2   0xE078             B.N      ??PORTE_IRQHandler_4
    947                  //uartPrintf("---------------------4\n");
    948               }
    949               else
    950               {
    951                  number_xzm = 3;
   \                     ??PORTE_IRQHandler_5: (+1)
   \   000000F4   0x....             LDR.N    R0,??DataTable8_7
   \   000000F6   0x2103             MOVS     R1,#+3
   \   000000F8   0x6001             STR      R1,[R0, #+0]
    952                  if(angle_xzm==45)
   \   000000FA   0x....             LDR.N    R0,??DataTable8_17
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x282D             CMP      R0,#+45
   \   00000100   0xD113             BNE.N    ??PORTE_IRQHandler_6
    953                  {
    954                  duty1=9000;
   \   00000102   0x....             LDR.N    R0,??DataTable8_9
   \   00000104   0xF242 0x3128      MOVW     R1,#+9000
   \   00000108   0x6001             STR      R1,[R0, #+0]
    955                  duty4=9000;
   \   0000010A   0x....             LDR.N    R0,??DataTable8_12
   \   0000010C   0xF242 0x3128      MOVW     R1,#+9000
   \   00000110   0x6001             STR      R1,[R0, #+0]
    956                  duty2=100;
   \   00000112   0x....             LDR.N    R0,??DataTable8_10
   \   00000114   0x2164             MOVS     R1,#+100
   \   00000116   0x6001             STR      R1,[R0, #+0]
    957                  duty3=100;
   \   00000118   0x....             LDR.N    R0,??DataTable8_11
   \   0000011A   0x2164             MOVS     R1,#+100
   \   0000011C   0x6001             STR      R1,[R0, #+0]
    958                  ccc=0;
   \   0000011E   0x....             LDR.N    R0,??DataTable8_15
   \   00000120   0x2100             MOVS     R1,#+0
   \   00000122   0x6001             STR      R1,[R0, #+0]
    959                  cc=0;
   \   00000124   0x....             LDR.N    R0,??DataTable8_14
   \   00000126   0x2100             MOVS     R1,#+0
   \   00000128   0x6001             STR      R1,[R0, #+0]
    960                  }
    961                  if(angle_xzm==135)
   \                     ??PORTE_IRQHandler_6: (+1)
   \   0000012A   0x....             LDR.N    R0,??DataTable8_17
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x2887             CMP      R0,#+135
   \   00000130   0xD113             BNE.N    ??PORTE_IRQHandler_7
    962                  {
    963                    duty1=9000;
   \   00000132   0x....             LDR.N    R0,??DataTable8_9
   \   00000134   0xF242 0x3128      MOVW     R1,#+9000
   \   00000138   0x6001             STR      R1,[R0, #+0]
    964                  duty3=9000;
   \   0000013A   0x....             LDR.N    R0,??DataTable8_11
   \   0000013C   0xF242 0x3128      MOVW     R1,#+9000
   \   00000140   0x6001             STR      R1,[R0, #+0]
    965                  duty2=100;
   \   00000142   0x....             LDR.N    R0,??DataTable8_10
   \   00000144   0x2164             MOVS     R1,#+100
   \   00000146   0x6001             STR      R1,[R0, #+0]
    966                  duty4=100;
   \   00000148   0x....             LDR.N    R0,??DataTable8_12
   \   0000014A   0x2164             MOVS     R1,#+100
   \   0000014C   0x6001             STR      R1,[R0, #+0]
    967                  ccc=0;
   \   0000014E   0x....             LDR.N    R0,??DataTable8_15
   \   00000150   0x2100             MOVS     R1,#+0
   \   00000152   0x6001             STR      R1,[R0, #+0]
    968                  cc=0;
   \   00000154   0x....             LDR.N    R0,??DataTable8_14
   \   00000156   0x2100             MOVS     R1,#+0
   \   00000158   0x6001             STR      R1,[R0, #+0]
    969                  }
    970                  if(angle_xzm==90)
   \                     ??PORTE_IRQHandler_7: (+1)
   \   0000015A   0x....             LDR.N    R0,??DataTable8_17
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x285A             CMP      R0,#+90
   \   00000160   0xD112             BNE.N    ??PORTE_IRQHandler_8
    971                  {
    972                   duty1=100;
   \   00000162   0x....             LDR.N    R0,??DataTable8_9
   \   00000164   0x2164             MOVS     R1,#+100
   \   00000166   0x6001             STR      R1,[R0, #+0]
    973                  duty3=9000;
   \   00000168   0x....             LDR.N    R0,??DataTable8_11
   \   0000016A   0xF242 0x3128      MOVW     R1,#+9000
   \   0000016E   0x6001             STR      R1,[R0, #+0]
    974                  duty2=100;
   \   00000170   0x....             LDR.N    R0,??DataTable8_10
   \   00000172   0x2164             MOVS     R1,#+100
   \   00000174   0x6001             STR      R1,[R0, #+0]
    975                  duty4=100;
   \   00000176   0x....             LDR.N    R0,??DataTable8_12
   \   00000178   0x2164             MOVS     R1,#+100
   \   0000017A   0x6001             STR      R1,[R0, #+0]
    976                  ccc=0;
   \   0000017C   0x....             LDR.N    R0,??DataTable8_15
   \   0000017E   0x2100             MOVS     R1,#+0
   \   00000180   0x6001             STR      R1,[R0, #+0]
    977                  cc=0;
   \   00000182   0x....             LDR.N    R0,??DataTable8_14
   \   00000184   0x2100             MOVS     R1,#+0
   \   00000186   0x6001             STR      R1,[R0, #+0]
    978                  }
    979                  if(angle_xzm==0)
   \                     ??PORTE_IRQHandler_8: (+1)
   \   00000188   0x....             LDR.N    R0,??DataTable8_17
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0x2800             CMP      R0,#+0
   \   0000018E   0xD112             BNE.N    ??PORTE_IRQHandler_9
    980                  {
    981                    duty1=9000;
   \   00000190   0x....             LDR.N    R0,??DataTable8_9
   \   00000192   0xF242 0x3128      MOVW     R1,#+9000
   \   00000196   0x6001             STR      R1,[R0, #+0]
    982                  duty3=100;
   \   00000198   0x....             LDR.N    R0,??DataTable8_11
   \   0000019A   0x2164             MOVS     R1,#+100
   \   0000019C   0x6001             STR      R1,[R0, #+0]
    983                  duty2=100;
   \   0000019E   0x....             LDR.N    R0,??DataTable8_10
   \   000001A0   0x2164             MOVS     R1,#+100
   \   000001A2   0x6001             STR      R1,[R0, #+0]
    984                  duty4=100;
   \   000001A4   0x....             LDR.N    R0,??DataTable8_12
   \   000001A6   0x2164             MOVS     R1,#+100
   \   000001A8   0x6001             STR      R1,[R0, #+0]
    985                  ccc=0;
   \   000001AA   0x....             LDR.N    R0,??DataTable8_15
   \   000001AC   0x2100             MOVS     R1,#+0
   \   000001AE   0x6001             STR      R1,[R0, #+0]
    986                  cc=0;
   \   000001B0   0x....             LDR.N    R0,??DataTable8_14
   \   000001B2   0x2100             MOVS     R1,#+0
   \   000001B4   0x6001             STR      R1,[R0, #+0]
    987                  }
    988                  if(angle_xzm==30)
   \                     ??PORTE_IRQHandler_9: (+1)
   \   000001B6   0x....             LDR.N    R0,??DataTable8_17
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x281E             CMP      R0,#+30
   \   000001BC   0xD113             BNE.N    ??PORTE_IRQHandler_4
    989                  {
    990                    duty1=9000;
   \   000001BE   0x....             LDR.N    R0,??DataTable8_9
   \   000001C0   0xF242 0x3128      MOVW     R1,#+9000
   \   000001C4   0x6001             STR      R1,[R0, #+0]
    991                    duty3=100;
   \   000001C6   0x....             LDR.N    R0,??DataTable8_11
   \   000001C8   0x2164             MOVS     R1,#+100
   \   000001CA   0x6001             STR      R1,[R0, #+0]
    992                    duty2=100;
   \   000001CC   0x....             LDR.N    R0,??DataTable8_10
   \   000001CE   0x2164             MOVS     R1,#+100
   \   000001D0   0x6001             STR      R1,[R0, #+0]
    993                    duty4=7500;
   \   000001D2   0x....             LDR.N    R0,??DataTable8_12
   \   000001D4   0xF641 0x514C      MOVW     R1,#+7500
   \   000001D8   0x6001             STR      R1,[R0, #+0]
    994                    ccc=0;
   \   000001DA   0x....             LDR.N    R0,??DataTable8_15
   \   000001DC   0x2100             MOVS     R1,#+0
   \   000001DE   0x6001             STR      R1,[R0, #+0]
    995                    cc=0;
   \   000001E0   0x....             LDR.N    R0,??DataTable8_14
   \   000001E2   0x2100             MOVS     R1,#+0
   \   000001E4   0x6001             STR      R1,[R0, #+0]
    996                  }
    997                  //uartPrintf("---------------------3\n");
    998               }
    999               /////////////////////
   1000            }
   1001          }
   \                     ??PORTE_IRQHandler_4: (+1)
   \   000001E6   0xBD01             POP      {R0,PC}          ;; return
   1002          
   1003          
   1004          
   1005          /************************************************************************* 
   1006          *  函数名称：PORTB_IRQHandler
   1007          *  功能说明：摄像头行场中断服务函数  场中断使用food，就不用分奇偶场了
   1008          *  参数说明：无   
   1009          *  函数返回：无
   1010          *  修改时间：2014-6-17 wuwenqi
   1011          *  备    注：
   1012          *************************************************************************/
   1013          #if 1

   \                                 In section .bss, align 4
   1014          u32 tmpline = 0;//行号
   \                     tmpline:
   \   00000000                      DS8 4
   1015           //已采集到的图像的行号
   1016          

   \                                 In section .text, align 4, keep-with-next
   1017          void PORTB_IRQHandler()
   1018          {
   \                     PORTB_IRQHandler: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   1019               u32 tmpISFR = 0;
   \   00000002   0x2400             MOVS     R4,#+0
   1020               tmpISFR=PORTB_ISFR;
   \   00000004   0x....             LDR.N    R0,??DataTable8_23  ;; 0x4004a0a0
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x0004             MOVS     R4,R0
   1021               PORTB_ISFR |= 0xFFFFFFFF;
   \   0000000A   0x....             LDR.N    R0,??DataTable8_23  ;; 0x4004a0a0
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x....             LDR.N    R1,??DataTable8_23  ;; 0x4004a0a0
   \   00000010   0xF05F 0x32FF      MOVS     R2,#-1
   \   00000014   0x600A             STR      R2,[R1, #+0]
   1022               
   1023               DisableInterrupts; //不允许中断嵌套
   \   00000016   0xB672             CPSID i
   1024               //========================== n = CAM_HR_CHn ========================================
   1025               
   1026               if((tmpISFR & (1<<CAM_HR_CHn)))   //PB3 触发中断  行中断
   \   00000018   0x07A1             LSLS     R1,R4,#+30
   \   0000001A   0xD52E             BPL.N    ??PORTB_IRQHandler_0
   1027               {
   1028                 //uart0Printf("H ");
   1029                   tmpline++; 
   \   0000001C   0x....             LDR.N    R0,??DataTable8_24
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x1C40             ADDS     R0,R0,#+1
   \   00000022   0x....             LDR.N    R1,??DataTable8_24
   \   00000024   0x6008             STR      R0,[R1, #+0]
   1030                       if(0 == (tmpline % 2))//对tmpline取余，当tmpline为偶数行时进入（进行数据传输）
   \   00000026   0x....             LDR.N    R0,??DataTable8_24
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x07C0             LSLS     R0,R0,#+31
   \   0000002C   0xD425             BMI.N    ??PORTB_IRQHandler_0
   1031                       {
   1032                         if(tmpline > 2)
   \   0000002E   0x....             LDR.N    R0,??DataTable8_24
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x2803             CMP      R0,#+3
   \   00000034   0xD312             BCC.N    ??PORTB_IRQHandler_1
   1033                         {
   1034                           DMA_SETDAADDR(CAM_DMA_CH,&Pic_Buffer[tmprow][0]);//Pic_Buffer的大小为120(row)*160(column) 这里是指从第row行的第0列（个像素点）开始传输
   \   00000036   0x....             LDR.N    R0,??DataTable8_25
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2173             MOVS     R1,#+115
   \   0000003C   0x....             LDR.N    R2,??DataTable8_26
   \   0000003E   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000042   0x....             LDR.N    R1,??DataTable8_27  ;; 0x40009010
   \   00000044   0x6008             STR      R0,[R1, #+0]
   1035                           DMA_EN(CAM_DMA_CH);//使能通道硬件DMA请求 
   \   00000046   0x....             LDR.N    R0,??DataTable8_28  ;; 0x4000800c
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   0000004E   0x....             LDR.N    R1,??DataTable8_28  ;; 0x4000800c
   \   00000050   0x6008             STR      R0,[R1, #+0]
   1036                           tmprow++;
   \   00000052   0x....             LDR.N    R0,??DataTable8_25
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable8_25
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
   1037                         }
   1038                        // uart0Printf("R:%d ",tmprow);
   1039                         if(tmprow >= ROW)
   \                     ??PORTB_IRQHandler_1: (+1)
   \   0000005C   0x....             LDR.N    R0,??DataTable8_25
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x2878             CMP      R0,#+120
   \   00000062   0xDB0A             BLT.N    ??PORTB_IRQHandler_0
   1040                         {
   1041                           
   1042                             Dis_CAM;
   \   00000064   0x2103             MOVS     R1,#+3
   \   00000066   0x2001             MOVS     R0,#+1
   \   00000068   0x.... 0x....      BL       exti_irq_DIS
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0x2001             MOVS     R0,#+1
   \   00000070   0x.... 0x....      BL       exti_irq_DIS
   1043                             photo_complete_flag = 1;
   \   00000074   0x....             LDR.N    R0,??DataTable8_29
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x7001             STRB     R1,[R0, #+0]
   1044                              //uartPrintf("%d\n",photo_complete_flag);
   1045                             //uart0Printf("C");
   1046                         }
   1047                      }  
   1048               }
   1049               //========================== n = CAM_VS_CHn ========================================
   1050               if((tmpISFR & (1<<CAM_VS_CHn))) //PTB2 触发中断  场中断；
   \                     ??PORTB_IRQHandler_0: (+1)
   \   0000007A   0x0720             LSLS     R0,R4,#+28
   \   0000007C   0xD510             BPL.N    ??PORTB_IRQHandler_2
   1051               { 
   1052                 //uart0Printf("V ");
   1053                   tmpline = 0;//行号清零
   \   0000007E   0x....             LDR.N    R0,??DataTable8_24
   \   00000080   0x2100             MOVS     R1,#+0
   \   00000082   0x6001             STR      R1,[R0, #+0]
   1054                   tmprow = 0; //列号清零
   \   00000084   0x....             LDR.N    R0,??DataTable8_25
   \   00000086   0x2100             MOVS     R1,#+0
   \   00000088   0x7001             STRB     R1,[R0, #+0]
   1055                   DMA_IRQ_CLEAN(CAM_DMA_CH);//清除通道传输中断标志位
   \   0000008A   0x....             LDR.N    R0,??DataTable8_30  ;; 0x40008024
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000092   0x....             LDR.N    R1,??DataTable8_30  ;; 0x40008024
   \   00000094   0x6008             STR      R0,[R1, #+0]
   1056                   En_HREF;                  //打开行中断  
   \   00000096   0x2209             MOVS     R2,#+9
   \   00000098   0x2101             MOVS     R1,#+1
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x.... 0x....      BL       exti_irq_EN
   1057                   
   1058                   
   1059               }
   1060               
   1061              
   1062                 
   1063               EnableInterrupts; //打开中断
   \                     ??PORTB_IRQHandler_2: (+1)
   \   000000A0   0xB662             CPSIE i
   1064          }
   \   000000A2   0xBD10             POP      {R4,PC}          ;; return
   1065          #endif
   1066          
   1067          /*************************************************************************
   1068          *                             蓝宙电子工作室
   1069          *
   1070          *  函数名称：LPT_Handler
   1071          *  功能说明：LPT编码器溢出中断
   1072          *  参数说明：无
   1073          *  函数返回：无
   1074          *  修改时间：2014-6-17   已测试
   1075          *  备    注：
   1076          *************************************************************************/

   \                                 In section .bss, align 1
   1077          volatile u8 LPT_INT_count = 0;
   \                     LPT_INT_count:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
   1078          void  LPT_Handler(void)
   1079          {
   1080              LPTMR0_CSR |= LPTMR_CSR_TCF_MASK;   //清除LPTMR比较标志
   \                     LPT_Handler: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable8_31  ;; 0x40040000
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000008   0x....             LDR.N    R1,??DataTable8_31  ;; 0x40040000
   \   0000000A   0x6008             STR      R0,[R1, #+0]
   1081              LPT_INT_count++;                    //中断溢出加1
   \   0000000C   0x....             LDR.N    R0,??DataTable8_32
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x1C40             ADDS     R0,R0,#+1
   \   00000012   0x....             LDR.N    R1,??DataTable8_32
   \   00000014   0x7008             STRB     R0,[R1, #+0]
   1082          }
   \   00000016   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     `?<Constant "Input = %c\\n">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     wz_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0xC0AF4000         DC32     0xc0af4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     wy_last_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ay_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40668000         DC32     0x40668000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     duty1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     duty2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     b_60_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ax_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     az_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     is_over_2_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     is_over_1_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0xC0768000         DC32     0xc0768000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0xB851EB85         DC32     0xb851eb85

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x4001851E         DC32     0x4001851e

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0xE147AE14         DC32     0xe147ae14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0xBFFE147A         DC32     0xbffe147a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x7E61DF46         DC32     0x7e61df46

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x404CA5DC         DC32     0x404ca5dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     w_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     count_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     code_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     l_4_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     h_4_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0xC01BFFFF         DC32     0xc01bffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     is_over_4_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x401C0000         DC32     0x401c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     wy_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     wx_last_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     wx_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     a_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x40E00000         DC32     0x40e00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x4003711C         DC32     0x4003711c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     number_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     cccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     duty1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     duty2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     duty3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     duty4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     cc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     ccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     is_over_3_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     angle_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x400490A0         DC32     0x400490a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x........         DC32     is_over_2_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x........         DC32     distance_xzm

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x4004B0A0         DC32     0x4004b0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x4004D0A0         DC32     0x4004d0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x4004A0A0         DC32     0x4004a0a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0x........         DC32     tmpline

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     tmprow

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     Pic_Buffer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x40009010         DC32     0x40009010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x4000800C         DC32     0x4000800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     photo_complete_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x40008024         DC32     0x40008024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     LPT_INT_count

   \                                 In section .rodata, align 4
   \                     `?<Constant "Input = %c\\n">`:
   \   00000000   0x49 0x6E          DC8 "Input = %c\012"
   \              0x70 0x75    
   \              0x74 0x20    
   \              0x3D 0x20    
   \              0x25 0x63    
   \              0x0A 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LPT_Handler
       8   PIT0_IRQHandler
         8   -> FTM_PWM_Duty
       8   PIT1_IRQHandler
         8   -> FTM_PWM_Duty
       0   PORTA_IRQHandler
       8   PORTB_IRQHandler
         8   -> exti_irq_DIS
         8   -> exti_irq_EN
       0   PORTC_IRQHandler
       8   PORTE_IRQHandler
         8   -> gpio_get
       8   UART0_IRQHandler
         8   -> uart0Printf
         8   -> uartRecvChar
      16   UART3_IRQHandler
        16   -> FTM_PWM_Duty
        16   -> __aeabi_cdcmple
        16   -> __aeabi_cdrcmple
        16   -> __aeabi_dadd
        16   -> __aeabi_ddiv
        16   -> __aeabi_dmul
        16   -> __aeabi_i2d
        16   -> atan
        16   -> uartRecvChar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "Input = %c\n">
       4  ??DataTable0
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
      24  LPT_Handler
       1  LPT_INT_count
     602  PIT0_IRQHandler
     296  PIT1_IRQHandler
       1  PITcounter
     574  PORTA_IRQHandler
     164  PORTB_IRQHandler
      80  PORTC_IRQHandler
     488  PORTE_IRQHandler
      20  UART0_IRQHandler
    4050  UART3_IRQHandler
       4  b_4_xzm
       4  b_60_xzm
       4  h_4_xzm
       4  h_60_xzm
       4  l_4_xzm
       4  l_60_xzm
       4  tmpline

 
     6 bytes in section .bss
    24 bytes in section .data
    12 bytes in section .rodata
 6 538 bytes in section .text
 
 6 538 bytes of CODE  memory
    12 bytes of CONST memory
    30 bytes of DATA  memory

Errors: none
Warnings: 1

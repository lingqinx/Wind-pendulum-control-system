###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      15/Aug/2015  19:53:03 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\global.c                                              #
#    Command line =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\global.c -lCN C:\Users\Administrator\Desktop\MPU60508 #
#                    .12\build\gpio_demo\FLASH\List\ -lB                      #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\List\ -o C:\Users\Administrator\Desktop\MPU6050 #
#                    8.12\build\gpio_demo\FLASH\Obj\ --no_cse --no_unroll     #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\IAR Systems\Embedded     #
#                    Workbench 6.5\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\ -I C:\Users\Administrator\Desktop\MPU60508.12\bui #
#                    ld\gpio_demo\..\..\src\common\ -I                        #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\cpu\ -I C:\Users\Administrator\Desktop\MPU6 #
#                    0508.12\build\gpio_demo\..\..\src\drivers\ -I            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\gpio\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\flash\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\olcd\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\diskio\ -I                          #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\iospi\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\wdog\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\mcg\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\flash\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\uart\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\lptmr\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\LED\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\fun\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\FTM\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\pit\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\DIPswitch\ -I                       #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\steer\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\motor\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\laser\ -I                           #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\i2c\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\ADdevice\ -I                        #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\adc\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\serial_digtal_scope\ -I             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\MMA845x\ -I                         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\exti\ -I                            #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\dma\ -I                             #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\platforms\ -I C:\Users\Administrator\Deskto #
#                    p\MPU60508.12\build\gpio_demo\..\..\src\projects\ -I     #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\projects\gpio_demo\ -I                      #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\MPU6050\ -I                         #
#                    C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\..\..\src\drivers\steer\ -Ol                          #
#    List file    =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\List\global.lst                                 #
#    Object file  =  C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_de #
#                    mo\FLASH\Obj\global.o                                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\MPU60508.12\build\gpio_demo\global.c
      1          /*
      2          ************************************************************************
      3          *                北京邮电大学 K60 学习例程
      4          * 文件名 :[global.c]
      5          * 描  述 ：全局变量
      6          *设计改进：wuwenqi
      7          *  Email ：841369840@qq.com
      8          * 说  明 ：这里定义我们用到的全局变量
      9          ***********************************************************************
     10          */
     11          #include "global.h"
     12          #include "uart.h"
     13          #include "gpio.h"
     14          

   \                                 In section .data, align 1
     15          char xzm = 0x42;
   \                     xzm:
   \   00000000   0x42               DC8 66

   \                                 In section .bss, align 4
     16          char code_xzm[12];
   \                     code_xzm:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
     17          int edge_xzm=0;//标志一个数据包的开始
   \                     edge_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          int w_xzm=0;   //标志角速度包
   \                     w_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          int a_xzm=0;   //标志角度包
   \                     a_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 8
     20          double wx_xzm=0;
   \                     wx_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     21          double wy_xzm=0;
   \                     wy_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     22          double wy_last_xzm=0;
   \                     wy_last_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     23          double wx_last_xzm=0;
   \                     wx_last_xzm:
   \   00000000                      DS8 8
     24          

   \                                 In section .bss, align 8
     25          double wz_xzm=0;
   \                     wz_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     26          double ax_xzm=0;
   \                     ax_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     27          double ay_xzm=0;
   \                     ay_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
     28          double az_xzm=0;
   \                     az_xzm:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     29          int count_xzm=0;
   \                     count_xzm:
   \   00000000                      DS8 4
     30          

   \                                 In section .data, align 4
     31          int distance_xzm=30;//60/50距离
   \                     distance_xzm:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .data, align 4
     32          int angle_xzm=45;//设置角度
   \                     angle_xzm:
   \   00000000   0x0000002D         DC32 45

   \                                 In section .data, align 4
     33          int number_xzm=1;//题号
   \                     number_xzm:
   \   00000000   0x00000001         DC32 1

   \                                 In section .bss, align 4
     34          int cc=0;
   \                     cc:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     35          int ccc=0;
   \                     ccc:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     36          int cccc=0;
   \                     cccc:
   \   00000000                      DS8 4
     37          

   \                                 In section .data, align 4
     38            u32 duty1 = 100;u32 duty2 = 9500;
   \                     duty1:
   \   00000000   0x00000064         DC32 100

   \                                 In section .data, align 4
   \                     duty2:
   \   00000000   0x0000251C         DC32 9500

   \                                 In section .data, align 4
     39            u32 duty3 = 100;u32 duty4 = 100;
   \                     duty3:
   \   00000000   0x00000064         DC32 100

   \                                 In section .data, align 4
   \                     duty4:
   \   00000000   0x00000064         DC32 100
     40            

   \                                 In section .bss, align 4
     41          int is_over_1_xzm=0;
   \                     is_over_1_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     42          int is_over_2_xzm=0;
   \                     is_over_2_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     43          int is_over_3_xzm=0;
   \                     is_over_3_xzm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     44          int is_over_4_xzm=0;
   \                     is_over_4_xzm:
   \   00000000                      DS8 4
     45            
     46            
     47            
     48          

   \                                 In section .bss, align 1
     49          u8 show_parameter_flag = 0;
   \                     show_parameter_flag:
   \   00000000                      DS8 1
     50          
     51          //int  COLUMN=100;//     160
     52          
     53          
     54          
     55          //图像采集部分

   \                                 In section .bss, align 4
     56          u8 Pic_Buffer[ROW][COLUMN] = {0};        //采集图像原始数据
   \                     Pic_Buffer:
   \   00000000                      DS8 13800

   \                                 In section .bss, align 1
     57          u8 show_photo_flagg = 0;
   \                     show_photo_flagg:
   \   00000000                      DS8 1
     58          

   \                                 In section .bss, align 4
     59          byte Pic_Erosion[ROW][COLUMN]={0}; 
   \                     Pic_Erosion:
   \   00000000                      DS8 13800

   \                                 In section .bss, align 1
     60          u8 photo_complete_flag = 0;   //图像采集完成标志
   \                     photo_complete_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     61          u8 show_photo_data_flag =0;   //显示图片原始数据标识
   \                     show_photo_data_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     62          u8 show_photo_flag = 0;       //显示连续图片标识
   \                     show_photo_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     63          int right[ROW]={0},left[ROW]={0},left_flag[ROW]={0},right_flag[ROW]={0},mid_flag[ROW]={0},mid[ROW]={0},flag[ROW]={0};
   \                     right:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     left:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     left_flag:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     right_flag:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     mid_flag:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     mid:
   \   00000000                      DS8 480

   \                                 In section .bss, align 4
   \                     flag:
   \   00000000                      DS8 480

   \                                 In section .data, align 4
     64          int mid_last=50;
   \                     mid_last:
   \   00000000   0x00000032         DC32 50

   \                                 In section .bss, align 1
     65          u8 tmprow = 0;
   \                     tmprow:
   \   00000000                      DS8 1
     66          

   \                                 In section .data, align 1
     67          u8 yuzhi=115;
   \                     yuzhi:
   \   00000000   0x73               DC8 115

   \                                 In section .data, align 1
     68          u8 roberts_th=30;
   \                     roberts_th:
   \   00000000   0x1E               DC8 30

   \                                 In section .data, align 4
     69          s32 speed_duty=4500;
   \                     speed_duty:
   \   00000000   0x00001194         DC32 4500

   \                                 In section .bss, align 1
     70          u8 useless=0;
   \                     useless:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     71          int ruihua_yuzhi=8000;
   \                     ruihua_yuzhi:
   \   00000000   0x00001F40         DC32 8000
     72          

   \                                 In section .bss, align 4
     73          int all_line=0,left_line_only=0,right_line_only=0;//no_line=0
   \                     all_line:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     left_line_only:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     right_line_only:
   \   00000000                      DS8 4
     74          
     75          //图像处理部分
     76          

   \                                 In section .data, align 1
     77          u8 time=27;
   \                     time:
   \   00000000   0x1B               DC8 27

   \                                 In section .bss, align 1
     78          u8 time_flag=0; 
   \                     time_flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
     79          int center_cankao=62;
   \                     center_cankao:
   \   00000000   0x0000003E         DC32 62

   \                                 In section .bss, align 1
     80          u8 stop_flag=0;
   \                     stop_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     81          int danxian_flag=0;
   \                     danxian_flag:
   \   00000000                      DS8 4
     82          
     83          //临时测试
     84          

   \                                 In section .data, align 1
     85          u8 PID_flag=1;
   \                     PID_flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
     86          u8 steer_choice=0;
   \                     steer_choice:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     87          int Sigma = 0;
   \                     Sigma:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     88          u8 count=0;
   \                     count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     89          u8 beep_flag=0;
   \                     beep_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     90          u8 no_line=0;
   \                     no_line:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
     91          u8 yichang_flag=0;
   \                     yichang_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
     92          int speed_L[1000]={0};
   \                     speed_L:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
     93          int speed_R[1000]={0};
   \                     speed_R:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
     94          float steer_luo[1000]={0};
   \                     steer_luo:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
     95          int steer_duty_ceshi[100]={0};
   \                     steer_duty_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
     96          int beep_ceshi[100]={0};
   \                     beep_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
     97          int useless_ceshi[100]={0};
   \                     useless_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
     98          int all_line_ceshi[100]={0};
   \                     all_line_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
     99          int left_line_only_ceshi[100]={0};
   \                     left_line_only_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
    100          int right_line_only_ceshi[100]={0};
   \                     right_line_only_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 4
    101          int steer_pre_error_ceshi[100]={0};
   \                     steer_pre_error_ceshi:
   \   00000000                      DS8 400

   \                                 In section .bss, align 1
    102          u8 juesai=0;
   \                     juesai:
   \   00000000                      DS8 1
    103          
    104          
    105          //舵机控制参数

   \                                 In section .data, align 1
    106          u8 line_first=70;
   \                     line_first:
   \   00000000   0x46               DC8 70

   \                                 In section .data, align 1
    107          u8 line_second=74;
   \                     line_second:
   \   00000000   0x4A               DC8 74
    108          

   \                                 In section .data, align 1
    109          u8 line_third=70;
   \                     line_third:
   \   00000000   0x46               DC8 70

   \                                 In section .data, align 1
    110          u8 quanzhi_1=8;
   \                     quanzhi_1:
   \   00000000   0x08               DC8 8

   \                                 In section .data, align 1
    111          u8 quanzhi_2=2;
   \                     quanzhi_2:
   \   00000000   0x02               DC8 2

   \                                 In section .data, align 1
    112          u8 line_fourth=70;
   \                     line_fourth:
   \   00000000   0x46               DC8 70

   \                                 In section .data, align 4
    113          int steer_dp=48;
   \                     steer_dp:
   \   00000000   0x00000030         DC32 48

   \                                 In section .data, align 4
    114          int steer_dd=58;
   \                     steer_dd:
   \   00000000   0x0000003A         DC32 58

   \                                 In section .data, align 4
    115          float steer_dl=3.1;
   \                     steer_dl:
   \   00000000   0x40466666         DC32 40466666H

   \                                 In section .data, align 4
    116          int k_1=5;
   \                     k_1:
   \   00000000   0x00000005         DC32 5

   \                                 In section .data, align 4
    117          int k_2=10;
   \                     k_2:
   \   00000000   0x0000000A         DC32 10

   \                                 In section .bss, align 4
    118          int k_3=0;
   \                     k_3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    119          int k_4=0;
   \                     k_4:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    120          float k_useless=0;
   \                     k_useless:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    121          float k_pinjun=1.0;
   \                     k_pinjun:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 1
    122          u8 km=5;
   \                     km:
   \   00000000   0x05               DC8 5

   \                                 In section .data, align 1
    123          u8 kn=3;
   \                     kn:
   \   00000000   0x03               DC8 3

   \                                 In section .bss, align 4
    124          float steer_last_error=0;
   \                     steer_last_error:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    125          float steer_pre_error=0;
   \                     steer_pre_error:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
    126          u8 center=65; 
   \                     center:
   \   00000000   0x41               DC8 65

   \                                 In section .bss, align 4
    127          float  steer_duty=0;
   \                     steer_duty:
   \   00000000                      DS8 4
    128          

   \                                 In section .bss, align 1
    129          u8 jiduandiuxian_flag=0;
   \                     jiduandiuxian_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    130          u8 imq_wuxiao_flag=0;
   \                     imq_wuxiao_flag:
   \   00000000                      DS8 1
    131          

   \                                 In section .data, align 4
    132          float erci_kp=0.0019;
   \                     erci_kp:
   \   00000000   0x3AF9096C         DC32 3AF9096CH

   \                                 In section .data, align 4
    133          float erci_kp_changshu=3.8;
   \                     erci_kp_changshu:
   \   00000000   0x40733333         DC32 40733333H
    134          
    135          
    136          //速度控制参数

   \                                 In section .data, align 4
    137          float angle_p=0.004;
   \                     angle_p:
   \   00000000   0x3B83126F         DC32 3B83126FH

   \                                 In section .data, align 4
    138          float speed_kp=100;
   \                     speed_kp:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .data, align 4
    139          float speed_ki=5;
   \                     speed_ki:
   \   00000000   0x40A00000         DC32 40A00000H

   \                                 In section .data, align 4
    140          float speed_kd=10;
   \                     speed_kd:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
    141          int wanted_speed_L=220,wanted_speed_R=220;
   \                     wanted_speed_L:
   \   00000000   0x000000DC         DC32 220

   \                                 In section .data, align 4
   \                     wanted_speed_R:
   \   00000000   0x000000DC         DC32 220

   \                                 In section .data, align 4
    142          int wanted_speed=220;
   \                     wanted_speed:
   \   00000000   0x000000DC         DC32 220

   \                                 In section .bss, align 4
    143          int true_speed_L=0,true_speed_R=0,true_speed=0;
   \                     true_speed_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     true_speed_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     true_speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    144          int ek_1_L=0,ek_1_R=0;
   \                     ek_1_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ek_1_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    145          int ek_2_L=0,ek_2_R=0;
   \                     ek_2_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ek_2_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    146          int speed_pwm_L=0;
   \                     speed_pwm_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    147          int speed_pwm_R=0;
   \                     speed_pwm_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    148          int speed_L_min=180;
   \                     speed_L_min:
   \   00000000   0x000000B4         DC32 180

   \                                 In section .data, align 4
    149          int speed_R_min=160;
   \                     speed_R_min:
   \   00000000   0x000000A0         DC32 160

   \                                 In section .data, align 4
    150          int dev=140;
   \                     dev:
   \   00000000   0x0000008C         DC32 140

   \                                 In section .bss, align 4
    151          int chasubi=0;
   \                     chasubi:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    152          float k_chashu=0.267;
   \                     k_chashu:
   \   00000000   0x3E88B439         DC32 3E88B439H

   \                                 In section .data, align 4
    153          float k_chashu_speed=0.35;
   \                     k_chashu_speed:
   \   00000000   0x3EB33333         DC32 3EB33333H

   \                                 In section .data, align 4
    154          float mortal_out=1.00;
   \                     mortal_out:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
    155          float mortal_in=1.00;
   \                     mortal_in:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
    156          int whole_speed=0;
   \                     whole_speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    157          int whole_speed_ek=0;  
   \                     whole_speed_ek:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    158          int whole_speed_ek1=0;
   \                     whole_speed_ek1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    159          int whole_speed_ek2=0;
   \                     whole_speed_ek2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    160          int whole_speed_pwm=0;
   \                     whole_speed_pwm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    161          int true_speed_dev=0;
   \                     true_speed_dev:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    162          int speed_dev_ek=0;
   \                     speed_dev_ek:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    163          int speed_dev_ek1=0;
   \                     speed_dev_ek1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    164          int speed_dev_ek2=0;
   \                     speed_dev_ek2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    165          int speed_pwm_L_end=0;
   \                     speed_pwm_L_end:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    166          int speed_pwm_R_end=0;
   \                     speed_pwm_R_end:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    167          int speed_dev_pwm=0;
   \                     speed_dev_pwm:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    168          float speed_kp1=80;
   \                     speed_kp1:
   \   00000000   0x42A00000         DC32 42A00000H

   \                                 In section .data, align 4
    169          float speed_ki1=10;
   \                     speed_ki1:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
    170          float speed_kd1=45;
   \                     speed_kd1:
   \   00000000   0x42340000         DC32 42340000H

   \                                 In section .data, align 4
    171          float speed_kp2=100;
   \                     speed_kp2:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .data, align 4
    172          float speed_ki2=5;
   \                     speed_ki2:
   \   00000000   0x40A00000         DC32 40A00000H

   \                                 In section .data, align 4
    173          float speed_kd2=10;
   \                     speed_kd2:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .bss, align 4
    174          int steer_pre=0;
   \                     steer_pre:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    175          int steer_last=0;
   \                     steer_last:
   \   00000000                      DS8 4
    176          

   \                                 In section .bss, align 4
    177          int ab=0;
   \                     ab:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    178          int portion=50; 
   \                     portion:
   \   00000000   0x00000032         DC32 50
    179          

   \                                 In section .data, align 4
    180          float k_speed_control=0.065;
   \                     k_speed_control:
   \   00000000   0x3D851EB8         DC32 3D851EB8H
    181          //float k_speed_control=0;
    182          

   \                                 In section .data, align 4
    183          int zhidao_speed=500;
   \                     zhidao_speed:
   \   00000000   0x000001F4         DC32 500
    184          

   \                                 In section .bss, align 4
    185          int show_data_flag = 0;
   \                     show_data_flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    186          int shuzu[1000]={0};
   \                     shuzu:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
    187          int shuzuL[1000]={0};
   \                     shuzuL:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
    188          int shuzuR[1000]={0};
   \                     shuzuR:
   \   00000000                      DS8 4000

   \                                 In section .bss, align 4
    189          int shuzuz[1000]={0};
   \                     shuzuz:
   \   00000000                      DS8 4000
    190          

   \                                 In section .bss, align 1
    191          u8 podao_moshi_flag=0;
   \                     podao_moshi_flag:
   \   00000000                      DS8 1
    192          //液晶键盘
    193          

   \                                 In section .bss, align 1
    194          u8 key_flag=0;
   \                     key_flag:
   \   00000000                      DS8 1
    195          //kongzhi

   \                                 In section .data, align 4
    196          float k_integral=1;
   \                     k_integral:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
    197          float k_integral_L=1;
   \                     k_integral_L:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
    198          float k_integral_R=1;
   \                     k_integral_R:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
    199          int integral_a=30;
   \                     integral_a:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .data, align 4
    200          float  integral_b=0.60;
   \                     integral_b:
   \   00000000   0x3F19999A         DC32 3F19999AH

   \                                 In section .data, align 4
    201          int carry=-1;
   \                     carry:
   \   00000000   0xFFFFFFFF         DC32 -1

   \                                 In section .bss, align 4
    202          int vector_dev[106]={0};
   \                     vector_dev:
   \   00000000                      DS8 424

   \                                 In section .bss, align 4
    203          int deviation=0;
   \                     deviation:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    204          int speed_pwm=0;
   \                     speed_pwm:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
    205          u8 danxian_xuanxian_moshi_flag=0;
   \                     danxian_xuanxian_moshi_flag:
   \   00000000                      DS8 1

   \                                 In section .data, align 4
    206          int speed_bong=30;
   \                     speed_bong:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .data, align 4
    207          int bili=30;
   \                     bili:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .bss, align 4
    208          int ek_L=0;
   \                     ek_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    209          int ek_R=0;
   \                     ek_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    210          int steer_p=88;
   \                     steer_p:
   \   00000000   0x00000058         DC32 88

   \                                 In section .data, align 4
    211          int sep=88;
   \                     sep:
   \   00000000   0x00000058         DC32 88

   \                                 In section .data, align 4
    212          int b1=30;
   \                     b1:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .data, align 4
    213          float a1=20;
   \                     a1:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .data, align 4
    214          int speed_max=300;
   \                     speed_max:
   \   00000000   0x0000012C         DC32 300

   \                                 In section .data, align 4
    215          int speed_min=210;
   \                     speed_min:
   \   00000000   0x000000D2         DC32 210

   \                                 In section .data, align 4
    216          float change_speed=8.0;
   \                     change_speed:
   \   00000000   0x41000000         DC32 41000000H

   \                                 In section .data, align 4
    217          float change_speed_error=8.0;
   \                     change_speed_error:
   \   00000000   0x41000000         DC32 41000000H

   \                                 In section .data, align 4
    218          int portion_error=30;
   \                     portion_error:
   \   00000000   0x0000001E         DC32 30

   \                                 In section .bss, align 1
    219          u8 speed_count=0;
   \                     speed_count:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    220          int useless_last=0;
   \                     useless_last:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    221          float useless_p=38;
   \                     useless_p:
   \   00000000   0x42180000         DC32 42180000H

   \                                 In section .data, align 4
    222          float useless_d=30;
   \                     useless_d:
   \   00000000   0x41F00000         DC32 41F00000H
    223          
    224          /****************灯塔***************/
    225          
    226          
    227          

   \                                 In section .bss, align 1
    228          u8 dengta_count=0;
   \                     dengta_count:
   \   00000000                      DS8 1

   \                                 In section .data, align 1
    229          u8 dengta_begin_flag=1;
   \                     dengta_begin_flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
    230          u8 dengta_stop_flag=0;
   \                     dengta_stop_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
    231          u8 dengta_flag=0;
   \                     dengta_flag:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    232          int dengta_stop_count=0;
   \                     dengta_stop_count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    233          int dengta_stop_distance=600;
   \                     dengta_stop_distance:
   \   00000000   0x00000258         DC32 600

   \                                 In section .data, align 4
    234          int podao_moshi_distance=11000;
   \                     podao_moshi_distance:
   \   00000000   0x00002AF8         DC32 11000

   \                                 In section .bss, align 4
    235          int podao_distance_count=0;
   \                     podao_distance_count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    236          int pk=0;
   \                     pk:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    237          int dengta_begin_time=18;
   \                     dengta_begin_time:
   \   00000000   0x00000012         DC32 18
    238          
    239          
    240          

   \                                 In section .text, align 2, keep-with-next
    241          void LED_INIT_xzm(void)  // 8 个 PORTC 管脚初始化
    242          {
   \                     LED_INIT_xzm: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    243              gpio_init(PORTC,15,GPO,HIGH); //g
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210F             MOVS     R1,#+15
   \   00000008   0x2002             MOVS     R0,#+2
   \   0000000A   0x.... 0x....      BL       gpio_init
    244              gpio_init(PORTC,14,GPO,HIGH); //f
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x210E             MOVS     R1,#+14
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       gpio_init
    245              gpio_init(PORTC,13,GPO,HIGH); //a
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x210D             MOVS     R1,#+13
   \   00000020   0x2002             MOVS     R0,#+2
   \   00000022   0x.... 0x....      BL       gpio_init
    246              gpio_init(PORTC,12,GPO,HIGH); //b
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x210C             MOVS     R1,#+12
   \   0000002C   0x2002             MOVS     R0,#+2
   \   0000002E   0x.... 0x....      BL       gpio_init
    247              gpio_init(PORTC,11,GPO,HIGH); //dp
   \   00000032   0x2301             MOVS     R3,#+1
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x210B             MOVS     R1,#+11
   \   00000038   0x2002             MOVS     R0,#+2
   \   0000003A   0x.... 0x....      BL       gpio_init
    248              gpio_init(PORTC,10,GPO,HIGH); //c
   \   0000003E   0x2301             MOVS     R3,#+1
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x210A             MOVS     R1,#+10
   \   00000044   0x2002             MOVS     R0,#+2
   \   00000046   0x.... 0x....      BL       gpio_init
    249              gpio_init(PORTC, 9,GPO,HIGH); //d
   \   0000004A   0x2301             MOVS     R3,#+1
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0x2109             MOVS     R1,#+9
   \   00000050   0x2002             MOVS     R0,#+2
   \   00000052   0x.... 0x....      BL       gpio_init
    250              gpio_init(PORTC, 8,GPO,HIGH); //e
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0x2108             MOVS     R1,#+8
   \   0000005C   0x2002             MOVS     R0,#+2
   \   0000005E   0x.... 0x....      BL       gpio_init
    251          }
   \   00000062   0xBD01             POP      {R0,PC}          ;; return
    252          

   \                                 In section .text, align 2, keep-with-next
    253          void xianshi(int n)    //根据对应的输入数字 n（0~9），数码管进行相应的显示
    254          {    
   \                     xianshi: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    255            switch(n)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD015             BEQ.N    ??xianshi_0
   \   00000006   0x2802             CMP      R0,#+2
   \   00000008   0xD065             BEQ.N    ??xianshi_1
   \   0000000A   0xD33B             BCC.N    ??xianshi_2
   \   0000000C   0x2804             CMP      R0,#+4
   \   0000000E   0xF000 0x80B4      BEQ.W    ??xianshi_3
   \   00000012   0xF0C0 0x8089      BCC.W    ??xianshi_4
   \   00000016   0x2806             CMP      R0,#+6
   \   00000018   0xF000 0x8101      BEQ.W    ??xianshi_5
   \   0000001C   0xF0C0 0x80D6      BCC.W    ??xianshi_6
   \   00000020   0x2808             CMP      R0,#+8
   \   00000022   0xF000 0x814E      BEQ.W    ??xianshi_7
   \   00000026   0xF0C0 0x8123      BCC.W    ??xianshi_8
   \   0000002A   0x2809             CMP      R0,#+9
   \   0000002C   0xF000 0x8172      BEQ.W    ??xianshi_9
   \   00000030   0xE199             B.N      ??xianshi_10
    256            {
    257            case 0:
    258              gpio_set(PORTC,15,HIGH);//g
   \                     ??xianshi_0: (+1)
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x210F             MOVS     R1,#+15
   \   00000036   0x2002             MOVS     R0,#+2
   \   00000038   0x.... 0x....      BL       gpio_set
    259              gpio_set(PORTC,14,LOW);//f
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x210E             MOVS     R1,#+14
   \   00000040   0x2002             MOVS     R0,#+2
   \   00000042   0x.... 0x....      BL       gpio_set
    260              gpio_set(PORTC,13,LOW);//a
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x210D             MOVS     R1,#+13
   \   0000004A   0x2002             MOVS     R0,#+2
   \   0000004C   0x.... 0x....      BL       gpio_set
    261              gpio_set(PORTC,12,LOW);//b
   \   00000050   0x2200             MOVS     R2,#+0
   \   00000052   0x210C             MOVS     R1,#+12
   \   00000054   0x2002             MOVS     R0,#+2
   \   00000056   0x.... 0x....      BL       gpio_set
    262              gpio_set(PORTC,11,LOW);//dp
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x210B             MOVS     R1,#+11
   \   0000005E   0x2002             MOVS     R0,#+2
   \   00000060   0x.... 0x....      BL       gpio_set
    263              gpio_set(PORTC,10,LOW);//c
   \   00000064   0x2200             MOVS     R2,#+0
   \   00000066   0x210A             MOVS     R1,#+10
   \   00000068   0x2002             MOVS     R0,#+2
   \   0000006A   0x.... 0x....      BL       gpio_set
    264              gpio_set(PORTC, 9,LOW);//d
   \   0000006E   0x2200             MOVS     R2,#+0
   \   00000070   0x2109             MOVS     R1,#+9
   \   00000072   0x2002             MOVS     R0,#+2
   \   00000074   0x.... 0x....      BL       gpio_set
    265              gpio_set(PORTC, 8,LOW);//e
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x2108             MOVS     R1,#+8
   \   0000007C   0x2002             MOVS     R0,#+2
   \   0000007E   0x.... 0x....      BL       gpio_set
    266              break;
   \   00000082   0xE198             B.N      ??xianshi_11
    267            case 1:
    268              gpio_set(PORTC,15,HIGH);//g
   \                     ??xianshi_2: (+1)
   \   00000084   0x2201             MOVS     R2,#+1
   \   00000086   0x210F             MOVS     R1,#+15
   \   00000088   0x2002             MOVS     R0,#+2
   \   0000008A   0x.... 0x....      BL       gpio_set
    269              gpio_set(PORTC,14,HIGH);//f
   \   0000008E   0x2201             MOVS     R2,#+1
   \   00000090   0x210E             MOVS     R1,#+14
   \   00000092   0x2002             MOVS     R0,#+2
   \   00000094   0x.... 0x....      BL       gpio_set
    270              gpio_set(PORTC,13,HIGH);//a
   \   00000098   0x2201             MOVS     R2,#+1
   \   0000009A   0x210D             MOVS     R1,#+13
   \   0000009C   0x2002             MOVS     R0,#+2
   \   0000009E   0x.... 0x....      BL       gpio_set
    271              gpio_set(PORTC,12,LOW);//b
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x210C             MOVS     R1,#+12
   \   000000A6   0x2002             MOVS     R0,#+2
   \   000000A8   0x.... 0x....      BL       gpio_set
    272              gpio_set(PORTC,11,LOW);//dp
   \   000000AC   0x2200             MOVS     R2,#+0
   \   000000AE   0x210B             MOVS     R1,#+11
   \   000000B0   0x2002             MOVS     R0,#+2
   \   000000B2   0x.... 0x....      BL       gpio_set
    273              gpio_set(PORTC,10,LOW);//c
   \   000000B6   0x2200             MOVS     R2,#+0
   \   000000B8   0x210A             MOVS     R1,#+10
   \   000000BA   0x2002             MOVS     R0,#+2
   \   000000BC   0x.... 0x....      BL       gpio_set
    274              gpio_set(PORTC, 9,HIGH);//d
   \   000000C0   0x2201             MOVS     R2,#+1
   \   000000C2   0x2109             MOVS     R1,#+9
   \   000000C4   0x2002             MOVS     R0,#+2
   \   000000C6   0x.... 0x....      BL       gpio_set
    275              gpio_set(PORTC, 8,HIGH);//e
   \   000000CA   0x2201             MOVS     R2,#+1
   \   000000CC   0x2108             MOVS     R1,#+8
   \   000000CE   0x2002             MOVS     R0,#+2
   \   000000D0   0x.... 0x....      BL       gpio_set
    276              break;
   \   000000D4   0xE16F             B.N      ??xianshi_11
    277            case 2:
    278              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_1: (+1)
   \   000000D6   0x2200             MOVS     R2,#+0
   \   000000D8   0x210F             MOVS     R1,#+15
   \   000000DA   0x2002             MOVS     R0,#+2
   \   000000DC   0x.... 0x....      BL       gpio_set
    279              gpio_set(PORTC,14,HIGH);//f
   \   000000E0   0x2201             MOVS     R2,#+1
   \   000000E2   0x210E             MOVS     R1,#+14
   \   000000E4   0x2002             MOVS     R0,#+2
   \   000000E6   0x.... 0x....      BL       gpio_set
    280              gpio_set(PORTC,13,LOW);//a
   \   000000EA   0x2200             MOVS     R2,#+0
   \   000000EC   0x210D             MOVS     R1,#+13
   \   000000EE   0x2002             MOVS     R0,#+2
   \   000000F0   0x.... 0x....      BL       gpio_set
    281              gpio_set(PORTC,12,LOW);//b
   \   000000F4   0x2200             MOVS     R2,#+0
   \   000000F6   0x210C             MOVS     R1,#+12
   \   000000F8   0x2002             MOVS     R0,#+2
   \   000000FA   0x.... 0x....      BL       gpio_set
    282              gpio_set(PORTC,11,LOW);//dp
   \   000000FE   0x2200             MOVS     R2,#+0
   \   00000100   0x210B             MOVS     R1,#+11
   \   00000102   0x2002             MOVS     R0,#+2
   \   00000104   0x.... 0x....      BL       gpio_set
    283              gpio_set(PORTC,10,HIGH);//c
   \   00000108   0x2201             MOVS     R2,#+1
   \   0000010A   0x210A             MOVS     R1,#+10
   \   0000010C   0x2002             MOVS     R0,#+2
   \   0000010E   0x.... 0x....      BL       gpio_set
    284              gpio_set(PORTC, 9,LOW);//d
   \   00000112   0x2200             MOVS     R2,#+0
   \   00000114   0x2109             MOVS     R1,#+9
   \   00000116   0x2002             MOVS     R0,#+2
   \   00000118   0x.... 0x....      BL       gpio_set
    285              gpio_set(PORTC, 8,LOW);//e
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x2108             MOVS     R1,#+8
   \   00000120   0x2002             MOVS     R0,#+2
   \   00000122   0x.... 0x....      BL       gpio_set
    286              break;
   \   00000126   0xE146             B.N      ??xianshi_11
    287            case 3:
    288              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_4: (+1)
   \   00000128   0x2200             MOVS     R2,#+0
   \   0000012A   0x210F             MOVS     R1,#+15
   \   0000012C   0x2002             MOVS     R0,#+2
   \   0000012E   0x.... 0x....      BL       gpio_set
    289              gpio_set(PORTC,14,HIGH);//f
   \   00000132   0x2201             MOVS     R2,#+1
   \   00000134   0x210E             MOVS     R1,#+14
   \   00000136   0x2002             MOVS     R0,#+2
   \   00000138   0x.... 0x....      BL       gpio_set
    290              gpio_set(PORTC,13,LOW);//a
   \   0000013C   0x2200             MOVS     R2,#+0
   \   0000013E   0x210D             MOVS     R1,#+13
   \   00000140   0x2002             MOVS     R0,#+2
   \   00000142   0x.... 0x....      BL       gpio_set
    291              gpio_set(PORTC,12,LOW);//b
   \   00000146   0x2200             MOVS     R2,#+0
   \   00000148   0x210C             MOVS     R1,#+12
   \   0000014A   0x2002             MOVS     R0,#+2
   \   0000014C   0x.... 0x....      BL       gpio_set
    292              gpio_set(PORTC,11,LOW);//dp
   \   00000150   0x2200             MOVS     R2,#+0
   \   00000152   0x210B             MOVS     R1,#+11
   \   00000154   0x2002             MOVS     R0,#+2
   \   00000156   0x.... 0x....      BL       gpio_set
    293              gpio_set(PORTC,10,LOW);//c
   \   0000015A   0x2200             MOVS     R2,#+0
   \   0000015C   0x210A             MOVS     R1,#+10
   \   0000015E   0x2002             MOVS     R0,#+2
   \   00000160   0x.... 0x....      BL       gpio_set
    294              gpio_set(PORTC, 9,LOW);//d
   \   00000164   0x2200             MOVS     R2,#+0
   \   00000166   0x2109             MOVS     R1,#+9
   \   00000168   0x2002             MOVS     R0,#+2
   \   0000016A   0x.... 0x....      BL       gpio_set
    295              gpio_set(PORTC, 8,HIGH);//e
   \   0000016E   0x2201             MOVS     R2,#+1
   \   00000170   0x2108             MOVS     R1,#+8
   \   00000172   0x2002             MOVS     R0,#+2
   \   00000174   0x.... 0x....      BL       gpio_set
    296              break;
   \   00000178   0xE11D             B.N      ??xianshi_11
    297            case 4:
    298              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_3: (+1)
   \   0000017A   0x2200             MOVS     R2,#+0
   \   0000017C   0x210F             MOVS     R1,#+15
   \   0000017E   0x2002             MOVS     R0,#+2
   \   00000180   0x.... 0x....      BL       gpio_set
    299              gpio_set(PORTC,14,LOW);//f
   \   00000184   0x2200             MOVS     R2,#+0
   \   00000186   0x210E             MOVS     R1,#+14
   \   00000188   0x2002             MOVS     R0,#+2
   \   0000018A   0x.... 0x....      BL       gpio_set
    300              gpio_set(PORTC,13,HIGH);//a
   \   0000018E   0x2201             MOVS     R2,#+1
   \   00000190   0x210D             MOVS     R1,#+13
   \   00000192   0x2002             MOVS     R0,#+2
   \   00000194   0x.... 0x....      BL       gpio_set
    301              gpio_set(PORTC,12,LOW);//b
   \   00000198   0x2200             MOVS     R2,#+0
   \   0000019A   0x210C             MOVS     R1,#+12
   \   0000019C   0x2002             MOVS     R0,#+2
   \   0000019E   0x.... 0x....      BL       gpio_set
    302              gpio_set(PORTC,11,LOW);//dp
   \   000001A2   0x2200             MOVS     R2,#+0
   \   000001A4   0x210B             MOVS     R1,#+11
   \   000001A6   0x2002             MOVS     R0,#+2
   \   000001A8   0x.... 0x....      BL       gpio_set
    303              gpio_set(PORTC,10,LOW);//c
   \   000001AC   0x2200             MOVS     R2,#+0
   \   000001AE   0x210A             MOVS     R1,#+10
   \   000001B0   0x2002             MOVS     R0,#+2
   \   000001B2   0x.... 0x....      BL       gpio_set
    304              gpio_set(PORTC, 9,HIGH);//d
   \   000001B6   0x2201             MOVS     R2,#+1
   \   000001B8   0x2109             MOVS     R1,#+9
   \   000001BA   0x2002             MOVS     R0,#+2
   \   000001BC   0x.... 0x....      BL       gpio_set
    305              gpio_set(PORTC, 8,HIGH);//e
   \   000001C0   0x2201             MOVS     R2,#+1
   \   000001C2   0x2108             MOVS     R1,#+8
   \   000001C4   0x2002             MOVS     R0,#+2
   \   000001C6   0x.... 0x....      BL       gpio_set
    306              break;
   \   000001CA   0xE0F4             B.N      ??xianshi_11
    307            case 5:
    308              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_6: (+1)
   \   000001CC   0x2200             MOVS     R2,#+0
   \   000001CE   0x210F             MOVS     R1,#+15
   \   000001D0   0x2002             MOVS     R0,#+2
   \   000001D2   0x.... 0x....      BL       gpio_set
    309              gpio_set(PORTC,14,LOW);//f
   \   000001D6   0x2200             MOVS     R2,#+0
   \   000001D8   0x210E             MOVS     R1,#+14
   \   000001DA   0x2002             MOVS     R0,#+2
   \   000001DC   0x.... 0x....      BL       gpio_set
    310              gpio_set(PORTC,13,LOW);//a
   \   000001E0   0x2200             MOVS     R2,#+0
   \   000001E2   0x210D             MOVS     R1,#+13
   \   000001E4   0x2002             MOVS     R0,#+2
   \   000001E6   0x.... 0x....      BL       gpio_set
    311              gpio_set(PORTC,12,HIGH);//b
   \   000001EA   0x2201             MOVS     R2,#+1
   \   000001EC   0x210C             MOVS     R1,#+12
   \   000001EE   0x2002             MOVS     R0,#+2
   \   000001F0   0x.... 0x....      BL       gpio_set
    312              gpio_set(PORTC,11,LOW);//dp
   \   000001F4   0x2200             MOVS     R2,#+0
   \   000001F6   0x210B             MOVS     R1,#+11
   \   000001F8   0x2002             MOVS     R0,#+2
   \   000001FA   0x.... 0x....      BL       gpio_set
    313              gpio_set(PORTC,10,LOW);//c
   \   000001FE   0x2200             MOVS     R2,#+0
   \   00000200   0x210A             MOVS     R1,#+10
   \   00000202   0x2002             MOVS     R0,#+2
   \   00000204   0x.... 0x....      BL       gpio_set
    314              gpio_set(PORTC, 9,LOW);//d
   \   00000208   0x2200             MOVS     R2,#+0
   \   0000020A   0x2109             MOVS     R1,#+9
   \   0000020C   0x2002             MOVS     R0,#+2
   \   0000020E   0x.... 0x....      BL       gpio_set
    315              gpio_set(PORTC, 8,HIGH);//e
   \   00000212   0x2201             MOVS     R2,#+1
   \   00000214   0x2108             MOVS     R1,#+8
   \   00000216   0x2002             MOVS     R0,#+2
   \   00000218   0x.... 0x....      BL       gpio_set
    316              break;
   \   0000021C   0xE0CB             B.N      ??xianshi_11
    317            case 6:
    318              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_5: (+1)
   \   0000021E   0x2200             MOVS     R2,#+0
   \   00000220   0x210F             MOVS     R1,#+15
   \   00000222   0x2002             MOVS     R0,#+2
   \   00000224   0x.... 0x....      BL       gpio_set
    319              gpio_set(PORTC,14,LOW);//f
   \   00000228   0x2200             MOVS     R2,#+0
   \   0000022A   0x210E             MOVS     R1,#+14
   \   0000022C   0x2002             MOVS     R0,#+2
   \   0000022E   0x.... 0x....      BL       gpio_set
    320              gpio_set(PORTC,13,LOW);//a
   \   00000232   0x2200             MOVS     R2,#+0
   \   00000234   0x210D             MOVS     R1,#+13
   \   00000236   0x2002             MOVS     R0,#+2
   \   00000238   0x.... 0x....      BL       gpio_set
    321              gpio_set(PORTC,12,HIGH);//b
   \   0000023C   0x2201             MOVS     R2,#+1
   \   0000023E   0x210C             MOVS     R1,#+12
   \   00000240   0x2002             MOVS     R0,#+2
   \   00000242   0x.... 0x....      BL       gpio_set
    322              gpio_set(PORTC,11,LOW);//dp
   \   00000246   0x2200             MOVS     R2,#+0
   \   00000248   0x210B             MOVS     R1,#+11
   \   0000024A   0x2002             MOVS     R0,#+2
   \   0000024C   0x.... 0x....      BL       gpio_set
    323              gpio_set(PORTC,10,LOW);//c
   \   00000250   0x2200             MOVS     R2,#+0
   \   00000252   0x210A             MOVS     R1,#+10
   \   00000254   0x2002             MOVS     R0,#+2
   \   00000256   0x.... 0x....      BL       gpio_set
    324              gpio_set(PORTC, 9,LOW);//d
   \   0000025A   0x2200             MOVS     R2,#+0
   \   0000025C   0x2109             MOVS     R1,#+9
   \   0000025E   0x2002             MOVS     R0,#+2
   \   00000260   0x.... 0x....      BL       gpio_set
    325              gpio_set(PORTC, 8,LOW);//e
   \   00000264   0x2200             MOVS     R2,#+0
   \   00000266   0x2108             MOVS     R1,#+8
   \   00000268   0x2002             MOVS     R0,#+2
   \   0000026A   0x.... 0x....      BL       gpio_set
    326              break;
   \   0000026E   0xE0A2             B.N      ??xianshi_11
    327            case 7:
    328              gpio_set(PORTC,15,HIGH);//g
   \                     ??xianshi_8: (+1)
   \   00000270   0x2201             MOVS     R2,#+1
   \   00000272   0x210F             MOVS     R1,#+15
   \   00000274   0x2002             MOVS     R0,#+2
   \   00000276   0x.... 0x....      BL       gpio_set
    329              gpio_set(PORTC,14,HIGH);//f
   \   0000027A   0x2201             MOVS     R2,#+1
   \   0000027C   0x210E             MOVS     R1,#+14
   \   0000027E   0x2002             MOVS     R0,#+2
   \   00000280   0x.... 0x....      BL       gpio_set
    330              gpio_set(PORTC,13,LOW);//a
   \   00000284   0x2200             MOVS     R2,#+0
   \   00000286   0x210D             MOVS     R1,#+13
   \   00000288   0x2002             MOVS     R0,#+2
   \   0000028A   0x.... 0x....      BL       gpio_set
    331              gpio_set(PORTC,12,LOW);//b
   \   0000028E   0x2200             MOVS     R2,#+0
   \   00000290   0x210C             MOVS     R1,#+12
   \   00000292   0x2002             MOVS     R0,#+2
   \   00000294   0x.... 0x....      BL       gpio_set
    332              gpio_set(PORTC,11,LOW);//dp
   \   00000298   0x2200             MOVS     R2,#+0
   \   0000029A   0x210B             MOVS     R1,#+11
   \   0000029C   0x2002             MOVS     R0,#+2
   \   0000029E   0x.... 0x....      BL       gpio_set
    333              gpio_set(PORTC,10,LOW);//c
   \   000002A2   0x2200             MOVS     R2,#+0
   \   000002A4   0x210A             MOVS     R1,#+10
   \   000002A6   0x2002             MOVS     R0,#+2
   \   000002A8   0x.... 0x....      BL       gpio_set
    334              gpio_set(PORTC, 9,HIGH);//d
   \   000002AC   0x2201             MOVS     R2,#+1
   \   000002AE   0x2109             MOVS     R1,#+9
   \   000002B0   0x2002             MOVS     R0,#+2
   \   000002B2   0x.... 0x....      BL       gpio_set
    335              gpio_set(PORTC, 8,HIGH);//e
   \   000002B6   0x2201             MOVS     R2,#+1
   \   000002B8   0x2108             MOVS     R1,#+8
   \   000002BA   0x2002             MOVS     R0,#+2
   \   000002BC   0x.... 0x....      BL       gpio_set
    336              break;
   \   000002C0   0xE079             B.N      ??xianshi_11
    337            case 8:
    338              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_7: (+1)
   \   000002C2   0x2200             MOVS     R2,#+0
   \   000002C4   0x210F             MOVS     R1,#+15
   \   000002C6   0x2002             MOVS     R0,#+2
   \   000002C8   0x.... 0x....      BL       gpio_set
    339              gpio_set(PORTC,14,LOW);//f
   \   000002CC   0x2200             MOVS     R2,#+0
   \   000002CE   0x210E             MOVS     R1,#+14
   \   000002D0   0x2002             MOVS     R0,#+2
   \   000002D2   0x.... 0x....      BL       gpio_set
    340              gpio_set(PORTC,13,LOW);//a
   \   000002D6   0x2200             MOVS     R2,#+0
   \   000002D8   0x210D             MOVS     R1,#+13
   \   000002DA   0x2002             MOVS     R0,#+2
   \   000002DC   0x.... 0x....      BL       gpio_set
    341              gpio_set(PORTC,12,LOW);//b
   \   000002E0   0x2200             MOVS     R2,#+0
   \   000002E2   0x210C             MOVS     R1,#+12
   \   000002E4   0x2002             MOVS     R0,#+2
   \   000002E6   0x.... 0x....      BL       gpio_set
    342              gpio_set(PORTC,11,LOW);//dp
   \   000002EA   0x2200             MOVS     R2,#+0
   \   000002EC   0x210B             MOVS     R1,#+11
   \   000002EE   0x2002             MOVS     R0,#+2
   \   000002F0   0x.... 0x....      BL       gpio_set
    343              gpio_set(PORTC,10,LOW);//c
   \   000002F4   0x2200             MOVS     R2,#+0
   \   000002F6   0x210A             MOVS     R1,#+10
   \   000002F8   0x2002             MOVS     R0,#+2
   \   000002FA   0x.... 0x....      BL       gpio_set
    344              gpio_set(PORTC, 9,LOW);//d
   \   000002FE   0x2200             MOVS     R2,#+0
   \   00000300   0x2109             MOVS     R1,#+9
   \   00000302   0x2002             MOVS     R0,#+2
   \   00000304   0x.... 0x....      BL       gpio_set
    345              gpio_set(PORTC, 8,LOW);//e
   \   00000308   0x2200             MOVS     R2,#+0
   \   0000030A   0x2108             MOVS     R1,#+8
   \   0000030C   0x2002             MOVS     R0,#+2
   \   0000030E   0x.... 0x....      BL       gpio_set
    346              break;
   \   00000312   0xE050             B.N      ??xianshi_11
    347            case 9:
    348              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_9: (+1)
   \   00000314   0x2200             MOVS     R2,#+0
   \   00000316   0x210F             MOVS     R1,#+15
   \   00000318   0x2002             MOVS     R0,#+2
   \   0000031A   0x.... 0x....      BL       gpio_set
    349              gpio_set(PORTC,14,LOW);//f
   \   0000031E   0x2200             MOVS     R2,#+0
   \   00000320   0x210E             MOVS     R1,#+14
   \   00000322   0x2002             MOVS     R0,#+2
   \   00000324   0x.... 0x....      BL       gpio_set
    350              gpio_set(PORTC,13,LOW);//a
   \   00000328   0x2200             MOVS     R2,#+0
   \   0000032A   0x210D             MOVS     R1,#+13
   \   0000032C   0x2002             MOVS     R0,#+2
   \   0000032E   0x.... 0x....      BL       gpio_set
    351              gpio_set(PORTC,12,LOW);//b
   \   00000332   0x2200             MOVS     R2,#+0
   \   00000334   0x210C             MOVS     R1,#+12
   \   00000336   0x2002             MOVS     R0,#+2
   \   00000338   0x.... 0x....      BL       gpio_set
    352              gpio_set(PORTC,11,LOW);//dp
   \   0000033C   0x2200             MOVS     R2,#+0
   \   0000033E   0x210B             MOVS     R1,#+11
   \   00000340   0x2002             MOVS     R0,#+2
   \   00000342   0x.... 0x....      BL       gpio_set
    353              gpio_set(PORTC,10,LOW);//c
   \   00000346   0x2200             MOVS     R2,#+0
   \   00000348   0x210A             MOVS     R1,#+10
   \   0000034A   0x2002             MOVS     R0,#+2
   \   0000034C   0x.... 0x....      BL       gpio_set
    354              gpio_set(PORTC, 9,LOW);//d
   \   00000350   0x2200             MOVS     R2,#+0
   \   00000352   0x2109             MOVS     R1,#+9
   \   00000354   0x2002             MOVS     R0,#+2
   \   00000356   0x.... 0x....      BL       gpio_set
    355              gpio_set(PORTC, 8,HIGH);//e
   \   0000035A   0x2201             MOVS     R2,#+1
   \   0000035C   0x2108             MOVS     R1,#+8
   \   0000035E   0x2002             MOVS     R0,#+2
   \   00000360   0x.... 0x....      BL       gpio_set
    356              break;
   \   00000364   0xE027             B.N      ??xianshi_11
    357            default:
    358              gpio_set(PORTC,15,LOW);//g
   \                     ??xianshi_10: (+1)
   \   00000366   0x2200             MOVS     R2,#+0
   \   00000368   0x210F             MOVS     R1,#+15
   \   0000036A   0x2002             MOVS     R0,#+2
   \   0000036C   0x.... 0x....      BL       gpio_set
    359              gpio_set(PORTC,14,HIGH);//f
   \   00000370   0x2201             MOVS     R2,#+1
   \   00000372   0x210E             MOVS     R1,#+14
   \   00000374   0x2002             MOVS     R0,#+2
   \   00000376   0x.... 0x....      BL       gpio_set
    360              gpio_set(PORTC,13,HIGH);//a
   \   0000037A   0x2201             MOVS     R2,#+1
   \   0000037C   0x210D             MOVS     R1,#+13
   \   0000037E   0x2002             MOVS     R0,#+2
   \   00000380   0x.... 0x....      BL       gpio_set
    361              gpio_set(PORTC,12,HIGH);//b
   \   00000384   0x2201             MOVS     R2,#+1
   \   00000386   0x210C             MOVS     R1,#+12
   \   00000388   0x2002             MOVS     R0,#+2
   \   0000038A   0x.... 0x....      BL       gpio_set
    362              gpio_set(PORTC,11,LOW);//dp
   \   0000038E   0x2200             MOVS     R2,#+0
   \   00000390   0x210B             MOVS     R1,#+11
   \   00000392   0x2002             MOVS     R0,#+2
   \   00000394   0x.... 0x....      BL       gpio_set
    363              gpio_set(PORTC,10,HIGH);//c
   \   00000398   0x2201             MOVS     R2,#+1
   \   0000039A   0x210A             MOVS     R1,#+10
   \   0000039C   0x2002             MOVS     R0,#+2
   \   0000039E   0x.... 0x....      BL       gpio_set
    364              gpio_set(PORTC, 9,HIGH);//d
   \   000003A2   0x2201             MOVS     R2,#+1
   \   000003A4   0x2109             MOVS     R1,#+9
   \   000003A6   0x2002             MOVS     R0,#+2
   \   000003A8   0x.... 0x....      BL       gpio_set
    365              gpio_set(PORTC, 8,HIGH);//e
   \   000003AC   0x2201             MOVS     R2,#+1
   \   000003AE   0x2108             MOVS     R1,#+8
   \   000003B0   0x2002             MOVS     R0,#+2
   \   000003B2   0x.... 0x....      BL       gpio_set
    366              break;
    367            }
    368          }
   \                     ??xianshi_11: (+1)
   \   000003B6   0xBD01             POP      {R0,PC}          ;; return

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   LED_INIT_xzm
         8   -> gpio_init
       8   xianshi
         8   -> gpio_set


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     100  LED_INIT_xzm
       1  PID_flag
   13800  Pic_Buffer
   13800  Pic_Erosion
       4  Sigma
       4  a1
       4  a_xzm
       4  ab
       4  all_line
     400  all_line_ceshi
       4  angle_p
       4  angle_xzm
       8  ax_xzm
       8  ay_xzm
       8  az_xzm
       4  b1
     400  beep_ceshi
       1  beep_flag
       4  bili
       4  carry
       4  cc
       4  ccc
       4  cccc
       1  center
       4  center_cankao
       4  change_speed
       4  change_speed_error
       4  chasubi
      12  code_xzm
       1  count
       4  count_xzm
       4  danxian_flag
       1  danxian_xuanxian_moshi_flag
       1  dengta_begin_flag
       4  dengta_begin_time
       1  dengta_count
       1  dengta_flag
       4  dengta_stop_count
       4  dengta_stop_distance
       1  dengta_stop_flag
       4  dev
       4  deviation
       4  distance_xzm
       4  duty1
       4  duty2
       4  duty3
       4  duty4
       4  edge_xzm
       4  ek_1_L
       4  ek_1_R
       4  ek_2_L
       4  ek_2_R
       4  ek_L
       4  ek_R
       4  erci_kp
       4  erci_kp_changshu
     480  flag
       1  imq_wuxiao_flag
       4  integral_a
       4  integral_b
       4  is_over_1_xzm
       4  is_over_2_xzm
       4  is_over_3_xzm
       4  is_over_4_xzm
       1  jiduandiuxian_flag
       1  juesai
       4  k_1
       4  k_2
       4  k_3
       4  k_4
       4  k_chashu
       4  k_chashu_speed
       4  k_integral
       4  k_integral_L
       4  k_integral_R
       4  k_pinjun
       4  k_speed_control
       4  k_useless
       1  key_flag
       1  km
       1  kn
     480  left
     480  left_flag
       4  left_line_only
     400  left_line_only_ceshi
       1  line_first
       1  line_fourth
       1  line_second
       1  line_third
     480  mid
     480  mid_flag
       4  mid_last
       4  mortal_in
       4  mortal_out
       1  no_line
       4  number_xzm
       1  photo_complete_flag
       4  pk
       4  podao_distance_count
       4  podao_moshi_distance
       1  podao_moshi_flag
       4  portion
       4  portion_error
       1  quanzhi_1
       1  quanzhi_2
     480  right
     480  right_flag
       4  right_line_only
     400  right_line_only_ceshi
       1  roberts_th
       4  ruihua_yuzhi
       4  sep
       4  show_data_flag
       1  show_parameter_flag
       1  show_photo_data_flag
       1  show_photo_flag
       1  show_photo_flagg
    4000  shuzu
    4000  shuzuL
    4000  shuzuR
    4000  shuzuz
    4000  speed_L
       4  speed_L_min
    4000  speed_R
       4  speed_R_min
       4  speed_bong
       1  speed_count
       4  speed_dev_ek
       4  speed_dev_ek1
       4  speed_dev_ek2
       4  speed_dev_pwm
       4  speed_duty
       4  speed_kd
       4  speed_kd1
       4  speed_kd2
       4  speed_ki
       4  speed_ki1
       4  speed_ki2
       4  speed_kp
       4  speed_kp1
       4  speed_kp2
       4  speed_max
       4  speed_min
       4  speed_pwm
       4  speed_pwm_L
       4  speed_pwm_L_end
       4  speed_pwm_R
       4  speed_pwm_R_end
       1  steer_choice
       4  steer_dd
       4  steer_dl
       4  steer_dp
       4  steer_duty
     400  steer_duty_ceshi
       4  steer_last
       4  steer_last_error
    4000  steer_luo
       4  steer_p
       4  steer_pre
       4  steer_pre_error
     400  steer_pre_error_ceshi
       1  stop_flag
       1  time
       1  time_flag
       1  tmprow
       4  true_speed
       4  true_speed_L
       4  true_speed_R
       4  true_speed_dev
       1  useless
     400  useless_ceshi
       4  useless_d
       4  useless_last
       4  useless_p
     424  vector_dev
       4  w_xzm
       4  wanted_speed
       4  wanted_speed_L
       4  wanted_speed_R
       4  whole_speed
       4  whole_speed_ek
       4  whole_speed_ek1
       4  whole_speed_ek2
       4  whole_speed_pwm
       8  wx_last_xzm
       8  wx_xzm
       8  wy_last_xzm
       8  wy_xzm
       8  wz_xzm
     952  xianshi
       1  xzm
       1  yichang_flag
       1  yuzhi
       4  zhidao_speed

 
 62 508 bytes in section .bss
    271 bytes in section .data
  1 052 bytes in section .text
 
  1 052 bytes of CODE memory
 62 779 bytes of DATA memory

Errors: none
Warnings: none

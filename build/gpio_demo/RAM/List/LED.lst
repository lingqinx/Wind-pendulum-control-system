###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     22/Dec/2013  00:55:21 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\src\drivers\LED\LED.C                              #
#    Command line =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\src\drivers\LED\LED.C -lCN                         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\ -lB                      #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\ -o                       #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\Obj\ --no_cse --no_unroll      #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I C:\Users\Administrator\Desktop\杨向军的K60模板 #
#                    _只有基本IO操作\build\gpio_demo\..\ -I                   #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\common\ -I               #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\cpu\ -I                  #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\ -I              #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\gpio\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\wdog\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\mcg\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\uart\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\lptmr\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\fun\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\led\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\i2c\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\MMA845x\ -I      #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\motor\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\pit\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\steer\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\ftm\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\DIPswitch\ -I    #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\dma\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\platforms\ -I            #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\projects\ -I             #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\projects\gpio_demo\ -Ol  #
#    List file    =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\LED.lst                   #
#    Object file  =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\Obj\LED.o                      #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本IO操作\src\drivers\LED\LED.C
      1          
      2          /*
      3          ************************************************************************
      4          *                北京邮电大学 K60 学习例程                                        
      5          * 文件名 :[LED.c] 
      6          * 描  述 ：LED函数定义
      7          *设计改进：snowwolf
      8          *  Email ：snowwolf2012@qq.com
      9          * 说  明 ：LED函数定义
     10          ***********************************************************************
     11          */
     12          
     13          #include  "LED.H"
     14          
     15          
     16          /*************************************************************************
     17          *  函数名称：LED_init
     18          *  功能说明：初始化LED端口，设置IO口为输出方向
     19          *  参数说明：无
     20          *  函数返回：无
     21          *  修改时间：2012-2-2   已测试
     22          *  备    注：
     23          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     24          void    LED_init(void)
     25          {
   \                     LED_init:
   \   00000000   0xB580             PUSH     {R7,LR}
     26              gpio_init(LED_PORT,LED0,GPO,LED_OFF);
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210E             MOVS     R1,#+14
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       gpio_init
     27              gpio_init(LED_PORT,LED1,GPO,LED_OFF);
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x210F             MOVS     R1,#+15
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       gpio_init
     28              gpio_init(LED_PORT,LED2,GPO,LED_OFF);
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x2110             MOVS     R1,#+16
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       gpio_init
     29              gpio_init(LED_PORT,LED3,GPO,LED_OFF);
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2111             MOVS     R1,#+17
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       gpio_init
     30          }
   \   00000032   0xBD01             POP      {R0,PC}          ;; return
     31          
     32          /*************************************************************************
     33          *  函数名称：led
     34          *  功能说明：设置LED灯亮灭
     35          *  参数说明：LEDn        LED端口（LED0、LED1、LED2、LED3）
     36          *            status      LED状态（LED_ON、LED_OFF）
     37          *  函数返回：无
     38          *  修改时间：2012-2-2   已测试
     39          *  备    注：
     40          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     41          void    led(LEDn ledn,LED_status status)
     42          {
     43              GPIO_SET_1bit(LED_PORT,ledn,status);
   \                     led:
   \   00000000   0x....             LDR.N    R2,??DataTable1
   \   00000002   0x6812             LDR      R2,[R2, #+0]
   \   00000004   0x6812             LDR      R2,[R2, #+0]
   \   00000006   0x2301             MOVS     R3,#+1
   \   00000008   0x4083             LSLS     R3,R3,R0
   \   0000000A   0x439A             BICS     R2,R2,R3
   \   0000000C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000E   0xF011 0x0101      ANDS     R1,R1,#0x1
   \   00000012   0xFA11 0xF000      LSLS     R0,R1,R0
   \   00000016   0x4310             ORRS     R0,R0,R2
   \   00000018   0x....             LDR.N    R1,??DataTable1
   \   0000001A   0x6809             LDR      R1,[R1, #+0]
   \   0000001C   0x6008             STR      R0,[R1, #+0]
     44          }
   \   0000001E   0x4770             BX       LR               ;; return
     45          

   \                                 In section .text, align 2, keep-with-next
     46          void LED_turn(LEDn ledn)
     47          {
     48              LED_TURN(ledn);
   \                     LED_turn:
   \   00000000   0x....             LDR.N    R1,??DataTable1
   \   00000002   0x6809             LDR      R1,[R1, #+0]
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0x2201             MOVS     R2,#+1
   \   00000008   0xFA12 0xF000      LSLS     R0,R2,R0
   \   0000000C   0x4048             EORS     R0,R0,R1
   \   0000000E   0x....             LDR.N    R1,??DataTable1
   \   00000010   0x6809             LDR      R1,[R1, #+0]
   \   00000012   0x6008             STR      R0,[R1, #+0]
     49          }
   \   00000014   0x4770             BX       LR               ;; return
     50          
     51          /*************************************************************************
     52          *  函数名称：water_lights
     53          *  功能说明：四个LED轮流闪烁，流水灯
     54          *  参数说明：无
     55          *  函数返回：无
     56          *  修改时间：2012-2-10   已测试
     57          *  备    注：
     58          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     59          void water_lights(void)
     60          {
   \                     water_lights:
   \   00000000   0xB510             PUSH     {R4,LR}
     61          
     62              LEDn    n;
     63              LED_INIT();
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210E             MOVS     R1,#+14
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       gpio_init
   \   0000000E   0x2301             MOVS     R3,#+1
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x210F             MOVS     R1,#+15
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       gpio_init
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x2110             MOVS     R1,#+16
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       gpio_init
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2111             MOVS     R1,#+17
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x.... 0x....      BL       gpio_init
     64              for(n=LED0;n<=LED3;n++)
   \   00000032   0x240E             MOVS     R4,#+14
   \   00000034   0xE00D             B.N      ??water_lights_0
     65              {
     66                  led(n,LED_ON);
   \                     ??water_lights_1:
   \   00000036   0x2100             MOVS     R1,#+0
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x.... 0x....      BL       led
     67                  LED_DELAY_MS(100);
   \   00000040   0x2064             MOVS     R0,#+100
   \   00000042   0x.... 0x....      BL       delayms
     68                  led(n,LED_OFF);
   \   00000046   0x2101             MOVS     R1,#+1
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x.... 0x....      BL       led
     69              }
   \   00000050   0x1C64             ADDS     R4,R4,#+1
   \                     ??water_lights_0:
   \   00000052   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000054   0x2C12             CMP      R4,#+18
   \   00000056   0xD3EE             BCC.N    ??water_lights_1
     70          }
   \   00000058   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     GPIOx
     71          
     72          
     73          
     74          
     75          
     76          
     77          
     78          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  LED_init
             8 -> gpio_init
        0  LED_turn
        0  led
        8  water_lights
             8 -> delayms
             8 -> gpio_init
             8 -> led


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      52  LED_init
      22  LED_turn
      32  led
      90  water_lights

 
 200 bytes in section .text
 
 200 bytes of CODE memory

Errors: none
Warnings: none

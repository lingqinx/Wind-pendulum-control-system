###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     22/Dec/2013  00:55:23 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\src\drivers\wdog\wdog.c                            #
#    Command line =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\src\drivers\wdog\wdog.c -lCN                       #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\ -lB                      #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\ -o                       #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\Obj\ --no_cse --no_unroll      #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.0\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I C:\Users\Administrator\Desktop\杨向军的K60模板 #
#                    _只有基本IO操作\build\gpio_demo\..\ -I                   #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\common\ -I               #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\cpu\ -I                  #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\ -I              #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\gpio\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\wdog\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\mcg\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\uart\ -I         #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\lptmr\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\fun\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\led\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\i2c\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\MMA845x\ -I      #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\motor\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\pit\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\steer\ -I        #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\ftm\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\DIPswitch\ -I    #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\drivers\dma\ -I          #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\platforms\ -I            #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\projects\ -I             #
#                    C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\..\..\src\projects\gpio_demo\ -Ol  #
#    List file    =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\List\wdog.lst                  #
#    Object file  =  C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本I #
#                    O操作\build\gpio_demo\RAM\Obj\wdog.o                     #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\杨向军的K60模板_只有基本IO操作\src\drivers\wdog\wdog.c
      1          /*
      2           * File:        wdog.c
      3           * Purpose:     Provide common watchdog module routines
      4           *
      5           * Notes:		Need to add more functionality. Right now it
      6           * 				is just a disable routine since we know almost
      7           * 				all projects will need that.       
      8           *              
      9           */
     10          
     11          #include "common.h"
     12          #include "wdog.h"
     13                 
     14          
     15          /*
     16          ********************************************************************************
     17          ** 函数名: wdog_disable                                                      
     18          ** 功  能: 关闭看门狗模块                                                  
     19          ** 参  数: 无			  					  
     20          ** 返  回: 无                                                              
     21          ** 说  明: 无                                                             
     22          ** 参  考：手册                                                                
     23          *******************************************************************************
     24          */

   \                                 In section .text, align 2, keep-with-next
     25          void wdog_disable(void)
     26          {
   \                     wdog_disable:
   \   00000000   0xB580             PUSH     {R7,LR}
     27          	/* First unlock the watchdog so that we can write to registers */
     28          	/*给看门狗模块解锁，以便写寄存器                               */                               
     29                  wdog_unlock();
   \   00000002   0x.... 0x....      BL       wdog_unlock
     30          	
     31          	/* Clear the WDOGEN bit to disable the watchdog               */
     32                  /*清除使能位，关闭看门狗                                      */
     33          	WDOG_STCTRLH &= ~WDOG_STCTRLH_WDOGEN_MASK;
   \   00000006   0x....             LDR.N    R0,??DataTable1  ;; 0x40052000
   \   00000008   0x8800             LDRH     R0,[R0, #+0]
   \   0000000A   0xF64F 0x71FE      MOVW     R1,#+65534
   \   0000000E   0x4008             ANDS     R0,R1,R0
   \   00000010   0x....             LDR.N    R1,??DataTable1  ;; 0x40052000
   \   00000012   0x8008             STRH     R0,[R1, #+0]
     34          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
     35          
     36          /*
     37          ****************************************************************************
     38          ** 函数名: wdog_unlock                                                      *
     39          ** 功  能: 看门狗解锁                                                       * 
     40          ** 参  数: 无							           *	
     41          ** 返  回: 无                                                               *
     42          ** 说  明: 无  
     43          **      Watchdog timer unlock routine. Writing 0xC520 followed by 0xD928
     44          **      will unlock the write once registers in the WDOG so they are writable
     45          **      within the WCT period.
     46          *****************************************************************************
     47           */

   \                                 In section .text, align 4, keep-with-next
     48          void wdog_unlock(void)
     49          {
     50            /* NOTE: DO NOT SINGLE STEP THROUGH THIS FUNCTION!!! */
     51            /* There are timing requirements for the execution of the unlock. If
     52             * you single step through the code you will cause the CPU to reset.
     53             */
     54          
     55          	/* This sequence must execute within 20 clock cycles, so disable
     56                   * interrupts will keep the code atomic and ensure the timing.
     57                   */
     58                  /* 注意: 不要单步调试此程序!!! ，否则会引起CPU复位*/
     59                  /*关总中断                                        */
     60                  DisableInterrupts;
   \                     wdog_unlock:
   \   00000000   0xB672             CPSID i         
     61          	
     62          	/* Write 0xC520 to the unlock register 写解锁寄存器 */
     63          	WDOG_UNLOCK = 0xC520;
   \   00000002   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4005200e
   \   00000004   0xF24C 0x5120      MOVW     R1,#+50464
   \   00000008   0x8001             STRH     R1,[R0, #+0]
     64          	
     65          	/* Followed by 0xD928 to complete the unlock 完成解锁*/
     66          	WDOG_UNLOCK = 0xD928;
   \   0000000A   0x....             LDR.N    R0,??DataTable1_1  ;; 0x4005200e
   \   0000000C   0xF64D 0x1128      MOVW     R1,#+55592
   \   00000010   0x8001             STRH     R1,[R0, #+0]
     67          	
     68          	/* Re-enable interrupts now that we are done */	
     69                 	EnableInterrupts;
   \   00000012   0xB662             CPSIE i         
     70          }
   \   00000014   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40052000         DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x4005200E         DC32     0x4005200e
     71          /********************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  wdog_disable
             8 -> wdog_unlock
        0  wdog_unlock


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
      22  wdog_disable
      22  wdog_unlock

 
 52 bytes in section .text
 
 52 bytes of CODE memory

Errors: none
Warnings: none

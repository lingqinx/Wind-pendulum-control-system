###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.30.1.53127/W32 for ARM     05/Apr/2012  04:25:36 #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\workspace\myworkspace\SW_K60\src\common\assert.c      #
#    Command line =  D:\workspace\myworkspace\SW_K60\src\common\assert.c      #
#                    -lCN D:\workspace\myworkspace\SW_K60\build\SX_demo\RAM\L #
#                    ist\ -lB D:\workspace\myworkspace\SW_K60\build\SX_demo\R #
#                    AM\List\ -o D:\workspace\myworkspace\SW_K60\build\SX_dem #
#                    o\RAM\Obj\ --no_cse --no_unroll --no_inline              #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.0_3\arm\INC\c\DLib_Config_N #
#                    ormal.h" -I D:\workspace\myworkspace\SW_K60\build\SX_dem #
#                    o\..\ -I D:\workspace\myworkspace\SW_K60\build\SX_demo\. #
#                    .\..\src\common\ -I D:\workspace\myworkspace\SW_K60\buil #
#                    d\SX_demo\..\..\src\cpu\ -I                              #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\ -I D:\workspace\myworkspace\SW_K60\build\SX_dem #
#                    o\..\..\src\drivers\gpio\ -I                             #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\wdog\ -I D:\workspace\myworkspace\SW_K60\build\S #
#                    X_demo\..\..\src\drivers\mcg\ -I                         #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\uart\ -I D:\workspace\myworkspace\SW_K60\build\S #
#                    X_demo\..\..\src\drivers\lptmr\ -I                       #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\LED\ -I D:\workspace\myworkspace\SW_K60\build\SX #
#                    _demo\..\..\src\drivers\fun\ -I                          #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\FTM\ -I D:\workspace\myworkspace\SW_K60\build\SX #
#                    _demo\..\..\src\drivers\pit\ -I                          #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\DIPswitch\ -I D:\workspace\myworkspace\SW_K60\bu #
#                    ild\SX_demo\..\..\src\drivers\steer\ -I                  #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\ccd\ -I D:\workspace\myworkspace\SW_K60\build\SX #
#                    _demo\..\..\src\drivers\dma\ -I                          #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    drivers\motor\ -I D:\workspace\myworkspace\SW_K60\build\ #
#                    SX_demo\..\..\src\platforms\ -I                          #
#                    D:\workspace\myworkspace\SW_K60\build\SX_demo\..\..\src\ #
#                    projects\ -I D:\workspace\myworkspace\SW_K60\build\SX_de #
#                    mo\..\..\src\projects\SX_demo\ -Ol                       #
#    List file    =  D:\workspace\myworkspace\SW_K60\build\SX_demo\RAM\List\a #
#                    ssert.lst                                                #
#    Object file  =  D:\workspace\myworkspace\SW_K60\build\SX_demo\RAM\Obj\as #
#                    sert.o                                                   #
#                                                                             #
#                                                                             #
###############################################################################

D:\workspace\myworkspace\SW_K60\src\common\assert.c
      1          /******************** (C) COPYRIGHT 2011 野火嵌入式开发工作室 ********************
      2           * 文件名       ：assert.c
      3           * 描述         ：断言条件不成立的执行函数
      4           *
      5           * 实验平台     ：野火kinetis开发板
      6           * 库版本       ：
      7           * 嵌入系统     ：
      8           * 备    注     ：
      9           *
     10           * 作者         ：
     11           * 淘宝店       ：http://firestm32.taobao.com
     12           * 技术支持论坛 ：http://www.ourdev.cn/bbs/bbs_list.jsp?bbs_id=1008
     13          **********************************************************************************/	
     14          
     15          /*
     16           * File:        assert.c
     17           * Purpose:     Provide macro for software assertions
     18           *
     19           * Notes:       ASSERT macro defined in assert.h calls assert_failed()
     20           */
     21          
     22          #include "common.h"
     23          #include "uart.h"
     24          #include "led.h"
     25          
     26          //const char ASSERT_FAILED_STR[] = "Assertion failed in %s at line %d\n";
     27          
     28          /********************************************************************/
     29          //如果断言条件不成立，进入了错误状态，就会打印错误信息和用LED来显示状态

   \                                 In section .text, align 2, keep-with-next
     30          void assert_failed(char *file, int line)
     31          {
   \                     assert_failed:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     32              int i,j;
     33              LED_init();
   \   00000006   0x.... 0x....      BL       LED_init
     34              while (1)
     35              {
     36          #ifdef DEBUG_PRINT
     37                  uart0Printf("断言发生在%s文件的第%d行！\n断言条件不成立，请检测错误原因.\n\n", file, line);  //打印错误信息
   \                     ??assert_failed_0:
   \   0000000A   0x002A             MOVS     R2,R5
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x....             LDR.N    R0,??DataTable1
   \   00000010   0x.... 0x....      BL       uart0Printf
     38          #endif
     39                  for(j = 0xf;j;j--)
   \   00000014   0x200F             MOVS     R0,#+15
   \   00000016   0xE003             B.N      ??assert_failed_1
     40                  {
     41                    for (i = 0xffffff; i; i--) ;
     42                    LED_TURN(LED0);LED_TURN(LED1);LED_TURN(LED2);LED_TURN(LED3);//全灯闪烁指示进入错误状态
     43                    for (i = 0xffffff; i; i--) ;
   \                     ??assert_failed_2:
   \   00000018   0x1E49             SUBS     R1,R1,#+1
   \                     ??assert_failed_3:
   \   0000001A   0x2900             CMP      R1,#+0
   \   0000001C   0xD1FC             BNE.N    ??assert_failed_2
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \                     ??assert_failed_1:
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD0F2             BEQ.N    ??assert_failed_0
   \   00000024   0xF07F 0x417F      MVNS     R1,#-16777216
   \   00000028   0xE000             B.N      ??assert_failed_4
   \                     ??assert_failed_5:
   \   0000002A   0x1E49             SUBS     R1,R1,#+1
   \                     ??assert_failed_4:
   \   0000002C   0x2900             CMP      R1,#+0
   \   0000002E   0xD1FC             BNE.N    ??assert_failed_5
   \   00000030   0x....             LDR.N    R1,??DataTable1_1
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0xF491 0x4180      EORS     R1,R1,#0x4000
   \   0000003A   0x....             LDR.N    R2,??DataTable1_1
   \   0000003C   0x6812             LDR      R2,[R2, #+0]
   \   0000003E   0x6011             STR      R1,[R2, #+0]
   \   00000040   0x....             LDR.N    R1,??DataTable1_1
   \   00000042   0x6809             LDR      R1,[R1, #+0]
   \   00000044   0x6809             LDR      R1,[R1, #+0]
   \   00000046   0xF491 0x4100      EORS     R1,R1,#0x8000
   \   0000004A   0x....             LDR.N    R2,??DataTable1_1
   \   0000004C   0x6812             LDR      R2,[R2, #+0]
   \   0000004E   0x6011             STR      R1,[R2, #+0]
   \   00000050   0x....             LDR.N    R1,??DataTable1_1
   \   00000052   0x6809             LDR      R1,[R1, #+0]
   \   00000054   0x6809             LDR      R1,[R1, #+0]
   \   00000056   0xF491 0x3180      EORS     R1,R1,#0x10000
   \   0000005A   0x....             LDR.N    R2,??DataTable1_1
   \   0000005C   0x6812             LDR      R2,[R2, #+0]
   \   0000005E   0x6011             STR      R1,[R2, #+0]
   \   00000060   0x....             LDR.N    R1,??DataTable1_1
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x6809             LDR      R1,[R1, #+0]
   \   00000066   0xF491 0x3100      EORS     R1,R1,#0x20000
   \   0000006A   0x....             LDR.N    R2,??DataTable1_1
   \   0000006C   0x6812             LDR      R2,[R2, #+0]
   \   0000006E   0x6011             STR      R1,[R2, #+0]
   \   00000070   0xF07F 0x417F      MVNS     R1,#-16777216
   \   00000074   0xE7D1             B.N      ??assert_failed_3
     44                  }
     45              }
     46          }
     47          

   \                                 In section .text, align 2, keep-with-next
     48          void assert_failed_rst(char *file, int line,char *rst)
     49          {
   \                     assert_failed_rst:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
     50              int i,j;
     51              LED_init();
   \   00000008   0x.... 0x....      BL       LED_init
     52              while (1)
     53              {
     54          #ifdef DEBUG_PRINT
     55                  uart0Printf("断言发生在%s文件的第%d行！\n断言条件不成立.\n", file, line);  //打印错误信息
   \                     ??assert_failed_rst_0:
   \   0000000C   0x002A             MOVS     R2,R5
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0x....             LDR.N    R0,??DataTable1_2
   \   00000012   0x.... 0x....      BL       uart0Printf
     56                  uart0Printf("错误原因:%s\n\n",rst);
   \   00000016   0x0031             MOVS     R1,R6
   \   00000018   0x....             LDR.N    R0,??DataTable1_3
   \   0000001A   0x.... 0x....      BL       uart0Printf
     57          #endif
     58                  for(j = 0x5f;j;j--)
   \   0000001E   0x205F             MOVS     R0,#+95
   \   00000020   0xE003             B.N      ??assert_failed_rst_1
     59                  {
     60                    for (i = 0x7ffff; i; i--) ;
     61                    LED_TURN(LED0);LED_TURN(LED1);LED_TURN(LED2);LED_TURN(LED3);//全灯闪烁指示进入错误状态
     62                    for (i = 0x7ffff; i; i--) ;
   \                     ??assert_failed_rst_2:
   \   00000022   0x1E49             SUBS     R1,R1,#+1
   \                     ??assert_failed_rst_3:
   \   00000024   0x2900             CMP      R1,#+0
   \   00000026   0xD1FC             BNE.N    ??assert_failed_rst_2
   \   00000028   0x1E40             SUBS     R0,R0,#+1
   \                     ??assert_failed_rst_1:
   \   0000002A   0x2800             CMP      R0,#+0
   \   0000002C   0xD0EE             BEQ.N    ??assert_failed_rst_0
   \   0000002E   0x....             LDR.N    R1,??DataTable1_4  ;; 0x7ffff
   \   00000030   0xE000             B.N      ??assert_failed_rst_4
   \                     ??assert_failed_rst_5:
   \   00000032   0x1E49             SUBS     R1,R1,#+1
   \                     ??assert_failed_rst_4:
   \   00000034   0x2900             CMP      R1,#+0
   \   00000036   0xD1FC             BNE.N    ??assert_failed_rst_5
   \   00000038   0x....             LDR.N    R1,??DataTable1_1
   \   0000003A   0x6809             LDR      R1,[R1, #+0]
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0xF491 0x4180      EORS     R1,R1,#0x4000
   \   00000042   0x....             LDR.N    R2,??DataTable1_1
   \   00000044   0x6812             LDR      R2,[R2, #+0]
   \   00000046   0x6011             STR      R1,[R2, #+0]
   \   00000048   0x....             LDR.N    R1,??DataTable1_1
   \   0000004A   0x6809             LDR      R1,[R1, #+0]
   \   0000004C   0x6809             LDR      R1,[R1, #+0]
   \   0000004E   0xF491 0x4100      EORS     R1,R1,#0x8000
   \   00000052   0x....             LDR.N    R2,??DataTable1_1
   \   00000054   0x6812             LDR      R2,[R2, #+0]
   \   00000056   0x6011             STR      R1,[R2, #+0]
   \   00000058   0x....             LDR.N    R1,??DataTable1_1
   \   0000005A   0x6809             LDR      R1,[R1, #+0]
   \   0000005C   0x6809             LDR      R1,[R1, #+0]
   \   0000005E   0xF491 0x3180      EORS     R1,R1,#0x10000
   \   00000062   0x....             LDR.N    R2,??DataTable1_1
   \   00000064   0x6812             LDR      R2,[R2, #+0]
   \   00000066   0x6011             STR      R1,[R2, #+0]
   \   00000068   0x....             LDR.N    R1,??DataTable1_1
   \   0000006A   0x6809             LDR      R1,[R1, #+0]
   \   0000006C   0x6809             LDR      R1,[R1, #+0]
   \   0000006E   0xF491 0x3100      EORS     R1,R1,#0x20000
   \   00000072   0x....             LDR.N    R2,??DataTable1_1
   \   00000074   0x6812             LDR      R2,[R2, #+0]
   \   00000076   0x6011             STR      R1,[R2, #+0]
   \   00000078   0x....             LDR.N    R1,??DataTable1_4  ;; 0x7ffff
   \   0000007A   0xE7D3             B.N      ??assert_failed_rst_3
     63                  }
     64              }
     65          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     `?<Constant "\\266\\317\\321\\324\\267\\242\\311\\372\\3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     GPIOx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     `?<Constant "\\266\\317\\321\\324\\267\\242\\311\\372\\3_1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     `?<Constant "\\264\\355\\316\\363\\324\\255\\322\\362:%`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x0007FFFF         DC32     0x7ffff

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\266\\317\\321\\324\\267\\242\\311\\372\\3`:
   \   00000000   0xB6 0xCF          DC8 0B6H, 0CFH, 0D1H, 0D4H, 0B7H, 0A2H, 0C9H, 0FAH
   \              0xD1 0xD4    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \   00000008   0xD4 0xDA          DC8 0D4H, 0DAH, 25H, 73H, 0CEH, 0C4H, 0BCH, 0FEH
   \              0x25 0x73    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \   00000010   0xB5 0xC4          DC8 0B5H, 0C4H, 0B5H, 0DAH, 25H, 64H, 0D0H, 0D0H
   \              0xB5 0xDA    
   \              0x25 0x64    
   \              0xD0 0xD0    
   \   00000018   0xA3 0xA1          DC8 0A3H, 0A1H, 0AH, 0B6H, 0CFH, 0D1H, 0D4H, 0CCH
   \              0x0A 0xB6    
   \              0xCF 0xD1    
   \              0xD4 0xCC    
   \   00000020   0xF5 0xBC          DC8 0F5H, 0BCH, 0FEH, 0B2H, 0BBH, 0B3H, 0C9H, 0C1H
   \              0xFE 0xB2    
   \              0xBB 0xB3    
   \              0xC9 0xC1    
   \   00000028   0xA2 0xA3          DC8 0A2H, 0A3H, 0ACH, 0C7H, 0EBH, 0BCH, 0ECH, 0B2H
   \              0xAC 0xC7    
   \              0xEB 0xBC    
   \              0xEC 0xB2    
   \   00000030   0xE2 0xB4          DC8 0E2H, 0B4H, 0EDH, 0CEH, 0F3H, 0D4H, 0ADH, 0D2H
   \              0xED 0xCE    
   \              0xF3 0xD4    
   \              0xAD 0xD2    
   \   00000038   0xF2 0x2E          DC8 0F2H, 2EH, 0AH, 0AH, 0
   \              0x0A 0x0A    
   \              0x00         
   \   0000003D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\266\\317\\321\\324\\267\\242\\311\\372\\3_1`:
   \   00000000   0xB6 0xCF          DC8 "\266\317\321\324\267\242\311\372\324\332%s\316\304\274\376\265\304\265\332%d\320\320\243\241\012\266\317\321\324\314\365\274\376\262\273\263\311\301\242.\012"
   \              0xD1 0xD4    
   \              0xB7 0xA2    
   \              0xC9 0xFA    
   \              0xD4 0xDA    
   \              0x25 0x73    
   \              0xCE 0xC4    
   \              0xBC 0xFE    
   \              0xB5 0xC4    
   \              0xB5 0xDA    
   \              0x25 0x64    
   \              0xD0 0xD0    
   \              0xA3 0xA1    
   \              0x0A 0xB6    
   \              0xCF 0xD1    
   \              0xD4 0xCC    
   \              0xF5 0xBC    
   \              0xFE 0xB2    
   \              0xBB 0xB3    
   \              0xC9 0xC1    
   \              0xA2 0x2E    
   \              0x0A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "\\264\\355\\316\\363\\324\\255\\322\\362:%`:
   \   00000000   0xB4 0xED          DC8 "\264\355\316\363\324\255\322\362:%s\012\012"
   \              0xCE 0xF3    
   \              0xD4 0xAD    
   \              0xD2 0xF2    
   \              0x3A 0x25    
   \              0x73 0x0A    
   \              0x0A 0x00    
   \   0000000E   0x00 0x00          DC8 0, 0
     66          /********************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       16  assert_failed
             16 -> LED_init
             16 -> uart0Printf
       16  assert_failed_rst
             16 -> LED_init
             16 -> uart0Printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      16  ?<Constant "\264\355\316\363\324\255\322\362:%
      64  ?<Constant "\266\317\321\324\267\242\311\372\3
      44  ?<Constant "\266\317\321\324\267\242\311\372\3_1
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
     118  assert_failed
     124  assert_failed_rst

 
 124 bytes in section .rodata
 262 bytes in section .text
 
 262 bytes of CODE  memory
 124 bytes of CONST memory

Errors: none
Warnings: none
